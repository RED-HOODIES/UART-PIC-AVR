

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Dec 05 23:20:17 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Version 2.20
    68                           ; Generated 12/02/2020 GMT
    69                           ; 
    70                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F25K50 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101   000000                     
   102                           	psect	idataBANK0
   103   0039B6                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for IMPRIMIR@F5133
   107   0039B6  56                 	db	86
   108   0039B7  4F                 	db	79
   109   0039B8  4C                 	db	76
   110   0039B9  54                 	db	84
   111   0039BA  41                 	db	65
   112   0039BB  4A                 	db	74
   113   0039BC  45                 	db	69
   114   0039BD  3A                 	db	58
   115   0039BE  20                 	db	32
   116   0039BF  00                 	db	0
   117   0039C0  00                 	db	0
   118   0039C1  00                 	db	0
   119   0039C2  00                 	db	0
   120   0039C3  00                 	db	0
   121   0039C4  00                 	db	0
   122   0039C5  00                 	db	0
   123   0039C6  00                 	db	0
   124   0039C7  00                 	db	0
   125   0039C8  00                 	db	0
   126   0039C9  00                 	db	0
   127   0039CA  00                 	db	0
   128   0039CB  00                 	db	0
   129   0039CC  00                 	db	0
   130   0039CD  00                 	db	0
   131   0039CE  00                 	db	0
   132   0039CF  00                 	db	0
   133   0039D0  00                 	db	0
   134   0039D1  00                 	db	0
   135   0039D2  00                 	db	0
   136   0039D3  00                 	db	0
   137                           
   138                           	psect	idataBANK2
   139   00368A                     __pidataBANK2:
   140                           	callstack 0
   141                           
   142                           ;initializer for IMPRIMIR@F5139
   143   00368A  23                 	db	35
   144   00368B  00                 	db	0
   145   00368C  00                 	db	0
   146   00368D  00                 	db	0
   147   00368E  00                 	db	0
   148   00368F  00                 	db	0
   149   003690  00                 	db	0
   150   003691  00                 	db	0
   151   003692  00                 	db	0
   152   003693  00                 	db	0
   153   003694  00                 	db	0
   154   003695  00                 	db	0
   155   003696  00                 	db	0
   156   003697  00                 	db	0
   157   003698  00                 	db	0
   158   003699  00                 	db	0
   159   00369A  00                 	db	0
   160   00369B  00                 	db	0
   161   00369C  00                 	db	0
   162   00369D  00                 	db	0
   163   00369E  00                 	db	0
   164   00369F  00                 	db	0
   165   0036A0  00                 	db	0
   166   0036A1  00                 	db	0
   167   0036A2  00                 	db	0
   168   0036A3  00                 	db	0
   169   0036A4  00                 	db	0
   170   0036A5  00                 	db	0
   171   0036A6  00                 	db	0
   172   0036A7  00                 	db	0
   173                           
   174                           ;initializer for IMPRIMIR@F5137
   175   0036A8  41                 	db	65
   176   0036A9  44                 	db	68
   177   0036AA  52                 	db	82
   178   0036AB  45                 	db	69
   179   0036AC  53                 	db	83
   180   0036AD  3A                 	db	58
   181   0036AE  20                 	db	32
   182   0036AF  00                 	db	0
   183   0036B0  00                 	db	0
   184   0036B1  00                 	db	0
   185   0036B2  00                 	db	0
   186   0036B3  00                 	db	0
   187   0036B4  00                 	db	0
   188   0036B5  00                 	db	0
   189   0036B6  00                 	db	0
   190   0036B7  00                 	db	0
   191   0036B8  00                 	db	0
   192   0036B9  00                 	db	0
   193   0036BA  00                 	db	0
   194   0036BB  00                 	db	0
   195   0036BC  00                 	db	0
   196   0036BD  00                 	db	0
   197   0036BE  00                 	db	0
   198   0036BF  00                 	db	0
   199   0036C0  00                 	db	0
   200   0036C1  00                 	db	0
   201   0036C2  00                 	db	0
   202   0036C3  00                 	db	0
   203   0036C4  00                 	db	0
   204   0036C5  00                 	db	0
   205                           
   206                           ;initializer for IMPRIMIR@F5135
   207   0036C6  56                 	db	86
   208   0036C7  20                 	db	32
   209   0036C8  20                 	db	32
   210   0036C9  20                 	db	32
   211   0036CA  00                 	db	0
   212   0036CB  00                 	db	0
   213   0036CC  00                 	db	0
   214   0036CD  00                 	db	0
   215   0036CE  00                 	db	0
   216   0036CF  00                 	db	0
   217   0036D0  00                 	db	0
   218   0036D1  00                 	db	0
   219   0036D2  00                 	db	0
   220   0036D3  00                 	db	0
   221   0036D4  00                 	db	0
   222   0036D5  00                 	db	0
   223   0036D6  00                 	db	0
   224   0036D7  00                 	db	0
   225   0036D8  00                 	db	0
   226   0036D9  00                 	db	0
   227   0036DA  00                 	db	0
   228   0036DB  00                 	db	0
   229   0036DC  00                 	db	0
   230   0036DD  00                 	db	0
   231   0036DE  00                 	db	0
   232   0036DF  00                 	db	0
   233   0036E0  00                 	db	0
   234   0036E1  00                 	db	0
   235   0036E2  00                 	db	0
   236   0036E3  00                 	db	0
   237   000000                     _ADRESL	set	4035
   238   000000                     _ADRESH	set	4036
   239   000000                     _TXREG	set	4013
   240   000000                     _RCREG	set	4014
   241   000000                     _SPBRG	set	4015
   242   000000                     _TRISB1	set	31897
   243   000000                     _TRISA	set	3986
   244   000000                     _GO_nDONE	set	32273
   245   000000                     _PORTAbits	set	3968
   246   000000                     _LATAbits	set	3977
   247   000000                     _TRISAbits	set	3986
   248   000000                     _TRISCbits	set	3988
   249   000000                     _PIR1bits	set	3998
   250   000000                     _RCSTAbits	set	4011
   251   000000                     _TXSTAbits	set	4012
   252   000000                     _ADCON2	set	4032
   253   000000                     _ADCON1	set	4033
   254   000000                     _ADCON0	set	4034
   255   000000                     _OSCCON	set	4051
   256                           
   257                           	psect	smallconst
   258   000800                     __psmallconst:
   259                           	callstack 0
   260   000800  00                 	db	0
   261   000801                     STR_4:
   262                           
   263                           ; BSR set to: 0
   264   000801  56                 	db	86	;'V'
   265   000802  4F                 	db	79	;'O'
   266   000803  4C                 	db	76	;'L'
   267   000804  54                 	db	84	;'T'
   268   000805  41                 	db	65	;'A'
   269   000806  4A                 	db	74	;'J'
   270   000807  45                 	db	69	;'E'
   271   000808  3A                 	db	58	;':'
   272   000809  20                 	db	32
   273   00080A  00                 	db	0
   274   00080B                     STR_2:
   275                           
   276                           ; BSR set to: 0
   277   00080B  41                 	db	65	;'A'
   278   00080C  44                 	db	68	;'D'
   279   00080D  52                 	db	82	;'R'
   280   00080E  45                 	db	69	;'E'
   281   00080F  53                 	db	83	;'S'
   282   000810  3A                 	db	58	;':'
   283   000811  20                 	db	32
   284   000812  00                 	db	0
   285   000813                     STR_3:
   286                           
   287                           ; BSR set to: 0
   288   000813  25                 	db	37
   289   000814  2E                 	db	46
   290   000815  32                 	db	50	;'2'
   291   000816  66                 	db	102	;'f'
   292   000817  00                 	db	0
   293   000818                     STR_6:
   294                           
   295                           ; BSR set to: 0
   296   000818  69                 	db	105	;'i'
   297   000819  6E                 	db	110	;'n'
   298   00081A  66                 	db	102	;'f'
   299   00081B  00                 	db	0
   300   00081C                     STR_9:
   301                           
   302                           ; BSR set to: 0
   303   00081C  6E                 	db	110	;'n'
   304   00081D  61                 	db	97	;'a'
   305   00081E  6E                 	db	110	;'n'
   306   00081F  00                 	db	0
   307   000820                     STR_1:
   308                           
   309                           ; BSR set to: 0
   310   000820  25                 	db	37
   311   000821  64                 	db	100	;'d'
   312   000822  00                 	db	0
   313   000823                     STR_5:
   314                           
   315                           ; BSR set to: 0
   316   000823  0A                 	db	10
   317   000824  00                 	db	0
   318   000825  00                 	db	0	; dummy byte at the end
   319   000000                     
   320                           ; #config settings
   321                           
   322                           	psect	cinit
   323   0034B0                     __pcinit:
   324                           	callstack 0
   325   0034B0                     start_initialization:
   326                           	callstack 0
   327   0034B0                     __initialization:
   328                           	callstack 0
   329                           
   330                           ; Initialize objects allocated to BANK2 (90 bytes)
   331                           ; load TBLPTR registers with __pidataBANK2
   332   0034B0  0E8A               	movlw	low __pidataBANK2
   333   0034B2  6EF6               	movwf	tblptrl,c
   334   0034B4  0E36               	movlw	high __pidataBANK2
   335   0034B6  6EF7               	movwf	tblptrh,c
   336   0034B8  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   337   0034BA  6EF8               	movwf	tblptru,c
   338   0034BC  EE02  F000         	lfsr	0,__pdataBANK2
   339   0034C0  EE10 F05A          	lfsr	1,90
   340   0034C4                     copy_data0:
   341   0034C4  0009               	tblrd		*+
   342   0034C6  CFF5 FFEE          	movff	tablat,postinc0
   343   0034CA  50E5               	movf	postdec1,w,c
   344   0034CC  50E1               	movf	fsr1l,w,c
   345   0034CE  E1FA               	bnz	copy_data0
   346                           
   347                           ; Initialize objects allocated to BANK0 (30 bytes)
   348                           ; load TBLPTR registers with __pidataBANK0
   349   0034D0  0EB6               	movlw	low __pidataBANK0
   350   0034D2  6EF6               	movwf	tblptrl,c
   351   0034D4  0E39               	movlw	high __pidataBANK0
   352   0034D6  6EF7               	movwf	tblptrh,c
   353   0034D8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   354   0034DA  6EF8               	movwf	tblptru,c
   355   0034DC  EE00  F0B9         	lfsr	0,__pdataBANK0
   356   0034E0  EE10 F01E          	lfsr	1,30
   357   0034E4                     copy_data1:
   358   0034E4  0009               	tblrd		*+
   359   0034E6  CFF5 FFEE          	movff	tablat,postinc0
   360   0034EA  50E5               	movf	postdec1,w,c
   361   0034EC  50E1               	movf	fsr1l,w,c
   362   0034EE  E1FA               	bnz	copy_data1
   363                           
   364                           ; Clear objects allocated to BANK1 (84 bytes)
   365   0034F0  EE01  F0A0         	lfsr	0,__pbssBANK1
   366   0034F4  0E54               	movlw	84
   367   0034F6                     clear_0:
   368   0034F6  6AEE               	clrf	postinc0,c
   369   0034F8  06E8               	decf	wreg,f,c
   370   0034FA  E1FD               	bnz	clear_0
   371                           
   372                           ; Clear objects allocated to BANK0 (17 bytes)
   373   0034FC  EE00  F0D7         	lfsr	0,__pbssBANK0
   374   003500  0E11               	movlw	17
   375   003502                     clear_1:
   376   003502  6AEE               	clrf	postinc0,c
   377   003504  06E8               	decf	wreg,f,c
   378   003506  E1FD               	bnz	clear_1
   379   003508                     end_of_initialization:
   380                           	callstack 0
   381   003508                     __end_of__initialization:
   382                           	callstack 0
   383   003508  0E00               	movlw	low (__Lmediumconst shr (0+16))
   384   00350A  6EF8               	movwf	tblptru,c
   385   00350C  0100               	movlb	0
   386   00350E  EFA1  F01C         	goto	_main	;jump to C main() function
   387                           
   388                           	psect	bssBANK0
   389   0000D7                     __pbssBANK0:
   390                           	callstack 0
   391   0000D7                     floorf@F526:
   392                           	callstack 0
   393   0000D7                     	ds	4
   394   0000DB                     ___fpclassifyf@F465:
   395                           	callstack 0
   396   0000DB                     	ds	4
   397   0000DF                     _width:
   398                           	callstack 0
   399   0000DF                     	ds	2
   400   0000E1                     _prec:
   401                           	callstack 0
   402   0000E1                     	ds	2
   403   0000E3                     _flags:
   404                           	callstack 0
   405   0000E3                     	ds	1
   406   0000E4                     __displaymode:
   407                           	callstack 0
   408   0000E4                     	ds	1
   409   0000E5                     __displaycontrol:
   410                           	callstack 0
   411   0000E5                     	ds	1
   412   0000E6                     _LCD_busy_cnt:
   413                           	callstack 0
   414   0000E6                     	ds	1
   415   0000E7                     _LCD_data:
   416                           	callstack 0
   417   0000E7                     	ds	1
   418                           
   419                           	psect	dataBANK0
   420   0000B9                     __pdataBANK0:
   421                           	callstack 0
   422   0000B9                     IMPRIMIR@F5133:
   423                           	callstack 0
   424   0000B9                     	ds	30
   425                           
   426                           	psect	bssBANK1
   427   0001A0                     __pbssBANK1:
   428                           	callstack 0
   429   0001A0                     _aux:
   430                           	callstack 0
   431   0001A0                     	ds	2
   432   0001A2                     _ADC:
   433                           	callstack 0
   434   0001A2                     	ds	2
   435   0001A4                     _dbuf:
   436                           	callstack 0
   437   0001A4                     	ds	80
   438                           
   439                           	psect	dataBANK2
   440   000200                     __pdataBANK2:
   441                           	callstack 0
   442   000200                     IMPRIMIR@F5139:
   443                           	callstack 0
   444   000200                     	ds	30
   445   00021E                     IMPRIMIR@F5137:
   446                           	callstack 0
   447   00021E                     	ds	30
   448   00023C                     IMPRIMIR@F5135:
   449                           	callstack 0
   450   00023C                     	ds	30
   451                           
   452                           	psect	cstackBANK1
   453   000100                     __pcstackBANK1:
   454                           	callstack 0
   455   000100                     IMPRIMIR@imprimir4:
   456                           	callstack 0
   457                           
   458                           ; 30 bytes @ 0x0
   459   000100                     	ds	30
   460   00011E                     IMPRIMIR@imprimir5:
   461                           	callstack 0
   462                           
   463                           ; 30 bytes @ 0x1E
   464   00011E                     	ds	30
   465   00013C                     IMPRIMIR@imprimir6:
   466                           	callstack 0
   467                           
   468                           ; 30 bytes @ 0x3C
   469   00013C                     	ds	30
   470   00015A                     IMPRIMIR@imprimir2:
   471                           	callstack 0
   472                           
   473                           ; 30 bytes @ 0x5A
   474   00015A                     	ds	30
   475   000178                     IMPRIMIR@imprimir3:
   476                           	callstack 0
   477                           
   478                           ; 30 bytes @ 0x78
   479   000178                     	ds	30
   480   000196                     IMPRIMIR@imprimir:
   481                           	callstack 0
   482                           
   483                           ; 10 bytes @ 0x96
   484   000196                     	ds	10
   485                           
   486                           	psect	cstackBANK0
   487   000060                     __pcstackBANK0:
   488                           	callstack 0
   489   000060                     efgtoa@ne:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x0
   493   000060                     	ds	2
   494   000062                     efgtoa@p:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x2
   498   000062                     	ds	2
   499   000064                     efgtoa@t:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x4
   503   000064                     	ds	2
   504   000066                     _efgtoa$1175:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x6
   508   000066                     	ds	2
   509   000068                     efgtoa@pp:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x8
   513   000068                     	ds	1
   514   000069                     efgtoa@mode:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x9
   518   000069                     	ds	1
   519   00006A                     efgtoa@nmode:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0xA
   523   00006A                     	ds	1
   524   00006B                     efgtoa@d:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0xB
   528   00006B                     	ds	2
   529   00006D                     efgtoa@m:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0xD
   533   00006D                     	ds	2
   534   00006F                     efgtoa@e:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0xF
   538   00006F                     	ds	2
   539   000071                     efgtoa@w:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x11
   543   000071                     	ds	2
   544   000073                     efgtoa@ou:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x13
   548   000073                     	ds	4
   549   000077                     efgtoa@i:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x17
   553   000077                     	ds	2
   554   000079                     efgtoa@h:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x19
   558   000079                     	ds	4
   559   00007D                     efgtoa@l:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x1D
   563   00007D                     	ds	4
   564   000081                     efgtoa@sign:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x21
   568   000081                     	ds	1
   569   000082                     efgtoa@n:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x22
   573   000082                     	ds	2
   574   000084                     efgtoa@g:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x24
   578   000084                     	ds	4
   579   000088                     efgtoa@u:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x28
   583   000088                     	ds	4
   584   00008C                     vfpfcnvrt@fp:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x2C
   588   00008C                     	ds	2
   589   00008E                     vfpfcnvrt@fmt:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x2E
   593   00008E                     	ds	2
   594   000090                     vfpfcnvrt@ap:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x30
   598   000090                     	ds	2
   599   000092                     vfpfcnvrt@convarg:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0x32
   603   000092                     	ds	4
   604   000096                     vfpfcnvrt@c:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x36
   608   000096                     	ds	1
   609   000097                     vfpfcnvrt@cp:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x37
   613   000097                     	ds	2
   614   000099                     ?_vfprintf:
   615                           	callstack 0
   616   000099                     vfprintf@fp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x39
   620   000099                     	ds	2
   621   00009B                     vfprintf@fmt:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x3B
   625   00009B                     	ds	2
   626   00009D                     vfprintf@ap:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x3D
   630   00009D                     	ds	2
   631   00009F                     vfprintf@cfmt:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x3F
   635   00009F                     	ds	2
   636   0000A1                     ?_sprintf:
   637                           	callstack 0
   638   0000A1                     sprintf@s:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x41
   642   0000A1                     	ds	2
   643   0000A3                     sprintf@fmt:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x43
   647   0000A3                     	ds	6
   648   0000A9                     sprintf@ap:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x49
   652   0000A9                     	ds	2
   653   0000AB                     sprintf@f:
   654                           	callstack 0
   655                           
   656                           ; 12 bytes @ 0x4B
   657   0000AB                     	ds	12
   658   0000B7                     ??_IMPRIMIR:
   659                           
   660                           ; 1 bytes @ 0x57
   661   0000B7                     	ds	2
   662                           
   663                           	psect	cstackCOMRAM
   664   000001                     __pcstackCOMRAM:
   665                           	callstack 0
   666   000001                     ?___fpclassifyf:
   667                           	callstack 0
   668   000001                     ?_strlen:
   669                           	callstack 0
   670   000001                     ?_ReadADC:
   671                           	callstack 0
   672   000001                     ?___wmul:
   673                           	callstack 0
   674   000001                     ?___awdiv:
   675                           	callstack 0
   676   000001                     ?___awmod:
   677                           	callstack 0
   678   000001                     ?___fladd:
   679                           	callstack 0
   680   000001                     ?_labs:
   681                           	callstack 0
   682   000001                     ?___aldiv:
   683                           	callstack 0
   684   000001                     ?___flneg:
   685                           	callstack 0
   686   000001                     ?___fltol:
   687                           	callstack 0
   688   000001                     ?___xxtofl:
   689                           	callstack 0
   690   000001                     UART_write@dato:
   691                           	callstack 0
   692   000001                     LCD_Write@mode:
   693                           	callstack 0
   694   000001                     ___wmul@multiplier:
   695                           	callstack 0
   696   000001                     ___awdiv@dividend:
   697                           	callstack 0
   698   000001                     ___awmod@dividend:
   699                           	callstack 0
   700   000001                     memcpy@d1:
   701                           	callstack 0
   702   000001                     strlen@s:
   703                           	callstack 0
   704   000001                     ___aldiv@dividend:
   705                           	callstack 0
   706   000001                     ___fleq@ff1:
   707                           	callstack 0
   708   000001                     ___flneg@f1:
   709                           	callstack 0
   710   000001                     ___fltol@f1:
   711                           	callstack 0
   712   000001                     ___fladd@b:
   713                           	callstack 0
   714   000001                     ___xxtofl@val:
   715                           	callstack 0
   716   000001                     ___fpclassifyf@x:
   717                           	callstack 0
   718   000001                     labs@a:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x0
   722   000001                     	ds	1
   723   000002                     putch@dato:
   724                           	callstack 0
   725   000002                     LCD_Write@value:
   726                           	callstack 0
   727   000002                     UART_printf@cadena:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x1
   731   000002                     	ds	1
   732   000003                     ??_LCD_Init:
   733   000003                     ??_ReadADC:
   734   000003                     LCD_Text@pt:
   735                           	callstack 0
   736   000003                     ___wmul@multiplicand:
   737                           	callstack 0
   738   000003                     ___awdiv@divisor:
   739                           	callstack 0
   740   000003                     ___awmod@divisor:
   741                           	callstack 0
   742   000003                     memcpy@s1:
   743                           	callstack 0
   744   000003                     fputc@c:
   745                           	callstack 0
   746   000003                     strlen@a:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x2
   750   000003                     	ds	1
   751   000004                     
   752                           ; 1 bytes @ 0x3
   753   000004                     	ds	1
   754   000005                     ??___fpclassifyf:
   755   000005                     ??_labs:
   756   000005                     ??___fltol:
   757   000005                     ??___xxtofl:
   758   000005                     ReadADC@channel:
   759                           	callstack 0
   760   000005                     ___awdiv@counter:
   761                           	callstack 0
   762   000005                     ___awmod@counter:
   763                           	callstack 0
   764   000005                     LCD_Text@text:
   765                           	callstack 0
   766   000005                     ___wmul@product:
   767                           	callstack 0
   768   000005                     memcpy@n:
   769                           	callstack 0
   770   000005                     fputc@fp:
   771                           	callstack 0
   772   000005                     strcpy@dest:
   773                           	callstack 0
   774   000005                     ___aldiv@divisor:
   775                           	callstack 0
   776   000005                     ___fleq@ff2:
   777                           	callstack 0
   778   000005                     ___fladd@a:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x4
   782   000005                     	ds	1
   783   000006                     ___awdiv@sign:
   784                           	callstack 0
   785   000006                     ___awmod@sign:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x5
   789   000006                     	ds	1
   790   000007                     ??_fputc:
   791   000007                     ?_abs:
   792                           	callstack 0
   793   000007                     ?_read_prec_or_width:
   794                           	callstack 0
   795   000007                     ___awdiv@quotient:
   796                           	callstack 0
   797   000007                     read_prec_or_width@fmt:
   798                           	callstack 0
   799   000007                     abs@a:
   800                           	callstack 0
   801   000007                     memcpy@d:
   802                           	callstack 0
   803   000007                     strcpy@src:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x6
   807   000007                     	ds	2
   808   000009                     ??___fladd:
   809   000009                     ??_abs:
   810   000009                     ??_strcpy:
   811   000009                     ??___fleq:
   812   000009                     ___aldiv@counter:
   813                           	callstack 0
   814   000009                     ___fltol@sign1:
   815                           	callstack 0
   816   000009                     ___xxtofl@sign:
   817                           	callstack 0
   818   000009                     read_prec_or_width@ap:
   819                           	callstack 0
   820   000009                     ___fpclassifyf@e:
   821                           	callstack 0
   822   000009                     memcpy@s:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x8
   826   000009                     	ds	1
   827   00000A                     ___aldiv@sign:
   828                           	callstack 0
   829   00000A                     ___fltol@exp1:
   830                           	callstack 0
   831   00000A                     ___xxtofl@exp:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x9
   835   00000A                     	ds	1
   836   00000B                     ??_read_prec_or_width:
   837   00000B                     memcpy@tmp:
   838                           	callstack 0
   839   00000B                     strcpy@s:
   840                           	callstack 0
   841   00000B                     ___aldiv@quotient:
   842                           	callstack 0
   843   00000B                     ___xxtofl@arg:
   844                           	callstack 0
   845   00000B                     ___fpclassifyf@u:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0xA
   849   00000B                     	ds	1
   850   00000C                     fputs@s:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0xB
   854   00000C                     	ds	1
   855   00000D                     ___fladd@signs:
   856                           	callstack 0
   857   00000D                     read_prec_or_width@c:
   858                           	callstack 0
   859   00000D                     strcpy@d:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0xC
   863   00000D                     	ds	1
   864   00000E                     ___fladd@aexp:
   865                           	callstack 0
   866   00000E                     read_prec_or_width@n:
   867                           	callstack 0
   868   00000E                     fputs@fp:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0xD
   872   00000E                     	ds	1
   873   00000F                     ?___flmul:
   874                           	callstack 0
   875   00000F                     ___fladd@bexp:
   876                           	callstack 0
   877   00000F                     strcat@dest:
   878                           	callstack 0
   879   00000F                     UART_init_baud@baudRate:
   880                           	callstack 0
   881   00000F                     ___flmul@b:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0xE
   885   00000F                     	ds	1
   886   000010                     ___fladd@grs:
   887                           	callstack 0
   888   000010                     fputs@c:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0xF
   892   000010                     	ds	1
   893   000011                     fputs@i:
   894                           	callstack 0
   895   000011                     strcat@src:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x10
   899   000011                     	ds	2
   900   000013                     ??_UART_init_baud:
   901   000013                     pad@fp:
   902                           	callstack 0
   903   000013                     ___flmul@a:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x12
   907   000013                     	ds	2
   908   000015                     pad@buf:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x14
   912   000015                     	ds	2
   913   000017                     ??___flmul:
   914   000017                     UART_init_baud@valor:
   915                           	callstack 0
   916   000017                     pad@p:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x16
   920   000017                     	ds	2
   921   000019                     ??_pad:
   922                           
   923                           ; 1 bytes @ 0x18
   924   000019                     	ds	1
   925   00001A                     pad@i:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x19
   929   00001A                     	ds	1
   930   00001B                     ___flmul@sign:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x1A
   934   00001B                     	ds	1
   935   00001C                     pad@w:
   936                           	callstack 0
   937   00001C                     ___flmul@grs:
   938                           	callstack 0
   939                           
   940                           ; 4 bytes @ 0x1B
   941   00001C                     	ds	2
   942   00001E                     dtoa@fp:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x1D
   946   00001E                     	ds	2
   947   000020                     ___flmul@aexp:
   948                           	callstack 0
   949   000020                     dtoa@d:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x1F
   953   000020                     	ds	1
   954   000021                     ___flmul@bexp:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0x20
   958   000021                     	ds	1
   959   000022                     _dtoa$1144:
   960                           	callstack 0
   961   000022                     ___flmul@prod:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x21
   965   000022                     	ds	2
   966   000024                     dtoa@p:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x23
   970   000024                     	ds	2
   971   000026                     ___flmul@temp:
   972                           	callstack 0
   973   000026                     dtoa@w:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x25
   977   000026                     	ds	2
   978   000028                     ?___fldiv:
   979                           	callstack 0
   980   000028                     ?___flsub:
   981                           	callstack 0
   982   000028                     dtoa@i:
   983                           	callstack 0
   984   000028                     ___flge@ff1:
   985                           	callstack 0
   986   000028                     ___flsub@b:
   987                           	callstack 0
   988   000028                     ___fldiv@b:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x27
   992   000028                     	ds	2
   993   00002A                     dtoa@s:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x29
   997   00002A                     	ds	2
   998   00002C                     ___flge@ff2:
   999                           	callstack 0
  1000   00002C                     ___flsub@a:
  1001                           	callstack 0
  1002   00002C                     ___fldiv@a:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x2B
  1006   00002C                     	ds	4
  1007   000030                     ??___fldiv:
  1008   000030                     ??___flge:
  1009                           
  1010                           ; 1 bytes @ 0x2F
  1011   000030                     	ds	4
  1012   000034                     ___fldiv@rem:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x33
  1016   000034                     	ds	4
  1017   000038                     ___fldiv@sign:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x37
  1021   000038                     	ds	1
  1022   000039                     ___fldiv@new_exp:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x38
  1026   000039                     	ds	2
  1027   00003B                     ___fldiv@grs:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x3A
  1031   00003B                     	ds	4
  1032   00003F                     ___fldiv@bexp:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x3E
  1036   00003F                     	ds	1
  1037   000040                     ___fldiv@aexp:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x3F
  1041   000040                     	ds	1
  1042   000041                     ?_floorf:
  1043                           	callstack 0
  1044   000041                     ?_VOLTAJE:
  1045                           	callstack 0
  1046   000041                     VOLTAJE@ADC:
  1047                           	callstack 0
  1048   000041                     floorf@x:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x40
  1052   000041                     	ds	4
  1053   000045                     ??_floorf:
  1054   000045                     VOLTAJE@voltaje:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x44
  1058   000045                     	ds	6
  1059   00004B                     floorf@m:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x4A
  1063   00004B                     	ds	4
  1064   00004F                     floorf@e:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x4E
  1068   00004F                     	ds	2
  1069   000051                     floorf@u:
  1070                           	callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x50
  1073   000051                     	ds	4
  1074   000055                     efgtoa@fp:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x54
  1078   000055                     	ds	2
  1079   000057                     efgtoa@f:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x56
  1083   000057                     	ds	4
  1084   00005B                     efgtoa@c:
  1085                           	callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x5A
  1088   00005B                     	ds	1
  1089   00005C                     ??_efgtoa:
  1090                           
  1091                           ; 1 bytes @ 0x5B
  1092   00005C                     	ds	2
  1093   00005E                     ??_vfpfcnvrt:
  1094                           
  1095                           ; 1 bytes @ 0x5D
  1096   00005E                     	ds	2
  1097   000060                     
  1098                           ; 1 bytes @ 0x5F
  1099 ;;
  1100 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1101 ;;
  1102 ;; *************** function _main *****************
  1103 ;; Defined at:
  1104 ;;		line 79 in file "PARTE3_PARCIAL2.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1118 ;;      Params:         0       0       0       0       0       0       0       0       0
  1119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1121 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1122 ;;Total ram usage:        0 bytes
  1123 ;; Hardware stack levels required when called: 10
  1124 ;; This function calls:
  1125 ;;		_IMPRIMIR
  1126 ;;		_LCD_Init
  1127 ;;		_Setup
  1128 ;;		_UART_init_baud
  1129 ;; This function is called by:
  1130 ;;		Startup code after reset
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text0
  1135   003942                     __ptext0:
  1136                           	callstack 0
  1137   003942                     _main:
  1138                           	callstack 21
  1139   003942                     
  1140                           ;PARTE3_PARCIAL2.c: 80:     Setup();
  1141   003942  ECFD  F01C         	call	_Setup	;wreg free
  1142   003946                     
  1143                           ;PARTE3_PARCIAL2.c: 82:     UART_init_baud(9600);
  1144   003946  0E80               	movlw	128
  1145   003948  6E0F               	movwf	UART_init_baud@baudRate^0,c
  1146   00394A  0E25               	movlw	37
  1147   00394C  6E10               	movwf	(UART_init_baud@baudRate+1)^0,c
  1148   00394E  0E00               	movlw	0
  1149   003950  6E11               	movwf	(UART_init_baud@baudRate+2)^0,c
  1150   003952  0E00               	movlw	0
  1151   003954  6E12               	movwf	(UART_init_baud@baudRate+3)^0,c
  1152   003956  EC89  F01A         	call	_UART_init_baud	;wreg free
  1153   00395A                     
  1154                           ;PARTE3_PARCIAL2.c: 83:     LCD_Init();
  1155   00395A  EC9D  F014         	call	_LCD_Init	;wreg free
  1156   00395E                     l4341:
  1157                           
  1158                           ;PARTE3_PARCIAL2.c: 86:         IMPRIMIR();
  1159   00395E  ECD8  F010         	call	_IMPRIMIR	;wreg free
  1160   003962  EFAF  F01C         	goto	l4341
  1161   003966  EF00  F000         	goto	start
  1162   00396A                     __end_of_main:
  1163                           	callstack 0
  1164                           
  1165 ;; *************** function _UART_init_baud *****************
  1166 ;; Defined at:
  1167 ;;		line 34 in file "./UART.h"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  baudRate        4   14[COMRAM] const long 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  valor           1   22[COMRAM] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1181 ;;      Params:         4       0       0       0       0       0       0       0       0
  1182 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1183 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1184 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1185 ;;Total ram usage:        9 bytes
  1186 ;; Hardware stack levels used: 1
  1187 ;; Hardware stack levels required when called: 1
  1188 ;; This function calls:
  1189 ;;		___aldiv
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text1
  1196   003512                     __ptext1:
  1197                           	callstack 0
  1198   003512                     _UART_init_baud:
  1199                           	callstack 29
  1200   003512                     
  1201                           ;./UART.h: 34: void UART_init_baud(const long int baudRate);./UART.h: 35: {;./UART.h: 37
      +                          :     unsigned char valor = (unsigned char)((16000000/(baudRate*16)) -1);
  1202   003512  0E00               	movlw	0
  1203   003514  6E01               	movwf	___aldiv@dividend^0,c
  1204   003516  0E24               	movlw	36
  1205   003518  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1206   00351A  0EF4               	movlw	244
  1207   00351C  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1208   00351E  0E00               	movlw	0
  1209   003520  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1210   003522  C00F  F013         	movff	UART_init_baud@baudRate,??_UART_init_baud
  1211   003526  C010  F014         	movff	UART_init_baud@baudRate+1,??_UART_init_baud+1
  1212   00352A  C011  F015         	movff	UART_init_baud@baudRate+2,??_UART_init_baud+2
  1213   00352E  C012  F016         	movff	UART_init_baud@baudRate+3,??_UART_init_baud+3
  1214   003532  0E04               	movlw	4
  1215   003534                     u4815:
  1216   003534  90D8               	bcf	status,0,c
  1217   003536  3613               	rlcf	??_UART_init_baud^0,f,c
  1218   003538  3614               	rlcf	(??_UART_init_baud+1)^0,f,c
  1219   00353A  3615               	rlcf	(??_UART_init_baud+2)^0,f,c
  1220   00353C  3616               	rlcf	(??_UART_init_baud+3)^0,f,c
  1221   00353E  2EE8               	decfsz	wreg,f,c
  1222   003540  EF9A  F01A         	goto	u4815
  1223   003544  C013  F005         	movff	??_UART_init_baud,___aldiv@divisor
  1224   003548  C014  F006         	movff	??_UART_init_baud+1,___aldiv@divisor+1
  1225   00354C  C015  F007         	movff	??_UART_init_baud+2,___aldiv@divisor+2
  1226   003550  C016  F008         	movff	??_UART_init_baud+3,___aldiv@divisor+3
  1227   003554  EC41  F015         	call	___aldiv	;wreg free
  1228   003558  0401               	decf	?___aldiv^0,w,c
  1229   00355A  6E17               	movwf	UART_init_baud@valor^0,c
  1230   00355C                     
  1231                           ;./UART.h: 38:     TXSTAbits.BRGH = 1;
  1232   00355C  84AC               	bsf	172,2,c	;volatile
  1233   00355E                     
  1234                           ;./UART.h: 46:     TRISCbits.TRISC7 = 1;
  1235   00355E  8E94               	bsf	148,7,c	;volatile
  1236   003560                     
  1237                           ;./UART.h: 47:     TRISCbits.TRISC6 = 0;
  1238   003560  9C94               	bcf	148,6,c	;volatile
  1239   003562                     
  1240                           ;./UART.h: 49:     TXSTAbits.SYNC = 0;
  1241   003562  98AC               	bcf	172,4,c	;volatile
  1242   003564                     
  1243                           ;./UART.h: 50:     TXSTAbits.TX9 = 0;
  1244   003564  9CAC               	bcf	172,6,c	;volatile
  1245   003566                     
  1246                           ;./UART.h: 52:     SPBRG = valor;
  1247   003566  C017  FFAF         	movff	UART_init_baud@valor,4015	;volatile
  1248   00356A                     
  1249                           ;./UART.h: 53:     RCSTAbits.SPEN = 1;
  1250   00356A  8EAB               	bsf	171,7,c	;volatile
  1251   00356C                     
  1252                           ;./UART.h: 54:     TXSTAbits.TXEN = 1;
  1253   00356C  8AAC               	bsf	172,5,c	;volatile
  1254   00356E                     
  1255                           ;./UART.h: 55:     RCSTAbits.CREN = 1;
  1256   00356E  88AB               	bsf	171,4,c	;volatile
  1257   003570  0012               	return		;funcret
  1258   003572                     __end_of_UART_init_baud:
  1259                           	callstack 0
  1260                           
  1261 ;; *************** function ___aldiv *****************
  1262 ;; Defined at:
  1263 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  dividend        4    0[COMRAM] long 
  1266 ;;  divisor         4    4[COMRAM] long 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  quotient        4   10[COMRAM] long 
  1269 ;;  sign            1    9[COMRAM] unsigned char 
  1270 ;;  counter         1    8[COMRAM] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  4    0[COMRAM] long 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1280 ;;      Params:         8       0       0       0       0       0       0       0       0
  1281 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1283 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1284 ;;Total ram usage:       14 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_UART_init_baud
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text2
  1294   002A82                     __ptext2:
  1295                           	callstack 0
  1296   002A82                     ___aldiv:
  1297                           	callstack 29
  1298   002A82  0E00               	movlw	0
  1299   002A84  6E0A               	movwf	___aldiv@sign^0,c
  1300   002A86  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1301   002A88  EF4A  F015         	goto	u4750
  1302   002A8C  EF48  F015         	goto	u4751
  1303   002A90                     u4751:
  1304   002A90  EF54  F015         	goto	l4109
  1305   002A94                     u4750:
  1306   002A94  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1307   002A96  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1308   002A98  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1309   002A9A  6C05               	negf	___aldiv@divisor^0,c
  1310   002A9C  0E00               	movlw	0
  1311   002A9E  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1312   002AA0  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1313   002AA2  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1314   002AA4  0E01               	movlw	1
  1315   002AA6  6E0A               	movwf	___aldiv@sign^0,c
  1316   002AA8                     l4109:
  1317   002AA8  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1318   002AAA  EF5B  F015         	goto	u4760
  1319   002AAE  EF59  F015         	goto	u4761
  1320   002AB2                     u4761:
  1321   002AB2  EF65  F015         	goto	l4115
  1322   002AB6                     u4760:
  1323   002AB6  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1324   002AB8  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1325   002ABA  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1326   002ABC  6C01               	negf	___aldiv@dividend^0,c
  1327   002ABE  0E00               	movlw	0
  1328   002AC0  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1329   002AC2  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1330   002AC4  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1331   002AC6  0E01               	movlw	1
  1332   002AC8  1A0A               	xorwf	___aldiv@sign^0,f,c
  1333   002ACA                     l4115:
  1334   002ACA  0E00               	movlw	0
  1335   002ACC  6E0B               	movwf	___aldiv@quotient^0,c
  1336   002ACE  0E00               	movlw	0
  1337   002AD0  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1338   002AD2  0E00               	movlw	0
  1339   002AD4  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1340   002AD6  0E00               	movlw	0
  1341   002AD8  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1342   002ADA  5005               	movf	___aldiv@divisor^0,w,c
  1343   002ADC  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1344   002ADE  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1345   002AE0  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1346   002AE2  B4D8               	btfsc	status,2,c
  1347   002AE4  EF76  F015         	goto	u4771
  1348   002AE8  EF78  F015         	goto	u4770
  1349   002AEC                     u4771:
  1350   002AEC  EFAE  F015         	goto	l4137
  1351   002AF0                     u4770:
  1352   002AF0  0E01               	movlw	1
  1353   002AF2  6E09               	movwf	___aldiv@counter^0,c
  1354   002AF4  EF82  F015         	goto	l4123
  1355   002AF8                     l4121:
  1356   002AF8  90D8               	bcf	status,0,c
  1357   002AFA  3605               	rlcf	___aldiv@divisor^0,f,c
  1358   002AFC  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1359   002AFE  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1360   002B00  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1361   002B02  2A09               	incf	___aldiv@counter^0,f,c
  1362   002B04                     l4123:
  1363   002B04  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1364   002B06  EF87  F015         	goto	u4781
  1365   002B0A  EF89  F015         	goto	u4780
  1366   002B0E                     u4781:
  1367   002B0E  EF7C  F015         	goto	l4121
  1368   002B12                     u4780:
  1369   002B12                     l4125:
  1370   002B12  90D8               	bcf	status,0,c
  1371   002B14  360B               	rlcf	___aldiv@quotient^0,f,c
  1372   002B16  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1373   002B18  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1374   002B1A  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1375   002B1C  5005               	movf	___aldiv@divisor^0,w,c
  1376   002B1E  5C01               	subwf	___aldiv@dividend^0,w,c
  1377   002B20  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1378   002B22  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1379   002B24  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1380   002B26  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1381   002B28  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1382   002B2A  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1383   002B2C  A0D8               	btfss	status,0,c
  1384   002B2E  EF9B  F015         	goto	u4791
  1385   002B32  EF9D  F015         	goto	u4790
  1386   002B36                     u4791:
  1387   002B36  EFA6  F015         	goto	l4133
  1388   002B3A                     u4790:
  1389   002B3A  5005               	movf	___aldiv@divisor^0,w,c
  1390   002B3C  5E01               	subwf	___aldiv@dividend^0,f,c
  1391   002B3E  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1392   002B40  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  1393   002B42  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1394   002B44  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  1395   002B46  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1396   002B48  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  1397   002B4A  800B               	bsf	___aldiv@quotient^0,0,c
  1398   002B4C                     l4133:
  1399   002B4C  90D8               	bcf	status,0,c
  1400   002B4E  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  1401   002B50  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  1402   002B52  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  1403   002B54  3205               	rrcf	___aldiv@divisor^0,f,c
  1404   002B56  2E09               	decfsz	___aldiv@counter^0,f,c
  1405   002B58  EF89  F015         	goto	l4125
  1406   002B5C                     l4137:
  1407   002B5C  500A               	movf	___aldiv@sign^0,w,c
  1408   002B5E  B4D8               	btfsc	status,2,c
  1409   002B60  EFB4  F015         	goto	u4801
  1410   002B64  EFB6  F015         	goto	u4800
  1411   002B68                     u4801:
  1412   002B68  EFBE  F015         	goto	l4141
  1413   002B6C                     u4800:
  1414   002B6C  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  1415   002B6E  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  1416   002B70  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  1417   002B72  6C0B               	negf	___aldiv@quotient^0,c
  1418   002B74  0E00               	movlw	0
  1419   002B76  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  1420   002B78  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  1421   002B7A  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  1422   002B7C                     l4141:
  1423   002B7C  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1424   002B80  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1425   002B84  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1426   002B88  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1427   002B8C  0012               	return		;funcret
  1428   002B8E                     __end_of___aldiv:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _Setup *****************
  1432 ;; Defined at:
  1433 ;;		line 34 in file "Setup.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 1
  1454 ;; This function calls:
  1455 ;;		_SetupOscilador
  1456 ;;		_Setupint
  1457 ;;		_Setupports
  1458 ;; This function is called by:
  1459 ;;		_main
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text3
  1464   0039FA                     __ptext3:
  1465                           	callstack 0
  1466   0039FA                     _Setup:
  1467                           	callstack 29
  1468   0039FA                     
  1469                           ;Setup.c: 36:     SetupOscilador();
  1470   0039FA  EC09  F01D         	call	_SetupOscilador	;wreg free
  1471                           
  1472                           ;Setup.c: 37:     Setupports();
  1473   0039FE  ECF5  F01C         	call	_Setupports	;wreg free
  1474   003A02                     
  1475                           ;Setup.c: 38:     Setupint();
  1476   003A02  EC0C  F01D         	call	_Setupint	;wreg free
  1477   003A06  0012               	return		;funcret
  1478   003A08                     __end_of_Setup:
  1479                           	callstack 0
  1480                           
  1481 ;; *************** function _Setupports *****************
  1482 ;; Defined at:
  1483 ;;		line 17 in file "Setup.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1497 ;;      Params:         0       0       0       0       0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1500 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1501 ;;Total ram usage:        0 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_Setup
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text4
  1511   0039EA                     __ptext4:
  1512                           	callstack 0
  1513   0039EA                     _Setupports:
  1514                           	callstack 29
  1515   0039EA                     
  1516                           ;Setup.c: 19:     ADCON0 = 0b00101001;
  1517   0039EA  0E29               	movlw	41
  1518   0039EC  6EC2               	movwf	194,c	;volatile
  1519                           
  1520                           ;Setup.c: 20:     ADCON1 = 0b00000000;
  1521   0039EE  0E00               	movlw	0
  1522   0039F0  6EC1               	movwf	193,c	;volatile
  1523                           
  1524                           ;Setup.c: 21:     ADCON2 = 0b10001000;
  1525   0039F2  0E88               	movlw	136
  1526   0039F4  6EC0               	movwf	192,c	;volatile
  1527   0039F6                     
  1528                           ;Setup.c: 23:     TRISB1=1;
  1529   0039F6  8293               	bsf	3987,1,c	;volatile
  1530   0039F8  0012               	return		;funcret
  1531   0039FA                     __end_of_Setupports:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _Setupint *****************
  1535 ;; Defined at:
  1536 ;;		line 26 in file "Setup.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		None
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1550 ;;      Params:         0       0       0       0       0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_Setup
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text5
  1564   003A18                     __ptext5:
  1565                           	callstack 0
  1566   003A18                     _Setupint:
  1567                           	callstack 29
  1568   003A18  0012               	return		;funcret
  1569   003A1A                     __end_of_Setupint:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _SetupOscilador *****************
  1573 ;; Defined at:
  1574 ;;		line 12 in file "Setup.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_Setup
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text6
  1602   003A12                     __ptext6:
  1603                           	callstack 0
  1604   003A12                     _SetupOscilador:
  1605                           	callstack 29
  1606   003A12                     
  1607                           ;Setup.c: 14:     OSCCON=0b01110010;
  1608   003A12  0E72               	movlw	114
  1609   003A14  6ED3               	movwf	211,c	;volatile
  1610   003A16  0012               	return		;funcret
  1611   003A18                     __end_of_SetupOscilador:
  1612                           	callstack 0
  1613                           
  1614 ;; *************** function _LCD_Init *****************
  1615 ;; Defined at:
  1616 ;;		line 659 in file "./LCD_16x2.h"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1630 ;;      Params:         0       0       0       0       0       0       0       0       0
  1631 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1632 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1633 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1634 ;;Total ram usage:        1 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 1
  1637 ;; This function calls:
  1638 ;;		_LCD_Busy
  1639 ;;		_LCD_Write
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text7
  1646   00293A                     __ptext7:
  1647                           	callstack 0
  1648   00293A                     _LCD_Init:
  1649                           	callstack 29
  1650   00293A                     
  1651                           ;./LCD_16x2.h: 661:     TRISAbits.TRISA1 = 0;
  1652   00293A  9292               	bcf	146,1,c	;volatile
  1653                           
  1654                           ;./LCD_16x2.h: 662:     LATAbits.LATA1 = 0;
  1655   00293C  9289               	bcf	137,1,c	;volatile
  1656                           
  1657                           ;./LCD_16x2.h: 664:     TRISAbits.TRISA3 = 0;
  1658   00293E  9692               	bcf	146,3,c	;volatile
  1659                           
  1660                           ;./LCD_16x2.h: 665:     LATAbits.LATA3 = 0;
  1661   002940  9689               	bcf	137,3,c	;volatile
  1662                           
  1663                           ;./LCD_16x2.h: 666:     TRISAbits.TRISA2 = 0;
  1664   002942  9492               	bcf	146,2,c	;volatile
  1665                           
  1666                           ;./LCD_16x2.h: 667:     LATAbits.LATA2 = 0;
  1667   002944  9489               	bcf	137,2,c	;volatile
  1668   002946                     
  1669                           ;./LCD_16x2.h: 669:     TRISA &= 0x0F;
  1670   002946  0E0F               	movlw	15
  1671   002948  1692               	andwf	146,f,c	;volatile
  1672   00294A                     
  1673                           ;./LCD_16x2.h: 671:     LCD_busy_cnt = 1;
  1674   00294A  0E01               	movlw	1
  1675   00294C  0100               	movlb	0	; () banked
  1676   00294E  6FE6               	movwf	_LCD_busy_cnt& (0+255),b
  1677   002950                     
  1678                           ; BSR set to: 0
  1679                           ;./LCD_16x2.h: 673:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1680   002950  0E4E               	movlw	78
  1681   002952  6E03               	movwf	??_LCD_Init^0,c
  1682   002954  0EEB               	movlw	235
  1683   002956                     u5077:
  1684   002956  2EE8               	decfsz	wreg,f,c
  1685   002958  D7FE               	bra	u5077
  1686   00295A  2E03               	decfsz	??_LCD_Init^0,f,c
  1687   00295C  D7FC               	bra	u5077
  1688   00295E  F000               	nop	
  1689   002960                     
  1690                           ;./LCD_16x2.h: 675:     LATAbits.LATA3 = 0; LCD_Write(0x30,0);
  1691   002960  9689               	bcf	137,3,c	;volatile
  1692   002962  0E00               	movlw	0
  1693   002964  6E01               	movwf	LCD_Write@mode^0,c
  1694   002966  0E30               	movlw	48
  1695   002968  EC22  F019         	call	_LCD_Write
  1696   00296C                     
  1697                           ;./LCD_16x2.h: 676:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1698   00296C  0E1A               	movlw	26
  1699   00296E  6E03               	movwf	??_LCD_Init^0,c
  1700   002970  0EF8               	movlw	248
  1701   002972                     u5087:
  1702   002972  2EE8               	decfsz	wreg,f,c
  1703   002974  D7FE               	bra	u5087
  1704   002976  2E03               	decfsz	??_LCD_Init^0,f,c
  1705   002978  D7FC               	bra	u5087
  1706   00297A  D000               	nop2	
  1707   00297C                     
  1708                           ;./LCD_16x2.h: 677:     LATAbits.LATA3 = 0; LCD_Write(0x30,0);
  1709   00297C  9689               	bcf	137,3,c	;volatile
  1710   00297E  0E00               	movlw	0
  1711   002980  6E01               	movwf	LCD_Write@mode^0,c
  1712   002982  0E30               	movlw	48
  1713   002984  EC22  F019         	call	_LCD_Write
  1714   002988                     
  1715                           ;./LCD_16x2.h: 678:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1716   002988  0E1A               	movlw	26
  1717   00298A  6E03               	movwf	??_LCD_Init^0,c
  1718   00298C  0EF8               	movlw	248
  1719   00298E                     u5097:
  1720   00298E  2EE8               	decfsz	wreg,f,c
  1721   002990  D7FE               	bra	u5097
  1722   002992  2E03               	decfsz	??_LCD_Init^0,f,c
  1723   002994  D7FC               	bra	u5097
  1724   002996  D000               	nop2	
  1725   002998                     
  1726                           ;./LCD_16x2.h: 679:     LATAbits.LATA3 = 0; LCD_Write(0x30,0);
  1727   002998  9689               	bcf	137,3,c	;volatile
  1728   00299A  0E00               	movlw	0
  1729   00299C  6E01               	movwf	LCD_Write@mode^0,c
  1730   00299E  0E30               	movlw	48
  1731   0029A0  EC22  F019         	call	_LCD_Write
  1732   0029A4                     
  1733                           ;./LCD_16x2.h: 680:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1734   0029A4  0E1A               	movlw	26
  1735   0029A6  6E03               	movwf	??_LCD_Init^0,c
  1736   0029A8  0EF8               	movlw	248
  1737   0029AA                     u5107:
  1738   0029AA  2EE8               	decfsz	wreg,f,c
  1739   0029AC  D7FE               	bra	u5107
  1740   0029AE  2E03               	decfsz	??_LCD_Init^0,f,c
  1741   0029B0  D7FC               	bra	u5107
  1742   0029B2  D000               	nop2	
  1743   0029B4                     
  1744                           ;./LCD_16x2.h: 689:     LATAbits.LATA3 = 0; LCD_Write(0x20,0);
  1745   0029B4  9689               	bcf	137,3,c	;volatile
  1746   0029B6  0E00               	movlw	0
  1747   0029B8  6E01               	movwf	LCD_Write@mode^0,c
  1748   0029BA  0E20               	movlw	32
  1749   0029BC  EC22  F019         	call	_LCD_Write
  1750   0029C0                     l4199:
  1751                           
  1752                           ;./LCD_16x2.h: 690:     while (LCD_Busy()) {
  1753   0029C0  ECE8  F01A         	call	_LCD_Busy	;wreg free
  1754   0029C4  0900               	iorlw	0
  1755   0029C6  A4D8               	btfss	status,2,c
  1756   0029C8  EFE8  F014         	goto	u4821
  1757   0029CC  EFEA  F014         	goto	u4820
  1758   0029D0                     u4821:
  1759   0029D0  EFE0  F014         	goto	l4199
  1760   0029D4                     u4820:
  1761   0029D4                     l4201:
  1762   0029D4  ECE8  F01A         	call	_LCD_Busy	;wreg free
  1763   0029D8  0900               	iorlw	0
  1764   0029DA  A4D8               	btfss	status,2,c
  1765   0029DC  EFF2  F014         	goto	u4831
  1766   0029E0  EFF4  F014         	goto	u4830
  1767   0029E4                     u4831:
  1768   0029E4  EFEA  F014         	goto	l4201
  1769   0029E8                     u4830:
  1770   0029E8  9689               	bcf	137,3,c	;volatile
  1771   0029EA  0E01               	movlw	1
  1772   0029EC  6E01               	movwf	LCD_Write@mode^0,c
  1773   0029EE  0E28               	movlw	40
  1774   0029F0  EC22  F019         	call	_LCD_Write
  1775   0029F4                     
  1776                           ;./LCD_16x2.h: 696:     _displaycontrol = 0x04 | 0x00 | 0x00;
  1777   0029F4  0E04               	movlw	4
  1778   0029F6  0100               	movlb	0	; () banked
  1779   0029F8  6FE5               	movwf	__displaycontrol& (0+255),b
  1780   0029FA                     l4207:
  1781   0029FA  ECE8  F01A         	call	_LCD_Busy	;wreg free
  1782   0029FE  0900               	iorlw	0
  1783   002A00  A4D8               	btfss	status,2,c
  1784   002A02  EF05  F015         	goto	u4841
  1785   002A06  EF07  F015         	goto	u4840
  1786   002A0A                     u4841:
  1787   002A0A  EFFD  F014         	goto	l4207
  1788   002A0E                     u4840:
  1789   002A0E  9689               	bcf	137,3,c	;volatile
  1790   002A10  0E01               	movlw	1
  1791   002A12  6E01               	movwf	LCD_Write@mode^0,c
  1792   002A14  0E0C               	movlw	12
  1793   002A16  EC22  F019         	call	_LCD_Write
  1794   002A1A                     
  1795                           ;./LCD_16x2.h: 699:     _displaymode = 0x02 | 0x00;
  1796   002A1A  0E02               	movlw	2
  1797   002A1C  0100               	movlb	0	; () banked
  1798   002A1E  6FE4               	movwf	__displaymode& (0+255),b
  1799   002A20                     l4213:
  1800   002A20  ECE8  F01A         	call	_LCD_Busy	;wreg free
  1801   002A24  0900               	iorlw	0
  1802   002A26  A4D8               	btfss	status,2,c
  1803   002A28  EF18  F015         	goto	u4851
  1804   002A2C  EF1A  F015         	goto	u4850
  1805   002A30                     u4851:
  1806   002A30  EF10  F015         	goto	l4213
  1807   002A34                     u4850:
  1808   002A34  9689               	bcf	137,3,c	;volatile
  1809   002A36  0E01               	movlw	1
  1810   002A38  6E01               	movwf	LCD_Write@mode^0,c
  1811   002A3A  0E06               	movlw	6
  1812   002A3C  EC22  F019         	call	_LCD_Write
  1813   002A40                     l4217:
  1814   002A40  ECE8  F01A         	call	_LCD_Busy	;wreg free
  1815   002A44  0900               	iorlw	0
  1816   002A46  A4D8               	btfss	status,2,c
  1817   002A48  EF28  F015         	goto	u4861
  1818   002A4C  EF2A  F015         	goto	u4860
  1819   002A50                     u4861:
  1820   002A50  EF20  F015         	goto	l4217
  1821   002A54                     u4860:
  1822   002A54  9689               	bcf	137,3,c	;volatile
  1823   002A56  0E01               	movlw	1
  1824   002A58  6E01               	movwf	LCD_Write@mode^0,c
  1825   002A5A  0E01               	movlw	1
  1826   002A5C  EC22  F019         	call	_LCD_Write
  1827   002A60                     l4221:
  1828   002A60  ECE8  F01A         	call	_LCD_Busy	;wreg free
  1829   002A64  0900               	iorlw	0
  1830   002A66  A4D8               	btfss	status,2,c
  1831   002A68  EF38  F015         	goto	u4871
  1832   002A6C  EF3A  F015         	goto	u4870
  1833   002A70                     u4871:
  1834   002A70  EF30  F015         	goto	l4221
  1835   002A74                     u4870:
  1836   002A74  9689               	bcf	137,3,c	;volatile
  1837   002A76  0E01               	movlw	1
  1838   002A78  6E01               	movwf	LCD_Write@mode^0,c
  1839   002A7A  0E02               	movlw	2
  1840   002A7C  EC22  F019         	call	_LCD_Write
  1841   002A80  0012               	return		;funcret
  1842   002A82                     __end_of_LCD_Init:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _IMPRIMIR *****************
  1846 ;; Defined at:
  1847 ;;		line 40 in file "PARTE3_PARCIAL2.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  imprimir3      30  120[BANK1 ] unsigned char [30]
  1852 ;;  imprimir2      30   90[BANK1 ] unsigned char [30]
  1853 ;;  imprimir6      30   60[BANK1 ] unsigned char [30]
  1854 ;;  imprimir5      30   30[BANK1 ] unsigned char [30]
  1855 ;;  imprimir4      30    0[BANK1 ] unsigned char [30]
  1856 ;;  imprimir       10  150[BANK1 ] unsigned char [10]
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1866 ;;      Params:         0       0       0       0       0       0       0       0       0
  1867 ;;      Locals:         0       0     160       0       0       0       0       0       0
  1868 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1869 ;;      Totals:         0       2     160       0       0       0       0       0       0
  1870 ;;Total ram usage:      162 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 9
  1873 ;; This function calls:
  1874 ;;		_LCD_Busy
  1875 ;;		_LCD_Text
  1876 ;;		_LCD_Write
  1877 ;;		_ReadADC
  1878 ;;		_UART_printf
  1879 ;;		_VOLTAJE
  1880 ;;		_sprintf
  1881 ;;		_strcat
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text8
  1888   0021B0                     __ptext8:
  1889                           	callstack 0
  1890   0021B0                     _IMPRIMIR:
  1891                           	callstack 21
  1892   0021B0                     l4227:
  1893   0021B0  ECE8  F01A         	call	_LCD_Busy	;wreg free
  1894   0021B4  0900               	iorlw	0
  1895   0021B6  A4D8               	btfss	status,2,c
  1896   0021B8  EFE0  F010         	goto	u4881
  1897   0021BC  EFE2  F010         	goto	u4880
  1898   0021C0                     u4881:
  1899   0021C0  EFD8  F010         	goto	l4227
  1900   0021C4                     u4880:
  1901   0021C4  9689               	bcf	137,3,c	;volatile
  1902   0021C6  0E01               	movlw	1
  1903   0021C8  6E01               	movwf	LCD_Write@mode^0,c
  1904   0021CA  0E01               	movlw	1
  1905   0021CC  EC22  F019         	call	_LCD_Write
  1906   0021D0                     
  1907                           ;PARTE3_PARCIAL2.c: 42:     char imprimir[10];;PARTE3_PARCIAL2.c: 43:     char imprimir2
      +                          [30];;PARTE3_PARCIAL2.c: 44:     char imprimir3[30]="VOLTAJE: ";
  1908   0021D0  EE20  F0B9         	lfsr	2,IMPRIMIR@F5133
  1909   0021D4  EE11  F078         	lfsr	1,IMPRIMIR@imprimir3
  1910   0021D8  0E1D               	movlw	29
  1911   0021DA                     u4891:
  1912   0021DA  CFDB FFE3          	movff	plusw2,plusw1
  1913   0021DE  06E8               	decf	wreg,f,c
  1914   0021E0  E2FC               	bc	u4891
  1915   0021E2                     
  1916                           ;PARTE3_PARCIAL2.c: 45:     char imprimir4[30]="V   ";
  1917   0021E2  EE22  F03C         	lfsr	2,IMPRIMIR@F5135
  1918   0021E6  EE11  F000         	lfsr	1,IMPRIMIR@imprimir4
  1919   0021EA  0E1D               	movlw	29
  1920   0021EC                     u4901:
  1921   0021EC  CFDB FFE3          	movff	plusw2,plusw1
  1922   0021F0  06E8               	decf	wreg,f,c
  1923   0021F2  E2FC               	bc	u4901
  1924   0021F4                     
  1925                           ;PARTE3_PARCIAL2.c: 46:     char imprimir5[30]="ADRES: ";
  1926   0021F4  EE22  F01E         	lfsr	2,IMPRIMIR@F5137
  1927   0021F8  EE11  F01E         	lfsr	1,IMPRIMIR@imprimir5
  1928   0021FC  0E1D               	movlw	29
  1929   0021FE                     u4911:
  1930   0021FE  CFDB FFE3          	movff	plusw2,plusw1
  1931   002202  06E8               	decf	wreg,f,c
  1932   002204  E2FC               	bc	u4911
  1933   002206                     
  1934                           ;PARTE3_PARCIAL2.c: 47:     char imprimir6[30]="#";
  1935   002206  EE22  F000         	lfsr	2,IMPRIMIR@F5139
  1936   00220A  EE11  F03C         	lfsr	1,IMPRIMIR@imprimir6
  1937   00220E  0E1D               	movlw	29
  1938   002210                     u4921:
  1939   002210  CFDB FFE3          	movff	plusw2,plusw1
  1940   002214  06E8               	decf	wreg,f,c
  1941   002216  E2FC               	bc	u4921
  1942   002218                     
  1943                           ;PARTE3_PARCIAL2.c: 48:     aux=ADC;
  1944   002218  C1A2  F1A0         	movff	_ADC,_aux
  1945   00221C  C1A3  F1A1         	movff	_ADC+1,_aux+1
  1946   002220                     
  1947                           ;PARTE3_PARCIAL2.c: 50:     ADC=ReadADC(10);
  1948   002220  0E0A               	movlw	10
  1949   002222  EC87  F01C         	call	_ReadADC
  1950   002226  C001  F1A2         	movff	?_ReadADC,_ADC
  1951   00222A  C002  F1A3         	movff	?_ReadADC+1,_ADC+1
  1952   00222E                     
  1953                           ;PARTE3_PARCIAL2.c: 51:     sprintf(imprimir, "%d", ADC);
  1954   00222E  0E96               	movlw	low IMPRIMIR@imprimir
  1955   002230  0100               	movlb	0	; () banked
  1956   002232  6FA1               	movwf	sprintf@s& (0+255),b
  1957   002234  0E01               	movlw	high IMPRIMIR@imprimir
  1958   002236  6FA2               	movwf	(sprintf@s+1)& (0+255),b
  1959   002238  0E20               	movlw	low STR_1
  1960   00223A  6FA3               	movwf	sprintf@fmt& (0+255),b
  1961   00223C  0E08               	movlw	high STR_1
  1962   00223E  6FA4               	movwf	(sprintf@fmt+1)& (0+255),b
  1963   002240  C1A2  F0A5         	movff	_ADC,?_sprintf+4
  1964   002244  C1A3  F0A6         	movff	_ADC+1,?_sprintf+5
  1965   002248  EC9B  F01B         	call	_sprintf	;wreg free
  1966   00224C                     l4245:
  1967   00224C  ECE8  F01A         	call	_LCD_Busy	;wreg free
  1968   002250  0900               	iorlw	0
  1969   002252  A4D8               	btfss	status,2,c
  1970   002254  EF2E  F011         	goto	u4931
  1971   002258  EF30  F011         	goto	u4930
  1972   00225C                     u4931:
  1973   00225C  EF26  F011         	goto	l4245
  1974   002260                     u4930:
  1975   002260  9689               	bcf	137,3,c	;volatile
  1976   002262  0E01               	movlw	1
  1977   002264  6E01               	movwf	LCD_Write@mode^0,c
  1978   002266  0E80               	movlw	128
  1979   002268  EC22  F019         	call	_LCD_Write
  1980   00226C                     
  1981                           ;PARTE3_PARCIAL2.c: 53:     LCD_Text("ADRES: ");
  1982   00226C  0E0B               	movlw	low STR_2
  1983   00226E  6E03               	movwf	LCD_Text@pt^0,c
  1984   002270  0E08               	movlw	high STR_2
  1985   002272  6E04               	movwf	(LCD_Text@pt+1)^0,c
  1986   002274  ECA8  F019         	call	_LCD_Text	;wreg free
  1987   002278                     l4251:
  1988   002278  ECE8  F01A         	call	_LCD_Busy	;wreg free
  1989   00227C  0900               	iorlw	0
  1990   00227E  A4D8               	btfss	status,2,c
  1991   002280  EF44  F011         	goto	u4941
  1992   002284  EF46  F011         	goto	u4940
  1993   002288                     u4941:
  1994   002288  EF3C  F011         	goto	l4251
  1995   00228C                     u4940:
  1996   00228C  9689               	bcf	137,3,c	;volatile
  1997   00228E  0E01               	movlw	1
  1998   002290  6E01               	movwf	LCD_Write@mode^0,c
  1999   002292  0E87               	movlw	135
  2000   002294  EC22  F019         	call	_LCD_Write
  2001   002298                     
  2002                           ;PARTE3_PARCIAL2.c: 55:     LCD_Text(imprimir);
  2003   002298  0E96               	movlw	low IMPRIMIR@imprimir
  2004   00229A  6E03               	movwf	LCD_Text@pt^0,c
  2005   00229C  0E01               	movlw	high IMPRIMIR@imprimir
  2006   00229E  6E04               	movwf	(LCD_Text@pt+1)^0,c
  2007   0022A0  ECA8  F019         	call	_LCD_Text	;wreg free
  2008   0022A4                     
  2009                           ;PARTE3_PARCIAL2.c: 57:     sprintf(imprimir2, "%.2f", VOLTAJE(ADC));
  2010   0022A4  0E5A               	movlw	low IMPRIMIR@imprimir2
  2011   0022A6  0100               	movlb	0	; () banked
  2012   0022A8  6FA1               	movwf	sprintf@s& (0+255),b
  2013   0022AA  0E01               	movlw	high IMPRIMIR@imprimir2
  2014   0022AC  6FA2               	movwf	(sprintf@s+1)& (0+255),b
  2015   0022AE  0E13               	movlw	low STR_3
  2016   0022B0  6FA3               	movwf	sprintf@fmt& (0+255),b
  2017   0022B2  0E08               	movlw	high STR_3
  2018   0022B4  6FA4               	movwf	(sprintf@fmt+1)& (0+255),b
  2019   0022B6  C1A2  F041         	movff	_ADC,VOLTAJE@ADC
  2020   0022BA  C1A3  F042         	movff	_ADC+1,VOLTAJE@ADC+1
  2021   0022BE  EC67  F019         	call	_VOLTAJE	;wreg free
  2022   0022C2  C041  F0A5         	movff	?_VOLTAJE,?_sprintf+4
  2023   0022C6  C042  F0A6         	movff	?_VOLTAJE+1,?_sprintf+5
  2024   0022CA  C043  F0A7         	movff	?_VOLTAJE+2,?_sprintf+6
  2025   0022CE  C044  F0A8         	movff	?_VOLTAJE+3,?_sprintf+7
  2026   0022D2  EC9B  F01B         	call	_sprintf	;wreg free
  2027   0022D6                     l4259:
  2028   0022D6  ECE8  F01A         	call	_LCD_Busy	;wreg free
  2029   0022DA  0900               	iorlw	0
  2030   0022DC  A4D8               	btfss	status,2,c
  2031   0022DE  EF73  F011         	goto	u4951
  2032   0022E2  EF75  F011         	goto	u4950
  2033   0022E6                     u4951:
  2034   0022E6  EF6B  F011         	goto	l4259
  2035   0022EA                     u4950:
  2036   0022EA  9689               	bcf	137,3,c	;volatile
  2037   0022EC  0E01               	movlw	1
  2038   0022EE  6E01               	movwf	LCD_Write@mode^0,c
  2039   0022F0  0EC0               	movlw	192
  2040   0022F2  EC22  F019         	call	_LCD_Write
  2041   0022F6                     
  2042                           ;PARTE3_PARCIAL2.c: 59:     LCD_Text("VOLTAJE: ");
  2043   0022F6  0E01               	movlw	low STR_4
  2044   0022F8  6E03               	movwf	LCD_Text@pt^0,c
  2045   0022FA  0E08               	movlw	high STR_4
  2046   0022FC  6E04               	movwf	(LCD_Text@pt+1)^0,c
  2047   0022FE  ECA8  F019         	call	_LCD_Text	;wreg free
  2048   002302                     l4265:
  2049   002302  ECE8  F01A         	call	_LCD_Busy	;wreg free
  2050   002306  0900               	iorlw	0
  2051   002308  A4D8               	btfss	status,2,c
  2052   00230A  EF89  F011         	goto	u4961
  2053   00230E  EF8B  F011         	goto	u4960
  2054   002312                     u4961:
  2055   002312  EF81  F011         	goto	l4265
  2056   002316                     u4960:
  2057   002316  9689               	bcf	137,3,c	;volatile
  2058   002318  0E01               	movlw	1
  2059   00231A  6E01               	movwf	LCD_Write@mode^0,c
  2060   00231C  0ECA               	movlw	202
  2061   00231E  EC22  F019         	call	_LCD_Write
  2062   002322                     
  2063                           ;PARTE3_PARCIAL2.c: 61:     LCD_Text(imprimir2);
  2064   002322  0E5A               	movlw	low IMPRIMIR@imprimir2
  2065   002324  6E03               	movwf	LCD_Text@pt^0,c
  2066   002326  0E01               	movlw	high IMPRIMIR@imprimir2
  2067   002328  6E04               	movwf	(LCD_Text@pt+1)^0,c
  2068   00232A  ECA8  F019         	call	_LCD_Text	;wreg free
  2069   00232E                     
  2070                           ;PARTE3_PARCIAL2.c: 65:     if(ADC!=aux){
  2071   00232E  0101               	movlb	1	; () banked
  2072   002330  51A0               	movf	_aux& (0+255),w,b
  2073   002332  19A2               	xorwf	_ADC& (0+255),w,b
  2074   002334  E109               	bnz	u4970
  2075   002336  51A1               	movf	(_aux+1)& (0+255),w,b
  2076   002338  19A3               	xorwf	(_ADC+1)& (0+255),w,b
  2077   00233A  B4D8               	btfsc	status,2,c
  2078   00233C  EFA2  F011         	goto	u4971
  2079   002340  EFA4  F011         	goto	u4970
  2080   002344                     u4971:
  2081   002344  EFE2  F011         	goto	l4279
  2082   002348                     u4970:
  2083   002348                     
  2084                           ; BSR set to: 1
  2085                           ;PARTE3_PARCIAL2.c: 66:         strcat(imprimir3,imprimir2);
  2086   002348  0E78               	movlw	low IMPRIMIR@imprimir3
  2087   00234A  6E0F               	movwf	strcat@dest^0,c
  2088   00234C  0E01               	movlw	high IMPRIMIR@imprimir3
  2089   00234E  6E10               	movwf	(strcat@dest+1)^0,c
  2090   002350  0E5A               	movlw	low IMPRIMIR@imprimir2
  2091   002352  6E11               	movwf	strcat@src^0,c
  2092   002354  0E01               	movlw	high IMPRIMIR@imprimir2
  2093   002356  6E12               	movwf	(strcat@src+1)^0,c
  2094   002358  ECB5  F01C         	call	_strcat	;wreg free
  2095                           
  2096                           ;PARTE3_PARCIAL2.c: 67:         strcat(imprimir3,imprimir4);
  2097   00235C  0E78               	movlw	low IMPRIMIR@imprimir3
  2098   00235E  6E0F               	movwf	strcat@dest^0,c
  2099   002360  0E01               	movlw	high IMPRIMIR@imprimir3
  2100   002362  6E10               	movwf	(strcat@dest+1)^0,c
  2101   002364  0E00               	movlw	low IMPRIMIR@imprimir4
  2102   002366  6E11               	movwf	strcat@src^0,c
  2103   002368  0E01               	movlw	high IMPRIMIR@imprimir4
  2104   00236A  6E12               	movwf	(strcat@src+1)^0,c
  2105   00236C  ECB5  F01C         	call	_strcat	;wreg free
  2106                           
  2107                           ;PARTE3_PARCIAL2.c: 68:         strcat(imprimir3,imprimir5);
  2108   002370  0E78               	movlw	low IMPRIMIR@imprimir3
  2109   002372  6E0F               	movwf	strcat@dest^0,c
  2110   002374  0E01               	movlw	high IMPRIMIR@imprimir3
  2111   002376  6E10               	movwf	(strcat@dest+1)^0,c
  2112   002378  0E1E               	movlw	low IMPRIMIR@imprimir5
  2113   00237A  6E11               	movwf	strcat@src^0,c
  2114   00237C  0E01               	movlw	high IMPRIMIR@imprimir5
  2115   00237E  6E12               	movwf	(strcat@src+1)^0,c
  2116   002380  ECB5  F01C         	call	_strcat	;wreg free
  2117                           
  2118                           ;PARTE3_PARCIAL2.c: 69:         strcat(imprimir3,imprimir);
  2119   002384  0E78               	movlw	low IMPRIMIR@imprimir3
  2120   002386  6E0F               	movwf	strcat@dest^0,c
  2121   002388  0E01               	movlw	high IMPRIMIR@imprimir3
  2122   00238A  6E10               	movwf	(strcat@dest+1)^0,c
  2123   00238C  0E96               	movlw	low IMPRIMIR@imprimir
  2124   00238E  6E11               	movwf	strcat@src^0,c
  2125   002390  0E01               	movlw	high IMPRIMIR@imprimir
  2126   002392  6E12               	movwf	(strcat@src+1)^0,c
  2127   002394  ECB5  F01C         	call	_strcat	;wreg free
  2128                           
  2129                           ;PARTE3_PARCIAL2.c: 70:         strcat(imprimir3,imprimir6);
  2130   002398  0E78               	movlw	low IMPRIMIR@imprimir3
  2131   00239A  6E0F               	movwf	strcat@dest^0,c
  2132   00239C  0E01               	movlw	high IMPRIMIR@imprimir3
  2133   00239E  6E10               	movwf	(strcat@dest+1)^0,c
  2134   0023A0  0E3C               	movlw	low IMPRIMIR@imprimir6
  2135   0023A2  6E11               	movwf	strcat@src^0,c
  2136   0023A4  0E01               	movlw	high IMPRIMIR@imprimir6
  2137   0023A6  6E12               	movwf	(strcat@src+1)^0,c
  2138   0023A8  ECB5  F01C         	call	_strcat	;wreg free
  2139   0023AC                     
  2140                           ;PARTE3_PARCIAL2.c: 71:         UART_printf(imprimir3);
  2141   0023AC  0E78               	movlw	low IMPRIMIR@imprimir3
  2142   0023AE  6E02               	movwf	UART_printf@cadena^0,c
  2143   0023B0  0E01               	movlw	high IMPRIMIR@imprimir3
  2144   0023B2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2145   0023B4  ECB9  F01A         	call	_UART_printf	;wreg free
  2146   0023B8                     
  2147                           ;PARTE3_PARCIAL2.c: 72:         UART_printf("\n");
  2148   0023B8  0E23               	movlw	low STR_5
  2149   0023BA  6E02               	movwf	UART_printf@cadena^0,c
  2150   0023BC  0E08               	movlw	high STR_5
  2151   0023BE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2152   0023C0  ECB9  F01A         	call	_UART_printf	;wreg free
  2153   0023C4                     l4279:
  2154                           
  2155                           ;PARTE3_PARCIAL2.c: 75:     _delay((unsigned long)((200)*(16000000/4000.0)));
  2156   0023C4  0E05               	movlw	5
  2157   0023C6  0100               	movlb	0	; () banked
  2158   0023C8  6FB8               	movwf	(??_IMPRIMIR+1)& (0+255),b
  2159   0023CA  0E0F               	movlw	15
  2160   0023CC  6FB7               	movwf	??_IMPRIMIR& (0+255),b
  2161   0023CE  0EF1               	movlw	241
  2162   0023D0                     u5117:
  2163   0023D0  2EE8               	decfsz	wreg,f,c
  2164   0023D2  D7FE               	bra	u5117
  2165   0023D4  2FB7               	decfsz	??_IMPRIMIR& (0+255),f,b
  2166   0023D6  D7FC               	bra	u5117
  2167   0023D8  2FB8               	decfsz	(??_IMPRIMIR+1)& (0+255),f,b
  2168   0023DA  D7FA               	bra	u5117
  2169   0023DC  0012               	return		;funcret
  2170   0023DE                     __end_of_IMPRIMIR:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function _strcat *****************
  2174 ;; Defined at:
  2175 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcat.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  dest            2   14[COMRAM] PTR unsigned char 
  2178 ;;		 -> IMPRIMIR@imprimir3(30), 
  2179 ;;  src             2   16[COMRAM] PTR const unsigned char 
  2180 ;;		 -> IMPRIMIR@imprimir2(30), IMPRIMIR@imprimir(10), IMPRIMIR@imprimir6(30), IMPRIMIR@imprimir5(30), 
  2181 ;;		 -> IMPRIMIR@imprimir4(30), 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  2   14[COMRAM] PTR unsigned char 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2193 ;;      Params:         4       0       0       0       0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2196 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2197 ;;Total ram usage:        4 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 1
  2200 ;; This function calls:
  2201 ;;		_strcpy
  2202 ;;		_strlen
  2203 ;; This function is called by:
  2204 ;;		_IMPRIMIR
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text9
  2209   00396A                     __ptext9:
  2210                           	callstack 0
  2211   00396A                     _strcat:
  2212                           	callstack 28
  2213   00396A  C00F  F001         	movff	strcat@dest,strlen@s
  2214   00396E  C010  F002         	movff	strcat@dest+1,strlen@s+1
  2215   003972  EC6C  F01C         	call	_strlen	;wreg free
  2216   003976  5001               	movf	?_strlen^0,w,c
  2217   003978  240F               	addwf	strcat@dest^0,w,c
  2218   00397A  6E05               	movwf	strcpy@dest^0,c
  2219   00397C  5002               	movf	(?_strlen+1)^0,w,c
  2220   00397E  2010               	addwfc	(strcat@dest+1)^0,w,c
  2221   003980  6E06               	movwf	(strcpy@dest+1)^0,c
  2222   003982  C011  F007         	movff	strcat@src,strcpy@src
  2223   003986  C012  F008         	movff	strcat@src+1,strcpy@src+1
  2224   00398A  EC17  F01B         	call	_strcpy	;wreg free
  2225   00398E  0012               	return		;funcret
  2226   003990                     __end_of_strcat:
  2227                           	callstack 0
  2228                           
  2229 ;; *************** function _strlen *****************
  2230 ;; Defined at:
  2231 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2234 ;;		 -> IMPRIMIR@imprimir3(30), 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2237 ;;		 -> IMPRIMIR@imprimir3(30), 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  2    0[COMRAM] unsigned int 
  2240 ;; Registers used:
  2241 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2247 ;;      Params:         2       0       0       0       0       0       0       0       0
  2248 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2250 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2251 ;;Total ram usage:        4 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_strcat
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text10
  2261   0038D8                     __ptext10:
  2262                           	callstack 0
  2263   0038D8                     _strlen:
  2264                           	callstack 28
  2265   0038D8  C001  F003         	movff	strlen@s,strlen@a
  2266   0038DC  C002  F004         	movff	strlen@s+1,strlen@a+1
  2267   0038E0  EF74  F01C         	goto	l4045
  2268   0038E4                     l4043:
  2269   0038E4  4A01               	infsnz	strlen@s^0,f,c
  2270   0038E6  2A02               	incf	(strlen@s+1)^0,f,c
  2271   0038E8                     l4045:
  2272   0038E8  C001  FFD9         	movff	strlen@s,fsr2l
  2273   0038EC  C002  FFDA         	movff	strlen@s+1,fsr2h
  2274   0038F0  50DF               	movf	indf2,w,c
  2275   0038F2  A4D8               	btfss	status,2,c
  2276   0038F4  EF7E  F01C         	goto	u4661
  2277   0038F8  EF80  F01C         	goto	u4660
  2278   0038FC                     u4661:
  2279   0038FC  EF72  F01C         	goto	l4043
  2280   003900                     u4660:
  2281   003900  5003               	movf	strlen@a^0,w,c
  2282   003902  5C01               	subwf	strlen@s^0,w,c
  2283   003904  6E01               	movwf	?_strlen^0,c
  2284   003906  5004               	movf	(strlen@a+1)^0,w,c
  2285   003908  5802               	subwfb	(strlen@s+1)^0,w,c
  2286   00390A  6E02               	movwf	(?_strlen+1)^0,c
  2287   00390C  0012               	return		;funcret
  2288   00390E                     __end_of_strlen:
  2289                           	callstack 0
  2290                           
  2291 ;; *************** function _sprintf *****************
  2292 ;; Defined at:
  2293 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  s               2   65[BANK0 ] PTR unsigned char 
  2296 ;;		 -> IMPRIMIR@imprimir2(30), IMPRIMIR@imprimir(10), 
  2297 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  2298 ;;		 -> STR_3(5), STR_1(3), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  f              12   75[BANK0 ] struct _IO_FILE
  2301 ;;  ap              2   73[BANK0 ] PTR void [1]
  2302 ;;		 -> ?_sprintf(2), 
  2303 ;;  ret             2    0        int 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  2   65[BANK0 ] int 
  2306 ;; Registers used:
  2307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2313 ;;      Params:         0       8       0       0       0       0       0       0       0
  2314 ;;      Locals:         0      14       0       0       0       0       0       0       0
  2315 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2316 ;;      Totals:         0      22       0       0       0       0       0       0       0
  2317 ;;Total ram usage:       22 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; Hardware stack levels required when called: 8
  2320 ;; This function calls:
  2321 ;;		_vfprintf
  2322 ;; This function is called by:
  2323 ;;		_IMPRIMIR
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text11
  2328   003736                     __ptext11:
  2329                           	callstack 0
  2330   003736                     _sprintf:
  2331                           	callstack 21
  2332   003736  0EA5               	movlw	low (?_sprintf+4)
  2333   003738  0100               	movlb	0	; () banked
  2334   00373A  6FA9               	movwf	sprintf@ap& (0+255),b
  2335   00373C  0E00               	movlw	high (?_sprintf+4)
  2336   00373E  6FAA               	movwf	(sprintf@ap+1)& (0+255),b
  2337   003740  C0A1  F0AB         	movff	sprintf@s,sprintf@f
  2338   003744  C0A2  F0AC         	movff	sprintf@s+1,sprintf@f+1
  2339   003748                     
  2340                           ; BSR set to: 0
  2341   003748  0E00               	movlw	0
  2342   00374A  6FAF               	movwf	(sprintf@f+4)& (0+255),b
  2343   00374C  0E00               	movlw	0
  2344   00374E  6FAE               	movwf	(sprintf@f+3)& (0+255),b
  2345   003750                     
  2346                           ; BSR set to: 0
  2347   003750  0E00               	movlw	0
  2348   003752  6FB6               	movwf	(sprintf@f+11)& (0+255),b
  2349   003754  0E00               	movlw	0
  2350   003756  6FB5               	movwf	(sprintf@f+10)& (0+255),b
  2351   003758                     
  2352                           ; BSR set to: 0
  2353   003758  0EAB               	movlw	low sprintf@f
  2354   00375A  6F99               	movwf	vfprintf@fp& (0+255),b
  2355   00375C  0E00               	movlw	high sprintf@f
  2356   00375E  6F9A               	movwf	(vfprintf@fp+1)& (0+255),b
  2357   003760  C0A3  F09B         	movff	sprintf@fmt,vfprintf@fmt
  2358   003764  C0A4  F09C         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2359   003768  0EA9               	movlw	low sprintf@ap
  2360   00376A  6F9D               	movwf	vfprintf@ap& (0+255),b
  2361   00376C  0E00               	movlw	high sprintf@ap
  2362   00376E  6F9E               	movwf	(vfprintf@ap+1)& (0+255),b
  2363   003770  EC72  F01B         	call	_vfprintf	;wreg free
  2364   003774  0100               	movlb	0	; () banked
  2365   003776  51AE               	movf	(sprintf@f+3)& (0+255),w,b
  2366   003778  25A1               	addwf	sprintf@s& (0+255),w,b
  2367   00377A  6ED9               	movwf	fsr2l,c
  2368   00377C  51AF               	movf	(sprintf@f+4)& (0+255),w,b
  2369   00377E  21A2               	addwfc	(sprintf@s+1)& (0+255),w,b
  2370   003780  6EDA               	movwf	fsr2h,c
  2371   003782  6ADF               	clrf	indf2,c
  2372   003784                     
  2373                           ; BSR set to: 0
  2374   003784  0012               	return		;funcret
  2375   003786                     __end_of_sprintf:
  2376                           	callstack 0
  2377                           
  2378 ;; *************** function _vfprintf *****************
  2379 ;; Defined at:
  2380 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  fp              2   57[BANK0 ] PTR struct _IO_FILE
  2383 ;;		 -> sprintf@f(12), 
  2384 ;;  fmt             2   59[BANK0 ] PTR const unsigned char 
  2385 ;;		 -> STR_3(5), STR_1(3), 
  2386 ;;  ap              2   61[BANK0 ] PTR PTR void 
  2387 ;;		 -> sprintf@ap(2), 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  cfmt            2   63[BANK0 ] PTR unsigned char 
  2390 ;;		 -> STR_3(5), STR_1(3), 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  2   57[BANK0 ] int 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2400 ;;      Params:         0       6       0       0       0       0       0       0       0
  2401 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2403 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2404 ;;Total ram usage:        8 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 7
  2407 ;; This function calls:
  2408 ;;		_vfpfcnvrt
  2409 ;; This function is called by:
  2410 ;;		_sprintf
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text12
  2415   0036E4                     __ptext12:
  2416                           	callstack 0
  2417   0036E4                     _vfprintf:
  2418                           	callstack 21
  2419   0036E4                     
  2420                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2421   0036E4  C09B  F09F         	movff	vfprintf@fmt,vfprintf@cfmt
  2422   0036E8  C09C  F0A0         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2425   0036EC  EF87  F01B         	goto	l4035
  2426   0036F0                     l4033:
  2427                           
  2428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2429   0036F0  C099  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2430   0036F4  C09A  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2431   0036F8  0E9F               	movlw	low vfprintf@cfmt
  2432   0036FA  0100               	movlb	0	; () banked
  2433   0036FC  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  2434   0036FE  0E00               	movlw	high vfprintf@cfmt
  2435   003700  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2436   003702  C09D  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  2437   003706  C09E  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2438   00370A  EC51  F00F         	call	_vfpfcnvrt	;wreg free
  2439   00370E                     l4035:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2442   00370E  C09F  FFF6         	movff	vfprintf@cfmt,tblptrl
  2443   003712  C0A0  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2444   003716                     	if	0	;tblptru may be non-zero
  2445   003716                     	endif
  2446   003716                     	if	0	;tblptru may be non-zero
  2447   003716                     	endif
  2448   003716  0008               	tblrd		*
  2449   003718  50F5               	movf	tablat,w,c
  2450   00371A  0900               	iorlw	0
  2451   00371C  A4D8               	btfss	status,2,c
  2452   00371E  EF93  F01B         	goto	u4651
  2453   003722  EF95  F01B         	goto	u4650
  2454   003726                     u4651:
  2455   003726  EF78  F01B         	goto	l4033
  2456   00372A                     u4650:
  2457   00372A                     
  2458                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2459   00372A  0E00               	movlw	0
  2460   00372C  0100               	movlb	0	; () banked
  2461   00372E  6F9A               	movwf	(?_vfprintf+1)& (0+255),b
  2462   003730  0E00               	movlw	0
  2463   003732  6F99               	movwf	?_vfprintf& (0+255),b
  2464   003734                     
  2465                           ; BSR set to: 0
  2466   003734  0012               	return		;funcret
  2467   003736                     __end_of_vfprintf:
  2468                           	callstack 0
  2469                           
  2470 ;; *************** function _vfpfcnvrt *****************
  2471 ;; Defined at:
  2472 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  2475 ;;		 -> sprintf@f(12), 
  2476 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  2477 ;;		 -> vfprintf@cfmt(2), 
  2478 ;;  ap              2   48[BANK0 ] PTR PTR void 
  2479 ;;		 -> sprintf@ap(2), 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  convarg         4   50[BANK0 ] struct .
  2482 ;;  cp              2   55[BANK0 ] PTR unsigned char 
  2483 ;;		 -> STR_3(5), STR_1(3), 
  2484 ;;  i               2    0        int 
  2485 ;;  done            2    0        int 
  2486 ;;  c               1   54[BANK0 ] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2496 ;;      Params:         0       6       0       0       0       0       0       0       0
  2497 ;;      Locals:         0       7       0       0       0       0       0       0       0
  2498 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2499 ;;      Totals:         2      13       0       0       0       0       0       0       0
  2500 ;;Total ram usage:       15 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 6
  2503 ;; This function calls:
  2504 ;;		_dtoa
  2505 ;;		_efgtoa
  2506 ;;		_fputc
  2507 ;;		_read_prec_or_width
  2508 ;; This function is called by:
  2509 ;;		_vfprintf
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text13
  2514   001EA2                     __ptext13:
  2515                           	callstack 0
  2516   001EA2                     _vfpfcnvrt:
  2517                           	callstack 21
  2518   001EA2                     
  2519                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2520   001EA2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2521   001EA6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2522   001EAA  CFDE FFF6          	movff	postinc2,tblptrl
  2523   001EAE  CFDD FFF7          	movff	postdec2,tblptrh
  2524   001EB2                     	if	0	;tblptru may be non-zero
  2525   001EB2                     	endif
  2526   001EB2                     	if	0	;tblptru may be non-zero
  2527   001EB2                     	endif
  2528   001EB2  0008               	tblrd		*
  2529   001EB4  50F5               	movf	tablat,w,c
  2530   001EB6  0A25               	xorlw	37
  2531   001EB8  A4D8               	btfss	status,2,c
  2532   001EBA  EF61  F00F         	goto	u4381
  2533   001EBE  EF63  F00F         	goto	u4380
  2534   001EC2                     u4381:
  2535   001EC2  EFC3  F010         	goto	l3897
  2536   001EC6                     u4380:
  2537   001EC6                     
  2538                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2539   001EC6  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2540   001ECA  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2541   001ECE  2ADE               	incf	postinc2,f,c
  2542   001ED0  0E00               	movlw	0
  2543   001ED2  22DD               	addwfc	postdec2,f,c
  2544   001ED4                     
  2545                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2546   001ED4  0E00               	movlw	0
  2547   001ED6  0100               	movlb	0	; () banked
  2548   001ED8  6FE0               	movwf	(_width+1)& (0+255),b
  2549   001EDA  0E00               	movlw	0
  2550   001EDC  6FDF               	movwf	_width& (0+255),b
  2551   001EDE  C0DF  F0E3         	movff	_width,_flags
  2552   001EE2                     
  2553                           ; BSR set to: 0
  2554                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2555   001EE2  69E1               	setf	_prec& (0+255),b
  2556   001EE4  69E2               	setf	(_prec+1)& (0+255),b
  2557   001EE6                     
  2558                           ; BSR set to: 0
  2559                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  2560   001EE6  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2561   001EEA  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2562   001EEE  CFDE FFF6          	movff	postinc2,tblptrl
  2563   001EF2  CFDD FFF7          	movff	postdec2,tblptrh
  2564   001EF6                     	if	0	;tblptru may be non-zero
  2565   001EF6                     	endif
  2566   001EF6                     	if	0	;tblptru may be non-zero
  2567   001EF6                     	endif
  2568   001EF6  0008               	tblrd		*
  2569   001EF8  50F5               	movf	tablat,w,c
  2570   001EFA  0A2E               	xorlw	46
  2571   001EFC  A4D8               	btfss	status,2,c
  2572   001EFE  EF83  F00F         	goto	u4391
  2573   001F02  EF85  F00F         	goto	u4390
  2574   001F06                     u4391:
  2575   001F06  EF9A  F00F         	goto	l3847
  2576   001F0A                     u4390:
  2577   001F0A                     
  2578                           ; BSR set to: 0
  2579                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  2580   001F0A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2581   001F0E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2582   001F12  2ADE               	incf	postinc2,f,c
  2583   001F14  0E00               	movlw	0
  2584   001F16  22DD               	addwfc	postdec2,f,c
  2585   001F18                     
  2586                           ; BSR set to: 0
  2587                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2588   001F18  C08E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2589   001F1C  C08F  F008         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  2590   001F20  C090  F009         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2591   001F24  C091  F00A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  2592   001F28  ECB0  F017         	call	_read_prec_or_width	;wreg free
  2593   001F2C  C007  F0E1         	movff	?_read_prec_or_width,_prec
  2594   001F30  C008  F0E2         	movff	?_read_prec_or_width+1,_prec+1
  2595   001F34                     l3847:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2598   001F34  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2599   001F38  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2600   001F3C  CFDE F097          	movff	postinc2,vfpfcnvrt@cp
  2601   001F40  CFDD F098          	movff	postdec2,vfpfcnvrt@cp+1
  2602   001F44                     
  2603                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2604   001F44  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2605   001F48  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2606   001F4C                     	if	0	;tblptru may be non-zero
  2607   001F4C                     	endif
  2608   001F4C                     	if	0	;tblptru may be non-zero
  2609   001F4C                     	endif
  2610   001F4C  0008               	tblrd		*
  2611   001F4E  50F5               	movf	tablat,w,c
  2612   001F50  0A64               	xorlw	100
  2613   001F52  B4D8               	btfsc	status,2,c
  2614   001F54  EFAE  F00F         	goto	u4401
  2615   001F58  EFB0  F00F         	goto	u4400
  2616   001F5C                     u4401:
  2617   001F5C  EFBE  F00F         	goto	l3853
  2618   001F60                     u4400:
  2619   001F60  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2620   001F64  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2621   001F68                     	if	0	;tblptru may be non-zero
  2622   001F68                     	endif
  2623   001F68                     	if	0	;tblptru may be non-zero
  2624   001F68                     	endif
  2625   001F68  0008               	tblrd		*
  2626   001F6A  50F5               	movf	tablat,w,c
  2627   001F6C  0A69               	xorlw	105
  2628   001F6E  A4D8               	btfss	status,2,c
  2629   001F70  EFBC  F00F         	goto	u4411
  2630   001F74  EFBE  F00F         	goto	u4410
  2631   001F78                     u4411:
  2632   001F78  EFED  F00F         	goto	l3859
  2633   001F7C                     u4410:
  2634   001F7C                     l3853:
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2637   001F7C  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2638   001F80  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2639   001F84  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  2640   001F88  0E02               	movlw	2
  2641   001F8A  26DE               	addwf	postinc2,f,c
  2642   001F8C  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  2643   001F90  0E00               	movlw	0
  2644   001F92  22DD               	addwfc	postdec2,f,c
  2645   001F94  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2646   001F98  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2647   001F9C  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  2648   001FA0  CFDD F093          	movff	postdec2,vfpfcnvrt@convarg+1
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2651   001FA4  0E01               	movlw	1
  2652   001FA6  0100               	movlb	0	; () banked
  2653   001FA8  2597               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2654   001FAA  6E5E               	movwf	??_vfpfcnvrt^0,c
  2655   001FAC  0E00               	movlw	0
  2656   001FAE  2198               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2657   001FB0  6E5F               	movwf	(??_vfpfcnvrt+1)^0,c
  2658   001FB2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2659   001FB6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2660   001FBA  C05E  FFDE         	movff	??_vfpfcnvrt,postinc2
  2661   001FBE  C05F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2662   001FC2                     
  2663                           ; BSR set to: 0
  2664                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2665   001FC2  C08C  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  2666   001FC6  C08D  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2667   001FCA  C092  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  2668   001FCE  C093  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2669   001FD2  ECD2  F013         	call	_dtoa	;wreg free
  2670   001FD6  EFD7  F010         	goto	l1022
  2671   001FDA                     l3859:
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  2674   001FDA  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2675   001FDE  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2676   001FE2  CFDE F097          	movff	postinc2,vfpfcnvrt@cp
  2677   001FE6  CFDD F098          	movff	postdec2,vfpfcnvrt@cp+1
  2678   001FEA                     
  2679                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  2680   001FEA  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2681   001FEE  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2682   001FF2                     	if	0	;tblptru may be non-zero
  2683   001FF2                     	endif
  2684   001FF2                     	if	0	;tblptru may be non-zero
  2685   001FF2                     	endif
  2686   001FF2  0008               	tblrd		*
  2687   001FF4  CFF5 F096          	movff	tablat,vfpfcnvrt@c
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  2690   001FF8  EF0A  F010         	goto	l3871
  2691   001FFC                     l3863:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  2695   001FFC  4B97               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2696   001FFE  2B98               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2697                           
  2698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  2699   002000  EF24  F010         	goto	l3873
  2700   002004                     l3865:
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  2704   002004  0E6C               	movlw	108
  2705   002006  6F96               	movwf	vfpfcnvrt@c& (0+255),b
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  2708   002008  EF24  F010         	goto	l3873
  2709   00200C                     l3867:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  2713   00200C  0E00               	movlw	0
  2714   00200E  6F96               	movwf	vfpfcnvrt@c& (0+255),b
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  2717   002010  EF24  F010         	goto	l3873
  2718   002014                     l3871:
  2719   002014  0100               	movlb	0	; () banked
  2720   002016  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  2721   002018  6E5E               	movwf	??_vfpfcnvrt^0,c
  2722   00201A  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  2723                           
  2724                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2725                           ; Switch size 1, requested type "simple"
  2726                           ; Number of cases is 1, Range of values is 0 to 0
  2727                           ; switch strategies available:
  2728                           ; Name         Instructions Cycles
  2729                           ; simple_byte            4     3 (average)
  2730                           ;	Chosen strategy is simple_byte
  2731   00201C  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2732   00201E  0A00               	xorlw	0	; case 0
  2733   002020  B4D8               	btfsc	status,2,c
  2734   002022  EF15  F010         	goto	l4433
  2735   002026  EF06  F010         	goto	l3867
  2736   00202A                     l4433:
  2737                           
  2738                           ; BSR set to: 0
  2739                           ; Switch size 1, requested type "simple"
  2740                           ; Number of cases is 3, Range of values is 76 to 108
  2741                           ; switch strategies available:
  2742                           ; Name         Instructions Cycles
  2743                           ; simple_byte           10     6 (average)
  2744                           ;	Chosen strategy is simple_byte
  2745   00202A  505E               	movf	??_vfpfcnvrt^0,w,c
  2746   00202C  0A4C               	xorlw	76	; case 76
  2747   00202E  B4D8               	btfsc	status,2,c
  2748   002030  EFFE  F00F         	goto	l3863
  2749   002034  0A2A               	xorlw	42	; case 102
  2750   002036  B4D8               	btfsc	status,2,c
  2751   002038  EF02  F010         	goto	l3865
  2752   00203C  0A0A               	xorlw	10	; case 108
  2753   00203E  B4D8               	btfsc	status,2,c
  2754   002040  EFFE  F00F         	goto	l3863
  2755   002044  EF06  F010         	goto	l3867
  2756   002048                     l3873:
  2757                           
  2758                           ; BSR set to: 0
  2759   002048  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2760   00204C  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2761   002050                     	if	0	;tblptru may be non-zero
  2762   002050                     	endif
  2763   002050                     	if	0	;tblptru may be non-zero
  2764   002050                     	endif
  2765   002050  0008               	tblrd		*
  2766   002052  50F5               	movf	tablat,w,c
  2767   002054  0A66               	xorlw	102
  2768   002056  A4D8               	btfss	status,2,c
  2769   002058  EF30  F010         	goto	u4421
  2770   00205C  EF32  F010         	goto	u4420
  2771   002060                     u4421:
  2772   002060  EFBA  F010         	goto	l3893
  2773   002064                     u4420:
  2774   002064  EF68  F010         	goto	l3881
  2775   002068                     l3875:
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2779   002068  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2780   00206C  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2781   002070  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  2782   002074  0E04               	movlw	4
  2783   002076  26DE               	addwf	postinc2,f,c
  2784   002078  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  2785   00207C  0E00               	movlw	0
  2786   00207E  22DD               	addwfc	postdec2,f,c
  2787   002080  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2788   002084  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2789   002088  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  2790   00208C  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  2791   002090  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg+2
  2792   002094  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+3
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  2795   002098  EF7D  F010         	goto	l3883
  2796   00209C                     l3877:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2800   00209C  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2801   0020A0  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2802   0020A4  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  2803   0020A8  0E04               	movlw	4
  2804   0020AA  26DE               	addwf	postinc2,f,c
  2805   0020AC  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  2806   0020B0  0E00               	movlw	0
  2807   0020B2  22DD               	addwfc	postdec2,f,c
  2808   0020B4  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2809   0020B8  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2810   0020BC  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  2811   0020C0  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  2812   0020C4  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg+2
  2813   0020C8  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+3
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  2816   0020CC  EF7D  F010         	goto	l3883
  2817   0020D0                     l3881:
  2818                           
  2819                           ; BSR set to: 0
  2820   0020D0  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  2821   0020D2  6E5E               	movwf	??_vfpfcnvrt^0,c
  2822   0020D4  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  2823                           
  2824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2825                           ; Switch size 1, requested type "simple"
  2826                           ; Number of cases is 1, Range of values is 0 to 0
  2827                           ; switch strategies available:
  2828                           ; Name         Instructions Cycles
  2829                           ; simple_byte            4     3 (average)
  2830                           ;	Chosen strategy is simple_byte
  2831   0020D6  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2832   0020D8  0A00               	xorlw	0	; case 0
  2833   0020DA  B4D8               	btfsc	status,2,c
  2834   0020DC  EF72  F010         	goto	l4435
  2835   0020E0  EF7D  F010         	goto	l3883
  2836   0020E4                     l4435:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ; Switch size 1, requested type "simple"
  2840                           ; Number of cases is 2, Range of values is 76 to 108
  2841                           ; switch strategies available:
  2842                           ; Name         Instructions Cycles
  2843                           ; simple_byte            7     4 (average)
  2844                           ;	Chosen strategy is simple_byte
  2845   0020E4  505E               	movf	??_vfpfcnvrt^0,w,c
  2846   0020E6  0A4C               	xorlw	76	; case 76
  2847   0020E8  B4D8               	btfsc	status,2,c
  2848   0020EA  EF4E  F010         	goto	l3877
  2849   0020EE  0A20               	xorlw	32	; case 108
  2850   0020F0  B4D8               	btfsc	status,2,c
  2851   0020F2  EF34  F010         	goto	l3875
  2852   0020F6  EF7D  F010         	goto	l3883
  2853   0020FA                     l3883:
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  2857   0020FA  0E01               	movlw	1
  2858   0020FC  2597               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2859   0020FE  6E5E               	movwf	??_vfpfcnvrt^0,c
  2860   002100  0E00               	movlw	0
  2861   002102  2198               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2862   002104  6E5F               	movwf	(??_vfpfcnvrt+1)^0,c
  2863   002106  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2864   00210A  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2865   00210E  C05E  FFDE         	movff	??_vfpfcnvrt,postinc2
  2866   002112  C05F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  2869   002116  EFA4  F010         	goto	l3891
  2870   00211A                     l3885:
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2874   00211A  C08C  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  2875   00211E  C08D  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2876   002122  C092  F057         	movff	vfpfcnvrt@convarg,efgtoa@f
  2877   002126  C093  F058         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2878   00212A  C094  F059         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2879   00212E  C095  F05A         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2880   002132  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2881   002136  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2882   00213A                     	if	0	;tblptru may be non-zero
  2883   00213A                     	endif
  2884   00213A                     	if	0	;tblptru may be non-zero
  2885   00213A                     	endif
  2886   00213A  0008               	tblrd		*
  2887   00213C  CFF5 F05B          	movff	tablat,efgtoa@c
  2888   002140  EC13  F004         	call	_efgtoa	;wreg free
  2889   002144  EFD7  F010         	goto	l1022
  2890   002148                     l3891:
  2891                           
  2892                           ; BSR set to: 0
  2893   002148  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2894   00214C  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2895   002150                     	if	0	;tblptru may be non-zero
  2896   002150                     	endif
  2897   002150                     	if	0	;tblptru may be non-zero
  2898   002150                     	endif
  2899   002150  0008               	tblrd		*
  2900   002152  50F5               	movf	tablat,w,c
  2901   002154  6E5E               	movwf	??_vfpfcnvrt^0,c
  2902   002156  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  2903                           
  2904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2905                           ; Switch size 1, requested type "simple"
  2906                           ; Number of cases is 1, Range of values is 0 to 0
  2907                           ; switch strategies available:
  2908                           ; Name         Instructions Cycles
  2909                           ; simple_byte            4     3 (average)
  2910                           ;	Chosen strategy is simple_byte
  2911   002158  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2912   00215A  0A00               	xorlw	0	; case 0
  2913   00215C  B4D8               	btfsc	status,2,c
  2914   00215E  EFB3  F010         	goto	l4437
  2915   002162  EFBA  F010         	goto	l3893
  2916   002166                     l4437:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ; Switch size 1, requested type "simple"
  2920                           ; Number of cases is 1, Range of values is 102 to 102
  2921                           ; switch strategies available:
  2922                           ; Name         Instructions Cycles
  2923                           ; simple_byte            4     3 (average)
  2924                           ;	Chosen strategy is simple_byte
  2925   002166  505E               	movf	??_vfpfcnvrt^0,w,c
  2926   002168  0A66               	xorlw	102	; case 102
  2927   00216A  B4D8               	btfsc	status,2,c
  2928   00216C  EF8D  F010         	goto	l3885
  2929   002170  EFBA  F010         	goto	l3893
  2930   002174                     l3893:
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2933   002174  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2934   002178  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2935   00217C  2ADE               	incf	postinc2,f,c
  2936   00217E  0E00               	movlw	0
  2937   002180  22DD               	addwfc	postdec2,f,c
  2938   002182  EFD7  F010         	goto	l1022
  2939   002186                     l3897:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2942   002186  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2943   00218A  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2944   00218E  CFDE FFF6          	movff	postinc2,tblptrl
  2945   002192  CFDD FFF7          	movff	postdec2,tblptrh
  2946   002196                     	if	0	;tblptru may be non-zero
  2947   002196                     	endif
  2948   002196                     	if	0	;tblptru may be non-zero
  2949   002196                     	endif
  2950   002196  0008               	tblrd		*
  2951   002198  50F5               	movf	tablat,w,c
  2952   00219A  6E03               	movwf	fputc@c^0,c
  2953   00219C  6A04               	clrf	(fputc@c+1)^0,c
  2954   00219E  C08C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2955   0021A2  C08D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2956   0021A6  EC4B  F017         	call	_fputc	;wreg free
  2957   0021AA  EFBA  F010         	goto	l3893
  2958   0021AE                     l1022:
  2959   0021AE  0012               	return		;funcret
  2960   0021B0                     __end_of_vfpfcnvrt:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _read_prec_or_width *****************
  2964 ;; Defined at:
  2965 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  fmt             2    6[COMRAM] PTR PTR const unsigned c
  2968 ;;		 -> vfprintf@cfmt(2), 
  2969 ;;  ap              2    8[COMRAM] PTR PTR void [1]
  2970 ;;		 -> sprintf@ap(2), 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  c               1   12[COMRAM] unsigned char 
  2973 ;;  n               2   13[COMRAM] int 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  2    6[COMRAM] int 
  2976 ;; Registers used:
  2977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2983 ;;      Params:         4       0       0       0       0       0       0       0       0
  2984 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2985 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2986 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2987 ;;Total ram usage:        9 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; Hardware stack levels required when called: 1
  2990 ;; This function calls:
  2991 ;;		___wmul
  2992 ;; This function is called by:
  2993 ;;		_vfpfcnvrt
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text14
  2998   002F60                     __ptext14:
  2999                           	callstack 0
  3000   002F60                     _read_prec_or_width:
  3001                           	callstack 25
  3002   002F60                     
  3003                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  3004   002F60  0E00               	movlw	0
  3005   002F62  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  3006   002F64  0E00               	movlw	0
  3007   002F66  6E0E               	movwf	read_prec_or_width@n^0,c
  3008   002F68                     
  3009                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  3010   002F68  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  3011   002F6C  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  3012   002F70  CFDE FFF6          	movff	postinc2,tblptrl
  3013   002F74  CFDD FFF7          	movff	postdec2,tblptrh
  3014   002F78                     	if	0	;tblptru may be non-zero
  3015   002F78                     	endif
  3016   002F78                     	if	0	;tblptru may be non-zero
  3017   002F78                     	endif
  3018   002F78  0008               	tblrd		*
  3019   002F7A  50F5               	movf	tablat,w,c
  3020   002F7C  0A2A               	xorlw	42
  3021   002F7E  A4D8               	btfss	status,2,c
  3022   002F80  EFC4  F017         	goto	u4361
  3023   002F84  EFC6  F017         	goto	u4360
  3024   002F88                     u4361:
  3025   002F88  EFFA  F017         	goto	l3831
  3026   002F8C                     u4360:
  3027   002F8C                     
  3028                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  3029   002F8C  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  3030   002F90  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  3031   002F94  2ADE               	incf	postinc2,f,c
  3032   002F96  0E00               	movlw	0
  3033   002F98  22DD               	addwfc	postdec2,f,c
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3036   002F9A  C009  FFD9         	movff	read_prec_or_width@ap,fsr2l
  3037   002F9E  C00A  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  3038   002FA2  CFDF F00B          	movff	indf2,??_read_prec_or_width
  3039   002FA6  0E02               	movlw	2
  3040   002FA8  26DE               	addwf	postinc2,f,c
  3041   002FAA  CFDF F00C          	movff	indf2,??_read_prec_or_width+1
  3042   002FAE  0E00               	movlw	0
  3043   002FB0  22DD               	addwfc	postdec2,f,c
  3044   002FB2  C00B  FFD9         	movff	??_read_prec_or_width,fsr2l
  3045   002FB6  C00C  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  3046   002FBA  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  3047   002FBE  CFDD F00F          	movff	postdec2,read_prec_or_width@n+1
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  3050   002FC2  EF0E  F018         	goto	l1010
  3051   002FC6                     l3827:
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  3054   002FC6  C00E  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  3055   002FCA  C00F  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3056   002FCE  0E00               	movlw	0
  3057   002FD0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3058   002FD2  0E0A               	movlw	10
  3059   002FD4  6E03               	movwf	___wmul@multiplicand^0,c
  3060   002FD6  ECC8  F01C         	call	___wmul	;wreg free
  3061   002FDA  500D               	movf	read_prec_or_width@c^0,w,c
  3062   002FDC  2401               	addwf	?___wmul^0,w,c
  3063   002FDE  6E0E               	movwf	read_prec_or_width@n^0,c
  3064   002FE0  0E00               	movlw	0
  3065   002FE2  2002               	addwfc	(?___wmul+1)^0,w,c
  3066   002FE4  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  3067   002FE6                     
  3068                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  3069   002FE6  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  3070   002FEA  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  3071   002FEE  2ADE               	incf	postinc2,f,c
  3072   002FF0  0E00               	movlw	0
  3073   002FF2  22DD               	addwfc	postdec2,f,c
  3074   002FF4                     l3831:
  3075                           
  3076                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3077   002FF4  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  3078   002FF8  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  3079   002FFC  CFDE FFF6          	movff	postinc2,tblptrl
  3080   003000  CFDD FFF7          	movff	postdec2,tblptrh
  3081   003004                     	if	0	;tblptru may be non-zero
  3082   003004                     	endif
  3083   003004                     	if	0	;tblptru may be non-zero
  3084   003004                     	endif
  3085   003004  0008               	tblrd		*
  3086   003006  50F5               	movf	tablat,w,c
  3087   003008  0FD0               	addlw	208
  3088   00300A  6E0D               	movwf	read_prec_or_width@c^0,c
  3089   00300C  0E09               	movlw	9
  3090   00300E  640D               	cpfsgt	read_prec_or_width@c^0,c
  3091   003010  EF0C  F018         	goto	u4371
  3092   003014  EF0E  F018         	goto	u4370
  3093   003018                     u4371:
  3094   003018  EFE3  F017         	goto	l3827
  3095   00301C                     u4370:
  3096   00301C                     l1010:
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  3099   00301C  C00E  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  3100   003020  C00F  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3101   003024  0012               	return		;funcret
  3102   003026                     __end_of_read_prec_or_width:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function ___wmul *****************
  3106 ;; Defined at:
  3107 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  multiplier      2    0[COMRAM] unsigned int 
  3110 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  product         2    4[COMRAM] unsigned int 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  2    0[COMRAM] unsigned int 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, prodl, prodh
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3122 ;;      Params:         4       0       0       0       0       0       0       0       0
  3123 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3125 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3126 ;;Total ram usage:        6 bytes
  3127 ;; Hardware stack levels used: 1
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_read_prec_or_width
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text15
  3136   003990                     __ptext15:
  3137                           	callstack 0
  3138   003990                     ___wmul:
  3139                           	callstack 25
  3140   003990  5001               	movf	___wmul@multiplier^0,w,c
  3141   003992  0203               	mulwf	___wmul@multiplicand^0,c
  3142   003994  CFF3 F005          	movff	prodl,___wmul@product
  3143   003998  CFF4 F006          	movff	prodh,___wmul@product+1
  3144   00399C  5001               	movf	___wmul@multiplier^0,w,c
  3145   00399E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3146   0039A0  50F3               	movf	243,w,c
  3147   0039A2  2606               	addwf	(___wmul@product+1)^0,f,c
  3148   0039A4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3149   0039A6  0203               	mulwf	___wmul@multiplicand^0,c
  3150   0039A8  50F3               	movf	243,w,c
  3151   0039AA  2606               	addwf	(___wmul@product+1)^0,f,c
  3152   0039AC  C005  F001         	movff	___wmul@product,?___wmul
  3153   0039B0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3154   0039B4  0012               	return		;funcret
  3155   0039B6                     __end_of___wmul:
  3156                           	callstack 0
  3157                           
  3158 ;; *************** function _efgtoa *****************
  3159 ;; Defined at:
  3160 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  3163 ;;		 -> sprintf@f(12), 
  3164 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  3165 ;;  c               1   90[COMRAM] unsigned char 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  u               4   40[BANK0 ] struct flui
  3168 ;;  g               4   36[BANK0 ] struct flui
  3169 ;;  l               4   29[BANK0 ] struct flui
  3170 ;;  h               4   25[BANK0 ] struct flui
  3171 ;;  ou              4   19[BANK0 ] struct flui
  3172 ;;  n               2   34[BANK0 ] int 
  3173 ;;  i               2   23[BANK0 ] int 
  3174 ;;  w               2   17[BANK0 ] int 
  3175 ;;  e               2   15[BANK0 ] int 
  3176 ;;  m               2   13[BANK0 ] int 
  3177 ;;  d               2   11[BANK0 ] int 
  3178 ;;  t               2    4[BANK0 ] int 
  3179 ;;  p               2    2[BANK0 ] int 
  3180 ;;  ne              2    0[BANK0 ] int 
  3181 ;;  sign            1   33[BANK0 ] unsigned char 
  3182 ;;  nmode           1   10[BANK0 ] unsigned char 
  3183 ;;  mode            1    9[BANK0 ] unsigned char 
  3184 ;;  pp              1    8[BANK0 ] unsigned char 
  3185 ;;  esign           1    0        unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3195 ;;      Params:         7       0       0       0       0       0       0       0       0
  3196 ;;      Locals:         0      44       0       0       0       0       0       0       0
  3197 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3198 ;;      Totals:         9      44       0       0       0       0       0       0       0
  3199 ;;Total ram usage:       53 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 5
  3202 ;; This function calls:
  3203 ;;		___fladd
  3204 ;;		___fldiv
  3205 ;;		___fleq
  3206 ;;		___flge
  3207 ;;		___flmul
  3208 ;;		___flneg
  3209 ;;		___flsub
  3210 ;;		___fltol
  3211 ;;		___fpclassifyf
  3212 ;;		_floorf
  3213 ;;		_labs
  3214 ;;		_memcpy
  3215 ;;		_pad
  3216 ;;		_strcpy
  3217 ;; This function is called by:
  3218 ;;		_vfpfcnvrt
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text16
  3223   000826                     __ptext16:
  3224                           	callstack 0
  3225   000826                     _efgtoa:
  3226                           	callstack 21
  3227   000826                     
  3228                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  3229   000826  0E00               	movlw	0
  3230   000828  0100               	movlb	0	; () banked
  3231   00082A  6F81               	movwf	efgtoa@sign& (0+255),b
  3232   00082C                     
  3233                           ; BSR set to: 0
  3234                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  3235   00082C  C057  F084         	movff	efgtoa@f,efgtoa@g
  3236   000830  C058  F085         	movff	efgtoa@f+1,efgtoa@g+1
  3237   000834  C059  F086         	movff	efgtoa@f+2,efgtoa@g+2
  3238   000838  C05A  F087         	movff	efgtoa@f+3,efgtoa@g+3
  3239   00083C                     
  3240                           ; BSR set to: 0
  3241                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  3242   00083C  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3243   00083E  EF25  F004         	goto	u4040
  3244   000842  EF23  F004         	goto	u4041
  3245   000846                     u4041:
  3246   000846  EF39  F004         	goto	l3609
  3247   00084A                     u4040:
  3248   00084A                     
  3249                           ; BSR set to: 0
  3250                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  3251   00084A  0E01               	movlw	1
  3252   00084C  6F81               	movwf	efgtoa@sign& (0+255),b
  3253   00084E                     
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  3256   00084E  C084  F001         	movff	efgtoa@g,___flneg@f1
  3257   000852  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3258   000856  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3259   00085A  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3260   00085E  EC50  F01C         	call	___flneg	;wreg free
  3261   000862  C001  F084         	movff	?___flneg,efgtoa@g
  3262   000866  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  3263   00086A  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  3264   00086E  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  3265   000872                     l3609:
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  3268   000872  0E00               	movlw	0
  3269   000874  0100               	movlb	0	; () banked
  3270   000876  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3271   000878  0E00               	movlw	0
  3272   00087A  6F82               	movwf	efgtoa@n& (0+255),b
  3273   00087C                     
  3274                           ; BSR set to: 0
  3275                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  3276   00087C  C0DF  F071         	movff	_width,efgtoa@w
  3277   000880  C0E0  F072         	movff	_width+1,efgtoa@w+1
  3278   000884                     
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  3281   000884  5181               	movf	efgtoa@sign& (0+255),w,b
  3282   000886  B4D8               	btfsc	status,2,c
  3283   000888  EF48  F004         	goto	u4051
  3284   00088C  EF4A  F004         	goto	u4050
  3285   000890                     u4051:
  3286   000890  EF5E  F004         	goto	l3623
  3287   000894                     u4050:
  3288   000894                     
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  3291   000894  5181               	movf	efgtoa@sign& (0+255),w,b
  3292   000896  A4D8               	btfss	status,2,c
  3293   000898  EF50  F004         	goto	u4061
  3294   00089C  EF52  F004         	goto	u4060
  3295   0008A0                     u4061:
  3296   0008A0  EF58  F004         	goto	l3619
  3297   0008A4                     u4060:
  3298   0008A4                     
  3299                           ; BSR set to: 0
  3300   0008A4  0E00               	movlw	0
  3301   0008A6  6F67               	movwf	(_efgtoa$1175+1)& (0+255),b
  3302   0008A8  0E2B               	movlw	43
  3303   0008AA  6F66               	movwf	_efgtoa$1175& (0+255),b
  3304   0008AC  EF5C  F004         	goto	l3621
  3305   0008B0                     l3619:
  3306                           
  3307                           ; BSR set to: 0
  3308   0008B0  0E00               	movlw	0
  3309   0008B2  6F67               	movwf	(_efgtoa$1175+1)& (0+255),b
  3310   0008B4  0E2D               	movlw	45
  3311   0008B6  6F66               	movwf	_efgtoa$1175& (0+255),b
  3312   0008B8                     l3621:
  3313                           
  3314                           ; BSR set to: 0
  3315   0008B8  C066  F081         	movff	_efgtoa$1175,efgtoa@sign
  3316   0008BC                     l3623:
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3320   0008BC  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  3321   0008C0  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3322   0008C4  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3323   0008C8  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3324   0008CC  ECCC  F016         	call	___fpclassifyf	;wreg free
  3325   0008D0  0401               	decf	?___fpclassifyf^0,w,c
  3326   0008D2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3327   0008D4  A4D8               	btfss	status,2,c
  3328   0008D6  EF6F  F004         	goto	u4071
  3329   0008DA  EF71  F004         	goto	u4070
  3330   0008DE                     u4071:
  3331   0008DE  EFA4  F004         	goto	l3641
  3332   0008E2                     u4070:
  3333   0008E2                     
  3334                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  3335   0008E2  0100               	movlb	0	; () banked
  3336   0008E4  5181               	movf	efgtoa@sign& (0+255),w,b
  3337   0008E6  B4D8               	btfsc	status,2,c
  3338   0008E8  EF78  F004         	goto	u4081
  3339   0008EC  EF7A  F004         	goto	u4080
  3340   0008F0                     u4081:
  3341   0008F0  EF83  F004         	goto	l3633
  3342   0008F4                     u4080:
  3343   0008F4                     
  3344                           ; BSR set to: 0
  3345                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  3346   0008F4  C081  F1A4         	movff	efgtoa@sign,_dbuf
  3347   0008F8                     
  3348                           ; BSR set to: 0
  3349                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  3350   0008F8  0771               	decf	efgtoa@w& (0+255),f,b
  3351   0008FA  A0D8               	btfss	status,0,c
  3352   0008FC  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3353   0008FE                     
  3354                           ; BSR set to: 0
  3355                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  3356   0008FE  0E00               	movlw	0
  3357   000900  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3358   000902  0E01               	movlw	1
  3359   000904  6F82               	movwf	efgtoa@n& (0+255),b
  3360   000906                     l3633:
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  3364   000906  0EA4               	movlw	low _dbuf
  3365   000908  2582               	addwf	efgtoa@n& (0+255),w,b
  3366   00090A  6E05               	movwf	strcpy@dest^0,c
  3367   00090C  0E01               	movlw	high _dbuf
  3368   00090E  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3369   000910  6E06               	movwf	(strcpy@dest+1)^0,c
  3370   000912  0E18               	movlw	low STR_6
  3371   000914  6E07               	movwf	strcpy@src^0,c
  3372   000916  0E08               	movlw	high STR_6
  3373   000918  6E08               	movwf	(strcpy@src+1)^0,c
  3374   00091A  EC17  F01B         	call	_strcpy	;wreg free
  3375   00091E                     l3635:
  3376                           
  3377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3378   00091E  0100               	movlb	0	; () banked
  3379   000920  0EFD               	movlw	253
  3380   000922  2771               	addwf	efgtoa@w& (0+255),f,b
  3381   000924  0EFF               	movlw	255
  3382   000926  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3383   000928                     
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3386   000928  C055  F013         	movff	efgtoa@fp,pad@fp
  3387   00092C  C056  F014         	movff	efgtoa@fp+1,pad@fp+1
  3388   000930  0EA4               	movlw	low _dbuf
  3389   000932  6E15               	movwf	pad@buf^0,c
  3390   000934  0E01               	movlw	high _dbuf
  3391   000936  6E16               	movwf	(pad@buf+1)^0,c
  3392   000938  C071  F017         	movff	efgtoa@w,pad@p
  3393   00093C  C072  F018         	movff	efgtoa@w+1,pad@p+1
  3394   000940  ECE8  F019         	call	_pad	;wreg free
  3395   000944  EF0E  F009         	goto	l965
  3396   000948                     l3641:
  3397                           
  3398                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3399   000948  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  3400   00094C  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3401   000950  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3402   000954  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3403   000958  ECCC  F016         	call	___fpclassifyf	;wreg free
  3404   00095C  5001               	movf	?___fpclassifyf^0,w,c
  3405   00095E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3406   000960  A4D8               	btfss	status,2,c
  3407   000962  EFB5  F004         	goto	u4091
  3408   000966  EFB7  F004         	goto	u4090
  3409   00096A                     u4091:
  3410   00096A  EFD7  F004         	goto	l3659
  3411   00096E                     u4090:
  3412   00096E                     
  3413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  3414   00096E  0100               	movlb	0	; () banked
  3415   000970  5181               	movf	efgtoa@sign& (0+255),w,b
  3416   000972  B4D8               	btfsc	status,2,c
  3417   000974  EFBE  F004         	goto	u4101
  3418   000978  EFC0  F004         	goto	u4100
  3419   00097C                     u4101:
  3420   00097C  EFC9  F004         	goto	l3651
  3421   000980                     u4100:
  3422   000980                     
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  3425   000980  C081  F1A4         	movff	efgtoa@sign,_dbuf
  3426   000984                     
  3427                           ; BSR set to: 0
  3428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  3429   000984  0771               	decf	efgtoa@w& (0+255),f,b
  3430   000986  A0D8               	btfss	status,0,c
  3431   000988  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3432   00098A                     
  3433                           ; BSR set to: 0
  3434                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  3435   00098A  0E00               	movlw	0
  3436   00098C  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3437   00098E  0E01               	movlw	1
  3438   000990  6F82               	movwf	efgtoa@n& (0+255),b
  3439   000992                     l3651:
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  3443   000992  0EA4               	movlw	low _dbuf
  3444   000994  2582               	addwf	efgtoa@n& (0+255),w,b
  3445   000996  6E05               	movwf	strcpy@dest^0,c
  3446   000998  0E01               	movlw	high _dbuf
  3447   00099A  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3448   00099C  6E06               	movwf	(strcpy@dest+1)^0,c
  3449   00099E  0E1C               	movlw	low STR_9
  3450   0009A0  6E07               	movwf	strcpy@src^0,c
  3451   0009A2  0E08               	movlw	high STR_9
  3452   0009A4  6E08               	movwf	(strcpy@src+1)^0,c
  3453   0009A6  EC17  F01B         	call	_strcpy	;wreg free
  3454   0009AA  EF8F  F004         	goto	l3635
  3455   0009AE                     l3659:
  3456                           
  3457                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  3458   0009AE  0E00               	movlw	0
  3459   0009B0  0100               	movlb	0	; () banked
  3460   0009B2  6F88               	movwf	efgtoa@u& (0+255),b
  3461   0009B4  0E00               	movlw	0
  3462   0009B6  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3463   0009B8  0E80               	movlw	128
  3464   0009BA  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3465   0009BC  0E3F               	movlw	63
  3466   0009BE  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  3469   0009C0  0E00               	movlw	0
  3470   0009C2  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3471   0009C4  0E00               	movlw	0
  3472   0009C6  6F6F               	movwf	efgtoa@e& (0+255),b
  3473   0009C8                     
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  3476   0009C8  C084  F001         	movff	efgtoa@g,___fleq@ff1
  3477   0009CC  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3478   0009D0  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3479   0009D4  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3480   0009D8  0E00               	movlw	0
  3481   0009DA  6E05               	movwf	___fleq@ff2^0,c
  3482   0009DC  0E00               	movlw	0
  3483   0009DE  6E06               	movwf	(___fleq@ff2+1)^0,c
  3484   0009E0  0E00               	movlw	0
  3485   0009E2  6E07               	movwf	(___fleq@ff2+2)^0,c
  3486   0009E4  0E00               	movlw	0
  3487   0009E6  6E08               	movwf	(___fleq@ff2+3)^0,c
  3488   0009E8  ECCD  F018         	call	___fleq	;wreg free
  3489   0009EC  B0D8               	btfsc	status,0,c
  3490   0009EE  EFFB  F004         	goto	u4111
  3491   0009F2  EFFD  F004         	goto	u4110
  3492   0009F6                     u4111:
  3493   0009F6  EFDC  F005         	goto	l968
  3494   0009FA                     u4110:
  3495   0009FA  EF0A  F005         	goto	l3667
  3496   0009FE                     l970:
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  3499   0009FE  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3500   000A02  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3501   000A06  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3502   000A0A  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3503   000A0E                     
  3504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  3505   000A0E  0100               	movlb	0	; () banked
  3506   000A10  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3507   000A12  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3508   000A14                     l3667:
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3511   000A14  C088  F00F         	movff	efgtoa@u,___flmul@b
  3512   000A18  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3513   000A1C  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3514   000A20  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3515   000A24  0E00               	movlw	0
  3516   000A26  6E13               	movwf	___flmul@a^0,c
  3517   000A28  0E00               	movlw	0
  3518   000A2A  6E14               	movwf	(___flmul@a+1)^0,c
  3519   000A2C  0E20               	movlw	32
  3520   000A2E  6E15               	movwf	(___flmul@a+2)^0,c
  3521   000A30  0E41               	movlw	65
  3522   000A32  6E16               	movwf	(___flmul@a+3)^0,c
  3523   000A34  EC6F  F00B         	call	___flmul	;wreg free
  3524   000A38  C00F  F073         	movff	?___flmul,efgtoa@ou
  3525   000A3C  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  3526   000A40  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  3527   000A44  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  3528   000A48  0100               	movlb	0	; () banked
  3529   000A4A  5173               	movf	efgtoa@ou& (0+255),w,b
  3530   000A4C  5D84               	subwf	efgtoa@g& (0+255),w,b
  3531   000A4E  6E01               	movwf	labs@a^0,c
  3532   000A50  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  3533   000A52  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3534   000A54  6E02               	movwf	(labs@a+1)^0,c
  3535   000A56  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  3536   000A58  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3537   000A5A  6E03               	movwf	(labs@a+2)^0,c
  3538   000A5C  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  3539   000A5E  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3540   000A60  6E04               	movwf	(labs@a+3)^0,c
  3541   000A62  EC25  F01A         	call	_labs	;wreg free
  3542   000A66  BE04               	btfsc	(?_labs+3)^0,7,c
  3543   000A68  EF41  F005         	goto	u4121
  3544   000A6C  5004               	movf	(?_labs+3)^0,w,c
  3545   000A6E  1003               	iorwf	(?_labs+2)^0,w,c
  3546   000A70  1002               	iorwf	(?_labs+1)^0,w,c
  3547   000A72  E109               	bnz	u4120
  3548   000A74  0E02               	movlw	2
  3549   000A76  5C01               	subwf	?_labs^0,w,c
  3550   000A78  A0D8               	btfss	status,0,c
  3551   000A7A  EF41  F005         	goto	u4121
  3552   000A7E  EF43  F005         	goto	u4120
  3553   000A82                     u4121:
  3554   000A82  EFFF  F004         	goto	l970
  3555   000A86                     u4120:
  3556   000A86  C073  F028         	movff	efgtoa@ou,___flge@ff1
  3557   000A8A  C074  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  3558   000A8E  C075  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  3559   000A92  C076  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  3560   000A96  C084  F02C         	movff	efgtoa@g,___flge@ff2
  3561   000A9A  C085  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  3562   000A9E  C086  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  3563   000AA2  C087  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  3564   000AA6  EC4A  F016         	call	___flge	;wreg free
  3565   000AAA  A0D8               	btfss	status,0,c
  3566   000AAC  EF5A  F005         	goto	u4131
  3567   000AB0  EF5C  F005         	goto	u4130
  3568   000AB4                     u4131:
  3569   000AB4  EFFF  F004         	goto	l970
  3570   000AB8                     u4130:
  3571   000AB8                     
  3572                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3573   000AB8  0100               	movlb	0	; () banked
  3574   000ABA  5188               	movf	efgtoa@u& (0+255),w,b
  3575   000ABC  5D84               	subwf	efgtoa@g& (0+255),w,b
  3576   000ABE  6E01               	movwf	labs@a^0,c
  3577   000AC0  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3578   000AC2  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3579   000AC4  6E02               	movwf	(labs@a+1)^0,c
  3580   000AC6  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3581   000AC8  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3582   000ACA  6E03               	movwf	(labs@a+2)^0,c
  3583   000ACC  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3584   000ACE  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3585   000AD0  6E04               	movwf	(labs@a+3)^0,c
  3586   000AD2  EC25  F01A         	call	_labs	;wreg free
  3587   000AD6  BE04               	btfsc	(?_labs+3)^0,7,c
  3588   000AD8  EF7B  F005         	goto	u4140
  3589   000ADC  5004               	movf	(?_labs+3)^0,w,c
  3590   000ADE  1003               	iorwf	(?_labs+2)^0,w,c
  3591   000AE0  1002               	iorwf	(?_labs+1)^0,w,c
  3592   000AE2  E107               	bnz	u4141
  3593   000AE4  0E02               	movlw	2
  3594   000AE6  5C01               	subwf	?_labs^0,w,c
  3595   000AE8  B0D8               	btfsc	status,0,c
  3596   000AEA  EF79  F005         	goto	u4141
  3597   000AEE  EF7B  F005         	goto	u4140
  3598   000AF2                     u4141:
  3599   000AF2  EFC3  F005         	goto	l3685
  3600   000AF6                     u4140:
  3601   000AF6                     l3675:
  3602                           
  3603                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  3604   000AF6  C088  F084         	movff	efgtoa@u,efgtoa@g
  3605   000AFA  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  3606   000AFE  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  3607   000B02  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  3610   000B06  EFDC  F005         	goto	l968
  3611   000B0A                     l3677:
  3612                           
  3613                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  3614   000B0A  C088  F028         	movff	efgtoa@u,___fldiv@b
  3615   000B0E  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3616   000B12  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3617   000B16  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3618   000B1A  0E00               	movlw	0
  3619   000B1C  6E2C               	movwf	___fldiv@a^0,c
  3620   000B1E  0E00               	movlw	0
  3621   000B20  6E2D               	movwf	(___fldiv@a+1)^0,c
  3622   000B22  0E20               	movlw	32
  3623   000B24  6E2E               	movwf	(___fldiv@a+2)^0,c
  3624   000B26  0E41               	movlw	65
  3625   000B28  6E2F               	movwf	(___fldiv@a+3)^0,c
  3626   000B2A  EC84  F00D         	call	___fldiv	;wreg free
  3627   000B2E  C028  F088         	movff	?___fldiv,efgtoa@u
  3628   000B32  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  3629   000B36  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3630   000B3A  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3631   000B3E                     
  3632                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  3633   000B3E  0100               	movlb	0	; () banked
  3634   000B40  076F               	decf	efgtoa@e& (0+255),f,b
  3635   000B42  A0D8               	btfss	status,0,c
  3636   000B44  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3637   000B46                     
  3638                           ; BSR set to: 0
  3639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3640   000B46  5188               	movf	efgtoa@u& (0+255),w,b
  3641   000B48  5D84               	subwf	efgtoa@g& (0+255),w,b
  3642   000B4A  6E01               	movwf	labs@a^0,c
  3643   000B4C  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3644   000B4E  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3645   000B50  6E02               	movwf	(labs@a+1)^0,c
  3646   000B52  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3647   000B54  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3648   000B56  6E03               	movwf	(labs@a+2)^0,c
  3649   000B58  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3650   000B5A  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3651   000B5C  6E04               	movwf	(labs@a+3)^0,c
  3652   000B5E  EC25  F01A         	call	_labs	;wreg free
  3653   000B62  BE04               	btfsc	(?_labs+3)^0,7,c
  3654   000B64  EFC1  F005         	goto	u4150
  3655   000B68  5004               	movf	(?_labs+3)^0,w,c
  3656   000B6A  1003               	iorwf	(?_labs+2)^0,w,c
  3657   000B6C  1002               	iorwf	(?_labs+1)^0,w,c
  3658   000B6E  E107               	bnz	u4151
  3659   000B70  0E02               	movlw	2
  3660   000B72  5C01               	subwf	?_labs^0,w,c
  3661   000B74  B0D8               	btfsc	status,0,c
  3662   000B76  EFBF  F005         	goto	u4151
  3663   000B7A  EFC1  F005         	goto	u4150
  3664   000B7E                     u4151:
  3665   000B7E  EFC3  F005         	goto	l3685
  3666   000B82                     u4150:
  3667   000B82  EF7B  F005         	goto	l3675
  3668   000B86                     l3685:
  3669                           
  3670                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  3671   000B86  C084  F028         	movff	efgtoa@g,___flge@ff1
  3672   000B8A  C085  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3673   000B8E  C086  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3674   000B92  C087  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3675   000B96  C088  F02C         	movff	efgtoa@u,___flge@ff2
  3676   000B9A  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3677   000B9E  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3678   000BA2  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3679   000BA6  EC4A  F016         	call	___flge	;wreg free
  3680   000BAA  A0D8               	btfss	status,0,c
  3681   000BAC  EFDA  F005         	goto	u4161
  3682   000BB0  EFDC  F005         	goto	u4160
  3683   000BB4                     u4161:
  3684   000BB4  EF85  F005         	goto	l3677
  3685   000BB8                     u4160:
  3686   000BB8                     l968:
  3687                           
  3688                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  3689   000BB8  C05B  F069         	movff	efgtoa@c,efgtoa@mode
  3690                           
  3691                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  3692   000BBC  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  3693   000BC0                     
  3694                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  3695   000BC0  0100               	movlb	0	; () banked
  3696   000BC2  BFE2               	btfsc	(_prec+1)& (0+255),7,b
  3697   000BC4  EFE6  F005         	goto	u4171
  3698   000BC8  EFE8  F005         	goto	u4170
  3699   000BCC                     u4171:
  3700   000BCC  EFEE  F005         	goto	l3691
  3701   000BD0                     u4170:
  3702   000BD0                     
  3703                           ; BSR set to: 0
  3704   000BD0  C0E1  F062         	movff	_prec,efgtoa@p
  3705   000BD4  C0E2  F063         	movff	_prec+1,efgtoa@p+1
  3706   000BD8  EFF2  F005         	goto	l3693
  3707   000BDC                     l3691:
  3708                           
  3709                           ; BSR set to: 0
  3710   000BDC  0E00               	movlw	0
  3711   000BDE  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3712   000BE0  0E06               	movlw	6
  3713   000BE2  6F62               	movwf	efgtoa@p& (0+255),b
  3714   000BE4                     l3693:
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  3718   000BE4  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3719   000BE8  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3720   000BEC                     
  3721                           ; BSR set to: 0
  3722                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  3723   000BEC  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3724   000BEE  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3725   000BF0                     
  3726                           ; BSR set to: 0
  3727                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  3728   000BF0  0E66               	movlw	102
  3729   000BF2  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3730   000BF4  A4D8               	btfss	status,2,c
  3731   000BF6  EFFF  F005         	goto	u4181
  3732   000BFA  EF01  F006         	goto	u4180
  3733   000BFE                     u4181:
  3734   000BFE  EF21  F006         	goto	l3707
  3735   000C02                     u4180:
  3736   000C02                     
  3737                           ; BSR set to: 0
  3738                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  3739   000C02  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3740   000C04  EF08  F006         	goto	u4190
  3741   000C08  EF06  F006         	goto	u4191
  3742   000C0C                     u4191:
  3743   000C0C  EF14  F006         	goto	l3703
  3744   000C10                     u4190:
  3745   000C10                     
  3746                           ; BSR set to: 0
  3747                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  3748   000C10  0E00               	movlw	0
  3749   000C12  6F88               	movwf	efgtoa@u& (0+255),b
  3750   000C14  0E00               	movlw	0
  3751   000C16  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3752   000C18  0E80               	movlw	128
  3753   000C1A  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3754   000C1C  0E3F               	movlw	63
  3755   000C1E  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  3758   000C20  0E00               	movlw	0
  3759   000C22  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3760   000C24  0E00               	movlw	0
  3761   000C26  6F6F               	movwf	efgtoa@e& (0+255),b
  3762   000C28                     l3703:
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  3766   000C28  0E67               	movlw	103
  3767   000C2A  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3768   000C2C  B4D8               	btfsc	status,2,c
  3769   000C2E  EF1B  F006         	goto	u4201
  3770   000C32  EF1D  F006         	goto	u4200
  3771   000C36                     u4201:
  3772   000C36  EF21  F006         	goto	l3707
  3773   000C3A                     u4200:
  3774   000C3A                     
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  3777   000C3A  516F               	movf	efgtoa@e& (0+255),w,b
  3778   000C3C  276D               	addwf	efgtoa@m& (0+255),f,b
  3779   000C3E  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3780   000C40  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3781   000C42                     l3707:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  3785   000C42  0E00               	movlw	0
  3786   000C44  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3787   000C46  0E00               	movlw	0
  3788   000C48  6F77               	movwf	efgtoa@i& (0+255),b
  3789   000C4A                     
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  3792   000C4A  C084  F079         	movff	efgtoa@g,efgtoa@h
  3793   000C4E  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  3794   000C52  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  3795   000C56  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  3796   000C5A                     
  3797                           ; BSR set to: 0
  3798                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  3799   000C5A  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3800   000C5E  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3801   000C62  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3802   000C66  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  3805   000C6A  EFB2  F006         	goto	l3721
  3806   000C6E                     l3713:
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  3810   000C6E  C079  F028         	movff	efgtoa@h,___fldiv@b
  3811   000C72  C07A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3812   000C76  C07B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3813   000C7A  C07C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3814   000C7E  C088  F02C         	movff	efgtoa@u,___fldiv@a
  3815   000C82  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3816   000C86  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3817   000C8A  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3818   000C8E  EC84  F00D         	call	___fldiv	;wreg free
  3819   000C92  C028  F041         	movff	?___fldiv,floorf@x
  3820   000C96  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3821   000C9A  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3822   000C9E  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3823   000CA2  ECEF  F011         	call	_floorf	;wreg free
  3824   000CA6  C041  F07D         	movff	?_floorf,efgtoa@l
  3825   000CAA  C042  F07E         	movff	?_floorf+1,efgtoa@l+1
  3826   000CAE  C043  F07F         	movff	?_floorf+2,efgtoa@l+2
  3827   000CB2  C044  F080         	movff	?_floorf+3,efgtoa@l+3
  3828                           
  3829                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  3830   000CB6  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3831   000CBA  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3832   000CBE  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3833   000CC2  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3834   000CC6  ECC7  F015         	call	___fltol	;wreg free
  3835   000CCA  C001  F06B         	movff	?___fltol,efgtoa@d
  3836   000CCE  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3837   000CD2                     
  3838                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  3839   000CD2  C079  F028         	movff	efgtoa@h,___flsub@b
  3840   000CD6  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  3841   000CDA  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3842   000CDE  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3843   000CE2  C07D  F013         	movff	efgtoa@l,___flmul@a
  3844   000CE6  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  3845   000CEA  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  3846   000CEE  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  3847   000CF2  C088  F00F         	movff	efgtoa@u,___flmul@b
  3848   000CF6  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3849   000CFA  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3850   000CFE  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3851   000D02  EC6F  F00B         	call	___flmul	;wreg free
  3852   000D06  C00F  F02C         	movff	?___flmul,___flsub@a
  3853   000D0A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3854   000D0E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3855   000D12  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3856   000D16  ECEB  F01B         	call	___flsub	;wreg free
  3857   000D1A  C028  F079         	movff	?___flsub,efgtoa@h
  3858   000D1E  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  3859   000D22  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  3860   000D26  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  3861   000D2A                     
  3862                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  3863   000D2A  C088  F028         	movff	efgtoa@u,___fldiv@b
  3864   000D2E  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3865   000D32  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3866   000D36  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3867   000D3A  0E00               	movlw	0
  3868   000D3C  6E2C               	movwf	___fldiv@a^0,c
  3869   000D3E  0E00               	movlw	0
  3870   000D40  6E2D               	movwf	(___fldiv@a+1)^0,c
  3871   000D42  0E20               	movlw	32
  3872   000D44  6E2E               	movwf	(___fldiv@a+2)^0,c
  3873   000D46  0E41               	movlw	65
  3874   000D48  6E2F               	movwf	(___fldiv@a+3)^0,c
  3875   000D4A  EC84  F00D         	call	___fldiv	;wreg free
  3876   000D4E  C028  F088         	movff	?___fldiv,efgtoa@u
  3877   000D52  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  3878   000D56  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3879   000D5A  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3880   000D5E                     
  3881                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  3882   000D5E  0100               	movlb	0	; () banked
  3883   000D60  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3884   000D62  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3885   000D64                     l3721:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  3889   000D64  516D               	movf	efgtoa@m& (0+255),w,b
  3890   000D66  5D77               	subwf	efgtoa@i& (0+255),w,b
  3891   000D68  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3892   000D6A  0A80               	xorlw	128
  3893   000D6C  6E5C               	movwf	??_efgtoa^0,c
  3894   000D6E  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3895   000D70  0A80               	xorlw	128
  3896   000D72  585C               	subwfb	??_efgtoa^0,w,c
  3897   000D74  A0D8               	btfss	status,0,c
  3898   000D76  EFBF  F006         	goto	u4211
  3899   000D7A  EFC1  F006         	goto	u4210
  3900   000D7E                     u4211:
  3901   000D7E  EF37  F006         	goto	l3713
  3902   000D82                     u4210:
  3903   000D82                     
  3904                           ; BSR set to: 0
  3905                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  3906   000D82  C088  F00F         	movff	efgtoa@u,___flmul@b
  3907   000D86  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3908   000D8A  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3909   000D8E  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3910   000D92  0E00               	movlw	0
  3911   000D94  6E13               	movwf	___flmul@a^0,c
  3912   000D96  0E00               	movlw	0
  3913   000D98  6E14               	movwf	(___flmul@a+1)^0,c
  3914   000D9A  0EA0               	movlw	160
  3915   000D9C  6E15               	movwf	(___flmul@a+2)^0,c
  3916   000D9E  0E40               	movlw	64
  3917   000DA0  6E16               	movwf	(___flmul@a+3)^0,c
  3918   000DA2  EC6F  F00B         	call	___flmul	;wreg free
  3919   000DA6  C00F  F07D         	movff	?___flmul,efgtoa@l
  3920   000DAA  C010  F07E         	movff	?___flmul+1,efgtoa@l+1
  3921   000DAE  C011  F07F         	movff	?___flmul+2,efgtoa@l+2
  3922   000DB2  C012  F080         	movff	?___flmul+3,efgtoa@l+3
  3923   000DB6                     
  3924                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  3925   000DB6  C079  F028         	movff	efgtoa@h,___flge@ff1
  3926   000DBA  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3927   000DBE  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3928   000DC2  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3929   000DC6  C07D  F02C         	movff	efgtoa@l,___flge@ff2
  3930   000DCA  C07E  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3931   000DCE  C07F  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3932   000DD2  C080  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3933   000DD6  EC4A  F016         	call	___flge	;wreg free
  3934   000DDA  B0D8               	btfsc	status,0,c
  3935   000DDC  EFF2  F006         	goto	u4221
  3936   000DE0  EFF4  F006         	goto	u4220
  3937   000DE4                     u4221:
  3938   000DE4  EFFF  F006         	goto	l3729
  3939   000DE8                     u4220:
  3940   000DE8                     
  3941                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  3942   000DE8  0E00               	movlw	0
  3943   000DEA  0100               	movlb	0	; () banked
  3944   000DEC  6F7D               	movwf	efgtoa@l& (0+255),b
  3945   000DEE  0E00               	movlw	0
  3946   000DF0  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3947   000DF2  0E00               	movlw	0
  3948   000DF4  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3949   000DF6  0E00               	movlw	0
  3950   000DF8  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3951                           
  3952                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  3953   000DFA  EF28  F007         	goto	l3735
  3954   000DFE                     l3729:
  3955                           
  3956                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  3957   000DFE  C079  F001         	movff	efgtoa@h,___fleq@ff1
  3958   000E02  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3959   000E06  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3960   000E0A  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3961   000E0E  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  3962   000E12  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3963   000E16  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3964   000E1A  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3965   000E1E  ECCD  F018         	call	___fleq	;wreg free
  3966   000E22  A0D8               	btfss	status,0,c
  3967   000E24  EF16  F007         	goto	u4231
  3968   000E28  EF18  F007         	goto	u4230
  3969   000E2C                     u4231:
  3970   000E2C  EF28  F007         	goto	l3735
  3971   000E30                     u4230:
  3972   000E30  0100               	movlb	0	; () banked
  3973   000E32  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3974   000E34  EF1E  F007         	goto	u4241
  3975   000E38  EF20  F007         	goto	u4240
  3976   000E3C                     u4241:
  3977   000E3C  EF28  F007         	goto	l3735
  3978   000E40                     u4240:
  3979   000E40                     
  3980                           ; BSR set to: 0
  3981                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  3982   000E40  0E00               	movlw	0
  3983   000E42  6F7D               	movwf	efgtoa@l& (0+255),b
  3984   000E44  0E00               	movlw	0
  3985   000E46  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3986   000E48  0E00               	movlw	0
  3987   000E4A  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3988   000E4C  0E00               	movlw	0
  3989   000E4E  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3990   000E50                     l3735:
  3991                           
  3992                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  3993   000E50  C084  F001         	movff	efgtoa@g,___fladd@b
  3994   000E54  C085  F002         	movff	efgtoa@g+1,___fladd@b+1
  3995   000E58  C086  F003         	movff	efgtoa@g+2,___fladd@b+2
  3996   000E5C  C087  F004         	movff	efgtoa@g+3,___fladd@b+3
  3997   000E60  C07D  F005         	movff	efgtoa@l,___fladd@a
  3998   000E64  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  3999   000E68  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  4000   000E6C  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  4001   000E70  EC0F  F009         	call	___fladd	;wreg free
  4002   000E74  C001  F079         	movff	?___fladd,efgtoa@h
  4003   000E78  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  4004   000E7C  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  4005   000E80  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  4006   000E84                     
  4007                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  4008   000E84  C079  F028         	movff	efgtoa@h,___flge@ff1
  4009   000E88  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4010   000E8C  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4011   000E90  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4012   000E94  0E00               	movlw	0
  4013   000E96  6E13               	movwf	___flmul@a^0,c
  4014   000E98  0E00               	movlw	0
  4015   000E9A  6E14               	movwf	(___flmul@a+1)^0,c
  4016   000E9C  0E20               	movlw	32
  4017   000E9E  6E15               	movwf	(___flmul@a+2)^0,c
  4018   000EA0  0E41               	movlw	65
  4019   000EA2  6E16               	movwf	(___flmul@a+3)^0,c
  4020   000EA4  C073  F00F         	movff	efgtoa@ou,___flmul@b
  4021   000EA8  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4022   000EAC  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4023   000EB0  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4024   000EB4  EC6F  F00B         	call	___flmul	;wreg free
  4025   000EB8  C00F  F02C         	movff	?___flmul,___flge@ff2
  4026   000EBC  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  4027   000EC0  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  4028   000EC4  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  4029   000EC8  EC4A  F016         	call	___flge	;wreg free
  4030   000ECC  A0D8               	btfss	status,0,c
  4031   000ECE  EF6B  F007         	goto	u4251
  4032   000ED2  EF6D  F007         	goto	u4250
  4033   000ED6                     u4251:
  4034   000ED6  EF96  F007         	goto	l3747
  4035   000EDA                     u4250:
  4036   000EDA                     
  4037                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  4038   000EDA  0100               	movlb	0	; () banked
  4039   000EDC  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  4040   000EDE  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  4041   000EE0                     
  4042                           ; BSR set to: 0
  4043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  4044   000EE0  C073  F00F         	movff	efgtoa@ou,___flmul@b
  4045   000EE4  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4046   000EE8  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4047   000EEC  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4048   000EF0  0E00               	movlw	0
  4049   000EF2  6E13               	movwf	___flmul@a^0,c
  4050   000EF4  0E00               	movlw	0
  4051   000EF6  6E14               	movwf	(___flmul@a+1)^0,c
  4052   000EF8  0E20               	movlw	32
  4053   000EFA  6E15               	movwf	(___flmul@a+2)^0,c
  4054   000EFC  0E41               	movlw	65
  4055   000EFE  6E16               	movwf	(___flmul@a+3)^0,c
  4056   000F00  EC6F  F00B         	call	___flmul	;wreg free
  4057   000F04  C00F  F073         	movff	?___flmul,efgtoa@ou
  4058   000F08  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  4059   000F0C  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  4060   000F10  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  4061   000F14                     
  4062                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  4063   000F14  0E66               	movlw	102
  4064   000F16  0100               	movlb	0	; () banked
  4065   000F18  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  4066   000F1A  A4D8               	btfss	status,2,c
  4067   000F1C  EF92  F007         	goto	u4261
  4068   000F20  EF94  F007         	goto	u4260
  4069   000F24                     u4261:
  4070   000F24  EF96  F007         	goto	l3747
  4071   000F28                     u4260:
  4072   000F28                     
  4073                           ; BSR set to: 0
  4074                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  4075   000F28  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  4076   000F2A  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  4077   000F2C                     l3747:
  4078                           
  4079                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  4080   000F2C  C073  F088         	movff	efgtoa@ou,efgtoa@u
  4081   000F30  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  4082   000F34  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  4083   000F38  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  4084   000F3C                     
  4085                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  4086   000F3C  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  4087   000F40  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  4088   000F44                     
  4089                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  4090   000F44  0E00               	movlw	0
  4091   000F46  0100               	movlb	0	; () banked
  4092   000F48  6F68               	movwf	efgtoa@pp& (0+255),b
  4093   000F4A                     
  4094                           ; BSR set to: 0
  4095                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  4096   000F4A  0E00               	movlw	0
  4097   000F4C  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  4098   000F4E  0E00               	movlw	0
  4099   000F50  6F64               	movwf	efgtoa@t& (0+255),b
  4100   000F52                     
  4101                           ; BSR set to: 0
  4102                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  4103   000F52  0E00               	movlw	0
  4104   000F54  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  4105   000F56  0E00               	movlw	0
  4106   000F58  6F77               	movwf	efgtoa@i& (0+255),b
  4107                           
  4108                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4109   000F5A  EF94  F008         	goto	l3797
  4110   000F5E                     l3757:
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  4114   000F5E  C079  F028         	movff	efgtoa@h,___fldiv@b
  4115   000F62  C07A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4116   000F66  C07B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4117   000F6A  C07C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4118   000F6E  C088  F02C         	movff	efgtoa@u,___fldiv@a
  4119   000F72  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4120   000F76  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4121   000F7A  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4122   000F7E  EC84  F00D         	call	___fldiv	;wreg free
  4123   000F82  C028  F041         	movff	?___fldiv,floorf@x
  4124   000F86  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4125   000F8A  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4126   000F8E  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4127   000F92  ECEF  F011         	call	_floorf	;wreg free
  4128   000F96  C041  F07D         	movff	?_floorf,efgtoa@l
  4129   000F9A  C042  F07E         	movff	?_floorf+1,efgtoa@l+1
  4130   000F9E  C043  F07F         	movff	?_floorf+2,efgtoa@l+2
  4131   000FA2  C044  F080         	movff	?_floorf+3,efgtoa@l+3
  4132                           
  4133                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4134   000FA6  C07D  F001         	movff	efgtoa@l,___fltol@f1
  4135   000FAA  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4136   000FAE  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4137   000FB2  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4138   000FB6  ECC7  F015         	call	___fltol	;wreg free
  4139   000FBA  BE02               	btfsc	(?___fltol+1)^0,7,c
  4140   000FBC  EFEB  F007         	goto	u4270
  4141   000FC0  5002               	movf	(?___fltol+1)^0,w,c
  4142   000FC2  E107               	bnz	u4271
  4143   000FC4  0E0A               	movlw	10
  4144   000FC6  5C01               	subwf	?___fltol^0,w,c
  4145   000FC8  B0D8               	btfsc	status,0,c
  4146   000FCA  EFE9  F007         	goto	u4271
  4147   000FCE  EFEB  F007         	goto	u4270
  4148   000FD2                     u4271:
  4149   000FD2  EFFB  F007         	goto	l3761
  4150   000FD6                     u4270:
  4151   000FD6  C07D  F001         	movff	efgtoa@l,___fltol@f1
  4152   000FDA  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4153   000FDE  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4154   000FE2  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4155   000FE6  ECC7  F015         	call	___fltol	;wreg free
  4156   000FEA  C001  F06B         	movff	?___fltol,efgtoa@d
  4157   000FEE  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  4158   000FF2  EF00  F008         	goto	l998
  4159   000FF6                     l3761:
  4160   000FF6  0E00               	movlw	0
  4161   000FF8  0100               	movlb	0	; () banked
  4162   000FFA  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  4163   000FFC  0E09               	movlw	9
  4164   000FFE  6F6B               	movwf	efgtoa@d& (0+255),b
  4165   001000                     l998:
  4166                           
  4167                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  4168   001000  0100               	movlb	0	; () banked
  4169   001002  5168               	movf	efgtoa@pp& (0+255),w,b
  4170   001004  A4D8               	btfss	status,2,c
  4171   001006  EF07  F008         	goto	u4281
  4172   00100A  EF09  F008         	goto	u4280
  4173   00100E                     u4281:
  4174   00100E  EF31  F008         	goto	l3781
  4175   001012                     u4280:
  4176   001012                     
  4177                           ; BSR set to: 0
  4178   001012  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4179   001014  EF10  F008         	goto	u4290
  4180   001018  EF0E  F008         	goto	u4291
  4181   00101C                     u4291:
  4182   00101C  EF31  F008         	goto	l3781
  4183   001020                     u4290:
  4184   001020                     
  4185                           ; BSR set to: 0
  4186                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  4187   001020  0EA4               	movlw	low _dbuf
  4188   001022  2582               	addwf	efgtoa@n& (0+255),w,b
  4189   001024  6ED9               	movwf	fsr2l,c
  4190   001026  0E01               	movlw	high _dbuf
  4191   001028  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4192   00102A  6EDA               	movwf	fsr2h,c
  4193   00102C  0E2E               	movlw	46
  4194   00102E  6EDF               	movwf	indf2,c
  4195   001030                     
  4196                           ; BSR set to: 0
  4197   001030  4B82               	infsnz	efgtoa@n& (0+255),f,b
  4198   001032  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  4199   001034                     
  4200                           ; BSR set to: 0
  4201                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  4202   001034  0771               	decf	efgtoa@w& (0+255),f,b
  4203   001036  A0D8               	btfss	status,0,c
  4204   001038  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4205   00103A                     
  4206                           ; BSR set to: 0
  4207                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  4208   00103A  0E01               	movlw	1
  4209   00103C  6F68               	movwf	efgtoa@pp& (0+255),b
  4210   00103E  EF31  F008         	goto	l3781
  4211   001042                     l3773:
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  4215   001042  0EA4               	movlw	low _dbuf
  4216   001044  2582               	addwf	efgtoa@n& (0+255),w,b
  4217   001046  6ED9               	movwf	fsr2l,c
  4218   001048  0E01               	movlw	high _dbuf
  4219   00104A  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4220   00104C  6EDA               	movwf	fsr2h,c
  4221   00104E  0E30               	movlw	48
  4222   001050  6EDF               	movwf	indf2,c
  4223   001052                     
  4224                           ; BSR set to: 0
  4225   001052  4B82               	infsnz	efgtoa@n& (0+255),f,b
  4226   001054  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  4227   001056                     
  4228                           ; BSR set to: 0
  4229                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  4230   001056  0771               	decf	efgtoa@w& (0+255),f,b
  4231   001058  A0D8               	btfss	status,0,c
  4232   00105A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4233   00105C                     
  4234                           ; BSR set to: 0
  4235                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  4236   00105C  0764               	decf	efgtoa@t& (0+255),f,b
  4237   00105E  A0D8               	btfss	status,0,c
  4238   001060  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  4239   001062                     l3781:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  4243   001062  5164               	movf	efgtoa@t& (0+255),w,b
  4244   001064  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4245   001066  A4D8               	btfss	status,2,c
  4246   001068  EF38  F008         	goto	u4301
  4247   00106C  EF3A  F008         	goto	u4300
  4248   001070                     u4301:
  4249   001070  EF21  F008         	goto	l3773
  4250   001074                     u4300:
  4251   001074                     
  4252                           ; BSR set to: 0
  4253                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4254   001074  0EA4               	movlw	low _dbuf
  4255   001076  2582               	addwf	efgtoa@n& (0+255),w,b
  4256   001078  6ED9               	movwf	fsr2l,c
  4257   00107A  0E01               	movlw	high _dbuf
  4258   00107C  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4259   00107E  6EDA               	movwf	fsr2h,c
  4260   001080  516B               	movf	efgtoa@d& (0+255),w,b
  4261   001082  0F30               	addlw	48
  4262   001084  6EDF               	movwf	indf2,c
  4263   001086                     
  4264                           ; BSR set to: 0
  4265   001086  4B82               	infsnz	efgtoa@n& (0+255),f,b
  4266   001088  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  4267   00108A                     
  4268                           ; BSR set to: 0
  4269                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  4270   00108A  0771               	decf	efgtoa@w& (0+255),f,b
  4271   00108C  A0D8               	btfss	status,0,c
  4272   00108E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4273   001090                     
  4274                           ; BSR set to: 0
  4275                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  4276   001090  C079  F028         	movff	efgtoa@h,___flsub@b
  4277   001094  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  4278   001098  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4279   00109C  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4280   0010A0  C07D  F013         	movff	efgtoa@l,___flmul@a
  4281   0010A4  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  4282   0010A8  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  4283   0010AC  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  4284   0010B0  C088  F00F         	movff	efgtoa@u,___flmul@b
  4285   0010B4  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  4286   0010B8  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  4287   0010BC  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  4288   0010C0  EC6F  F00B         	call	___flmul	;wreg free
  4289   0010C4  C00F  F02C         	movff	?___flmul,___flsub@a
  4290   0010C8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4291   0010CC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4292   0010D0  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4293   0010D4  ECEB  F01B         	call	___flsub	;wreg free
  4294   0010D8  C028  F079         	movff	?___flsub,efgtoa@h
  4295   0010DC  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  4296   0010E0  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  4297   0010E4  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  4298   0010E8                     
  4299                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  4300   0010E8  C088  F028         	movff	efgtoa@u,___fldiv@b
  4301   0010EC  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4302   0010F0  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4303   0010F4  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4304   0010F8  0E00               	movlw	0
  4305   0010FA  6E2C               	movwf	___fldiv@a^0,c
  4306   0010FC  0E00               	movlw	0
  4307   0010FE  6E2D               	movwf	(___fldiv@a+1)^0,c
  4308   001100  0E20               	movlw	32
  4309   001102  6E2E               	movwf	(___fldiv@a+2)^0,c
  4310   001104  0E41               	movlw	65
  4311   001106  6E2F               	movwf	(___fldiv@a+3)^0,c
  4312   001108  EC84  F00D         	call	___fldiv	;wreg free
  4313   00110C  C028  F088         	movff	?___fldiv,efgtoa@u
  4314   001110  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  4315   001114  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  4316   001118  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  4317   00111C                     
  4318                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  4319   00111C  0100               	movlb	0	; () banked
  4320   00111E  0760               	decf	efgtoa@ne& (0+255),f,b
  4321   001120  A0D8               	btfss	status,0,c
  4322   001122  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  4323   001124                     
  4324                           ; BSR set to: 0
  4325                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  4326   001124  4B77               	infsnz	efgtoa@i& (0+255),f,b
  4327   001126  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  4328   001128                     l3797:
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4332   001128  516D               	movf	efgtoa@m& (0+255),w,b
  4333   00112A  5D77               	subwf	efgtoa@i& (0+255),w,b
  4334   00112C  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4335   00112E  0A80               	xorlw	128
  4336   001130  6E5C               	movwf	??_efgtoa^0,c
  4337   001132  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4338   001134  0A80               	xorlw	128
  4339   001136  585C               	subwfb	??_efgtoa^0,w,c
  4340   001138  B0D8               	btfsc	status,0,c
  4341   00113A  EFA1  F008         	goto	u4311
  4342   00113E  EFA3  F008         	goto	u4310
  4343   001142                     u4311:
  4344   001142  EFB1  F008         	goto	l3801
  4345   001146                     u4310:
  4346   001146                     
  4347                           ; BSR set to: 0
  4348   001146  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4349   001148  EFAF  F008         	goto	u4321
  4350   00114C  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  4351   00114E  E109               	bnz	u4320
  4352   001150  0E4B               	movlw	75
  4353   001152  5D82               	subwf	efgtoa@n& (0+255),w,b
  4354   001154  A0D8               	btfss	status,0,c
  4355   001156  EFAF  F008         	goto	u4321
  4356   00115A  EFB1  F008         	goto	u4320
  4357   00115E                     u4321:
  4358   00115E  EFAF  F007         	goto	l3757
  4359   001162                     u4320:
  4360   001162                     l3801:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  4364   001162  0E00               	movlw	0
  4365   001164  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  4366   001166  0E4F               	movlw	79
  4367   001168  6F77               	movwf	efgtoa@i& (0+255),b
  4368   00116A                     
  4369                           ; BSR set to: 0
  4370                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  4371   00116A  0EA4               	movlw	low _dbuf
  4372   00116C  2577               	addwf	efgtoa@i& (0+255),w,b
  4373   00116E  6ED9               	movwf	fsr2l,c
  4374   001170  0E01               	movlw	high _dbuf
  4375   001172  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4376   001174  6EDA               	movwf	fsr2h,c
  4377   001176  6ADF               	clrf	indf2,c
  4378   001178                     
  4379                           ; BSR set to: 0
  4380                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4381   001178  0EA4               	movlw	low _dbuf
  4382   00117A  6E5C               	movwf	??_efgtoa^0,c
  4383   00117C  0E01               	movlw	high _dbuf
  4384   00117E  6E5D               	movwf	(??_efgtoa+1)^0,c
  4385   001180  5182               	movf	efgtoa@n& (0+255),w,b
  4386   001182  5E5C               	subwf	??_efgtoa^0,f,c
  4387   001184  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  4388   001186  5A5D               	subwfb	(??_efgtoa+1)^0,f,c
  4389   001188  5177               	movf	efgtoa@i& (0+255),w,b
  4390   00118A  245C               	addwf	??_efgtoa^0,w,c
  4391   00118C  6E01               	movwf	memcpy@d1^0,c
  4392   00118E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4393   001190  205D               	addwfc	(??_efgtoa+1)^0,w,c
  4394   001192  6E02               	movwf	(memcpy@d1+1)^0,c
  4395   001194  0EA4               	movlw	low _dbuf
  4396   001196  6E03               	movwf	memcpy@s1^0,c
  4397   001198  0E01               	movlw	high _dbuf
  4398   00119A  6E04               	movwf	(memcpy@s1+1)^0,c
  4399   00119C  C082  F005         	movff	efgtoa@n,memcpy@n
  4400   0011A0  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  4401   0011A4  ECC3  F01B         	call	_memcpy	;wreg free
  4402   0011A8                     
  4403                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  4404   0011A8  0100               	movlb	0	; () banked
  4405   0011AA  5182               	movf	efgtoa@n& (0+255),w,b
  4406   0011AC  5D77               	subwf	efgtoa@i& (0+255),w,b
  4407   0011AE  6F82               	movwf	efgtoa@n& (0+255),b
  4408   0011B0  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  4409   0011B2  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4410   0011B4  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  4411   0011B6                     
  4412                           ; BSR set to: 0
  4413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  4414   0011B6  5181               	movf	efgtoa@sign& (0+255),w,b
  4415   0011B8  A4D8               	btfss	status,2,c
  4416   0011BA  EFE1  F008         	goto	u4331
  4417   0011BE  EFE4  F008         	goto	u4330
  4418   0011C2                     u4331:
  4419   0011C2  0E01               	movlw	1
  4420   0011C4  EFE5  F008         	goto	u4340
  4421   0011C8                     u4330:
  4422   0011C8  0E00               	movlw	0
  4423   0011CA                     u4340:
  4424   0011CA  6F77               	movwf	efgtoa@i& (0+255),b
  4425   0011CC  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  4426   0011CE                     
  4427                           ; BSR set to: 0
  4428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  4429   0011CE  5181               	movf	efgtoa@sign& (0+255),w,b
  4430   0011D0  B4D8               	btfsc	status,2,c
  4431   0011D2  EFED  F008         	goto	u4351
  4432   0011D6  EFEF  F008         	goto	u4350
  4433   0011DA                     u4351:
  4434   0011DA  EFFA  F008         	goto	l3815
  4435   0011DE                     u4350:
  4436   0011DE                     
  4437                           ; BSR set to: 0
  4438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  4439   0011DE  0782               	decf	efgtoa@n& (0+255),f,b
  4440   0011E0  A0D8               	btfss	status,0,c
  4441   0011E2  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  4442   0011E4  0EA4               	movlw	low _dbuf
  4443   0011E6  2582               	addwf	efgtoa@n& (0+255),w,b
  4444   0011E8  6ED9               	movwf	fsr2l,c
  4445   0011EA  0E01               	movlw	high _dbuf
  4446   0011EC  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4447   0011EE  6EDA               	movwf	fsr2h,c
  4448   0011F0  C081  FFDF         	movff	efgtoa@sign,indf2
  4449   0011F4                     l3815:
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  4453   0011F4  5177               	movf	efgtoa@i& (0+255),w,b
  4454   0011F6  5F71               	subwf	efgtoa@w& (0+255),f,b
  4455   0011F8  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4456   0011FA  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4457   0011FC                     
  4458                           ; BSR set to: 0
  4459                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4460   0011FC  C055  F013         	movff	efgtoa@fp,pad@fp
  4461   001200  C056  F014         	movff	efgtoa@fp+1,pad@fp+1
  4462   001204  0EA4               	movlw	low _dbuf
  4463   001206  2582               	addwf	efgtoa@n& (0+255),w,b
  4464   001208  6E15               	movwf	pad@buf^0,c
  4465   00120A  0E01               	movlw	high _dbuf
  4466   00120C  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4467   00120E  6E16               	movwf	(pad@buf+1)^0,c
  4468   001210  C071  F017         	movff	efgtoa@w,pad@p
  4469   001214  C072  F018         	movff	efgtoa@w+1,pad@p+1
  4470   001218  ECE8  F019         	call	_pad	;wreg free
  4471   00121C                     l965:
  4472   00121C  0012               	return		;funcret
  4473   00121E                     __end_of_efgtoa:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function _strcpy *****************
  4477 ;; Defined at:
  4478 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4481 ;;		 -> dbuf(80), IMPRIMIR@imprimir3(30), 
  4482 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4483 ;;		 -> STR_9(4), STR_6(4), IMPRIMIR@imprimir2(30), IMPRIMIR@imprimir(10), 
  4484 ;;		 -> IMPRIMIR@imprimir6(30), IMPRIMIR@imprimir5(30), IMPRIMIR@imprimir4(30), 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  d               2   12[COMRAM] PTR unsigned char 
  4487 ;;		 -> dbuf(80), IMPRIMIR@imprimir3(30), 
  4488 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4489 ;;		 -> STR_9(4), STR_6(4), IMPRIMIR@imprimir2(30), IMPRIMIR@imprimir(10), 
  4490 ;;		 -> IMPRIMIR@imprimir6(30), IMPRIMIR@imprimir5(30), IMPRIMIR@imprimir4(30), 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  2    4[COMRAM] PTR unsigned char 
  4493 ;; Registers used:
  4494 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4500 ;;      Params:         4       0       0       0       0       0       0       0       0
  4501 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4502 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4503 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4504 ;;Total ram usage:       10 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_efgtoa
  4510 ;;		_strcat
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text17
  4515   00362E                     __ptext17:
  4516                           	callstack 0
  4517   00362E                     _strcpy:
  4518                           	callstack 28
  4519   00362E  C007  F00B         	movff	strcpy@src,strcpy@s
  4520   003632  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4521   003636  C005  F00D         	movff	strcpy@dest,strcpy@d
  4522   00363A  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4523   00363E                     l3503:
  4524   00363E  500B               	movf	strcpy@s^0,w,c
  4525   003640  6E09               	movwf	??_strcpy^0,c
  4526   003642  500C               	movf	(strcpy@s+1)^0,w,c
  4527   003644  6E0A               	movwf	(??_strcpy+1)^0,c
  4528   003646  4A0B               	infsnz	strcpy@s^0,f,c
  4529   003648  2A0C               	incf	(strcpy@s+1)^0,f,c
  4530   00364A  C009  FFF6         	movff	??_strcpy,tblptrl
  4531   00364E  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4532   003652  6AF8               	clrf	tblptru,c
  4533   003654  C00D  FFD9         	movff	strcpy@d,fsr2l
  4534   003658  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4535   00365C  4A0D               	infsnz	strcpy@d^0,f,c
  4536   00365E  2A0E               	incf	(strcpy@d+1)^0,f,c
  4537   003660  0E07               	movlw	(high __ramtop+-1)
  4538   003662  64F7               	cpfsgt	tblptrh,c
  4539   003664  D003               	bra	u3807
  4540   003666  0008               	tblrd		*
  4541   003668  50F5               	movf	tablat,w,c
  4542   00366A  D005               	bra	u3800
  4543   00366C                     u3807:
  4544   00366C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4545   003670  CFF7 FFEA          	movff	tblptrh,fsr0h
  4546   003674  50EF               	movf	indf0,w,c
  4547   003676                     u3800:
  4548   003676  6EDF               	movwf	indf2,c
  4549   003678  50DF               	movf	indf2,w,c
  4550   00367A  A4D8               	btfss	status,2,c
  4551   00367C  EF42  F01B         	goto	u3811
  4552   003680  EF44  F01B         	goto	u3810
  4553   003684                     u3811:
  4554   003684  EF1F  F01B         	goto	l3503
  4555   003688                     u3810:
  4556   003688  0012               	return		;funcret
  4557   00368A                     __end_of_strcpy:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function _memcpy *****************
  4561 ;; Defined at:
  4562 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  d1              2    0[COMRAM] PTR void 
  4565 ;;		 -> dbuf(80), 
  4566 ;;  s1              2    2[COMRAM] PTR const void 
  4567 ;;		 -> dbuf(80), 
  4568 ;;  n               2    4[COMRAM] unsigned int 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4571 ;;		 -> dbuf(80), 
  4572 ;;  d               2    6[COMRAM] PTR unsigned char 
  4573 ;;		 -> dbuf(80), 
  4574 ;;  tmp             1   10[COMRAM] unsigned char 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  2    0[COMRAM] PTR void 
  4577 ;; Registers used:
  4578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4584 ;;      Params:         6       0       0       0       0       0       0       0       0
  4585 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4587 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4588 ;;Total ram usage:       11 bytes
  4589 ;; Hardware stack levels used: 1
  4590 ;; This function calls:
  4591 ;;		Nothing
  4592 ;; This function is called by:
  4593 ;;		_efgtoa
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text18
  4598   003786                     __ptext18:
  4599                           	callstack 0
  4600   003786                     _memcpy:
  4601                           	callstack 25
  4602   003786  C003  F009         	movff	memcpy@s1,memcpy@s
  4603   00378A  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4604   00378E  C001  F007         	movff	memcpy@d1,memcpy@d
  4605   003792  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4606   003796  EFDD  F01B         	goto	l3547
  4607   00379A                     l3539:
  4608   00379A  C009  FFD9         	movff	memcpy@s,fsr2l
  4609   00379E  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4610   0037A2  50DF               	movf	indf2,w,c
  4611   0037A4  6E0B               	movwf	memcpy@tmp^0,c
  4612   0037A6  4A09               	infsnz	memcpy@s^0,f,c
  4613   0037A8  2A0A               	incf	(memcpy@s+1)^0,f,c
  4614   0037AA  C007  FFD9         	movff	memcpy@d,fsr2l
  4615   0037AE  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4616   0037B2  C00B  FFDF         	movff	memcpy@tmp,indf2
  4617   0037B6  4A07               	infsnz	memcpy@d^0,f,c
  4618   0037B8  2A08               	incf	(memcpy@d+1)^0,f,c
  4619   0037BA                     l3547:
  4620   0037BA  0605               	decf	memcpy@n^0,f,c
  4621   0037BC  A0D8               	btfss	status,0,c
  4622   0037BE  0606               	decf	(memcpy@n+1)^0,f,c
  4623   0037C0  2805               	incf	memcpy@n^0,w,c
  4624   0037C2  E106               	bnz	u3931
  4625   0037C4  2806               	incf	(memcpy@n+1)^0,w,c
  4626   0037C6  A4D8               	btfss	status,2,c
  4627   0037C8  EFE8  F01B         	goto	u3931
  4628   0037CC  EFEA  F01B         	goto	u3930
  4629   0037D0                     u3931:
  4630   0037D0  EFCD  F01B         	goto	l3539
  4631   0037D4                     u3930:
  4632   0037D4  0012               	return		;funcret
  4633   0037D6                     __end_of_memcpy:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function _labs *****************
  4637 ;; Defined at:
  4638 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  a               4    0[COMRAM] long 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;		None
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  4    0[COMRAM] long 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4652 ;;      Params:         4       0       0       0       0       0       0       0       0
  4653 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4654 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4655 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4656 ;;Total ram usage:        8 bytes
  4657 ;; Hardware stack levels used: 1
  4658 ;; This function calls:
  4659 ;;		Nothing
  4660 ;; This function is called by:
  4661 ;;		_efgtoa
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text19
  4666   00344A                     __ptext19:
  4667                           	callstack 0
  4668   00344A                     _labs:
  4669                           	callstack 25
  4670   00344A  BE04               	btfsc	(labs@a+3)^0,7,c
  4671   00344C  EF34  F01A         	goto	u3820
  4672   003450  5004               	movf	(labs@a+3)^0,w,c
  4673   003452  1003               	iorwf	(labs@a+2)^0,w,c
  4674   003454  1002               	iorwf	(labs@a+1)^0,w,c
  4675   003456  E106               	bnz	u3821
  4676   003458  0401               	decf	labs@a^0,w,c
  4677   00345A  B0D8               	btfsc	status,0,c
  4678   00345C  EF32  F01A         	goto	u3821
  4679   003460  EF34  F01A         	goto	u3820
  4680   003464                     u3821:
  4681   003464  EF4F  F01A         	goto	l1079
  4682   003468                     u3820:
  4683   003468  C001  F005         	movff	labs@a,??_labs
  4684   00346C  C002  F006         	movff	labs@a+1,??_labs+1
  4685   003470  C003  F007         	movff	labs@a+2,??_labs+2
  4686   003474  C004  F008         	movff	labs@a+3,??_labs+3
  4687   003478  1E05               	comf	??_labs^0,f,c
  4688   00347A  1E06               	comf	(??_labs+1)^0,f,c
  4689   00347C  1E07               	comf	(??_labs+2)^0,f,c
  4690   00347E  1E08               	comf	(??_labs+3)^0,f,c
  4691   003480  2A05               	incf	??_labs^0,f,c
  4692   003482  0E00               	movlw	0
  4693   003484  2206               	addwfc	(??_labs+1)^0,f,c
  4694   003486  2207               	addwfc	(??_labs+2)^0,f,c
  4695   003488  2208               	addwfc	(??_labs+3)^0,f,c
  4696   00348A  C005  F001         	movff	??_labs,?_labs
  4697   00348E  C006  F002         	movff	??_labs+1,?_labs+1
  4698   003492  C007  F003         	movff	??_labs+2,?_labs+2
  4699   003496  C008  F004         	movff	??_labs+3,?_labs+3
  4700   00349A  EF57  F01A         	goto	l1082
  4701   00349E                     l1079:
  4702   00349E  C001  F001         	movff	labs@a,?_labs
  4703   0034A2  C002  F002         	movff	labs@a+1,?_labs+1
  4704   0034A6  C003  F003         	movff	labs@a+2,?_labs+2
  4705   0034AA  C004  F004         	movff	labs@a+3,?_labs+3
  4706   0034AE                     l1082:
  4707   0034AE  0012               	return		;funcret
  4708   0034B0                     __end_of_labs:
  4709                           	callstack 0
  4710                           
  4711 ;; *************** function _floorf *****************
  4712 ;; Defined at:
  4713 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  x               4   64[COMRAM] float 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  u               4   80[COMRAM] struct .
  4718 ;;  m               4   74[COMRAM] unsigned long 
  4719 ;;  e               2   78[COMRAM] int 
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  4   64[COMRAM] float 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4729 ;;      Params:         4       0       0       0       0       0       0       0       0
  4730 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4731 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4732 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4733 ;;Total ram usage:       20 bytes
  4734 ;; Hardware stack levels used: 1
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		_efgtoa
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text20
  4743   0023DE                     __ptext20:
  4744                           	callstack 0
  4745   0023DE                     _floorf:
  4746                           	callstack 25
  4747   0023DE  C0D7  F051         	movff	floorf@F526,floorf@u
  4748   0023E2  C0D8  F052         	movff	floorf@F526+1,floorf@u+1
  4749   0023E6  C0D9  F053         	movff	floorf@F526+2,floorf@u+2
  4750   0023EA  C0DA  F054         	movff	floorf@F526+3,floorf@u+3
  4751   0023EE  C041  F051         	movff	floorf@x,floorf@u
  4752   0023F2  C042  F052         	movff	floorf@x+1,floorf@u+1
  4753   0023F6  C043  F053         	movff	floorf@x+2,floorf@u+2
  4754   0023FA  C044  F054         	movff	floorf@x+3,floorf@u+3
  4755   0023FE  0E81               	movlw	129
  4756   002400  6E45               	movwf	??_floorf^0,c
  4757   002402  0EFF               	movlw	255
  4758   002404  6E46               	movwf	(??_floorf+1)^0,c
  4759   002406  C051  F047         	movff	floorf@u,??_floorf+2
  4760   00240A  C052  F048         	movff	floorf@u+1,??_floorf+3
  4761   00240E  C053  F049         	movff	floorf@u+2,??_floorf+4
  4762   002412  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4763   002416  0E18               	movlw	24
  4764   002418  EF13  F012         	goto	u3830
  4765   00241C                     u3835:
  4766   00241C  90D8               	bcf	status,0,c
  4767   00241E  324A               	rrcf	(??_floorf+5)^0,f,c
  4768   002420  3249               	rrcf	(??_floorf+4)^0,f,c
  4769   002422  3248               	rrcf	(??_floorf+3)^0,f,c
  4770   002424  3247               	rrcf	(??_floorf+2)^0,f,c
  4771   002426                     u3830:
  4772   002426  2EE8               	decfsz	wreg,f,c
  4773   002428  EF0E  F012         	goto	u3835
  4774   00242C  5047               	movf	(??_floorf+2)^0,w,c
  4775   00242E  2445               	addwf	??_floorf^0,w,c
  4776   002430  6E4F               	movwf	floorf@e^0,c
  4777   002432  0E00               	movlw	0
  4778   002434  2046               	addwfc	(??_floorf+1)^0,w,c
  4779   002436  6E50               	movwf	(floorf@e+1)^0,c
  4780   002438  BE50               	btfsc	(floorf@e+1)^0,7,c
  4781   00243A  EF28  F012         	goto	u3841
  4782   00243E  5050               	movf	(floorf@e+1)^0,w,c
  4783   002440  E109               	bnz	u3840
  4784   002442  0E17               	movlw	23
  4785   002444  5C4F               	subwf	floorf@e^0,w,c
  4786   002446  A0D8               	btfss	status,0,c
  4787   002448  EF28  F012         	goto	u3841
  4788   00244C  EF2A  F012         	goto	u3840
  4789   002450                     u3841:
  4790   002450  EF34  F012         	goto	l3515
  4791   002454                     u3840:
  4792   002454                     l3513:
  4793   002454  C041  F041         	movff	floorf@x,?_floorf
  4794   002458  C042  F042         	movff	floorf@x+1,?_floorf+1
  4795   00245C  C043  F043         	movff	floorf@x+2,?_floorf+2
  4796   002460  C044  F044         	movff	floorf@x+3,?_floorf+3
  4797   002464  EFF7  F012         	goto	l1068
  4798   002468                     l3515:
  4799   002468  BE50               	btfsc	(floorf@e+1)^0,7,c
  4800   00246A  EF39  F012         	goto	u3851
  4801   00246E  EF3B  F012         	goto	u3850
  4802   002472                     u3851:
  4803   002472  EFAB  F012         	goto	l3525
  4804   002476                     u3850:
  4805   002476  C04F  F045         	movff	floorf@e,??_floorf
  4806   00247A  0EFF               	movlw	255
  4807   00247C  6E46               	movwf	(??_floorf+1)^0,c
  4808   00247E  0EFF               	movlw	255
  4809   002480  6E47               	movwf	(??_floorf+2)^0,c
  4810   002482  0E7F               	movlw	127
  4811   002484  6E48               	movwf	(??_floorf+3)^0,c
  4812   002486  0E00               	movlw	0
  4813   002488  6E49               	movwf	(??_floorf+4)^0,c
  4814   00248A                     u3865:
  4815   00248A  6645               	tstfsz	??_floorf^0,c
  4816   00248C  EF4A  F012         	goto	u3866
  4817   002490  EF52  F012         	goto	u3867
  4818   002494                     u3866:
  4819   002494  3449               	rlcf	(??_floorf+4)^0,w,c
  4820   002496  3249               	rrcf	(??_floorf+4)^0,f,c
  4821   002498  3248               	rrcf	(??_floorf+3)^0,f,c
  4822   00249A  3247               	rrcf	(??_floorf+2)^0,f,c
  4823   00249C  3246               	rrcf	(??_floorf+1)^0,f,c
  4824   00249E  2E45               	decfsz	??_floorf^0,f,c
  4825   0024A0  EF45  F012         	goto	u3865
  4826   0024A4                     u3867:
  4827   0024A4  C046  F04B         	movff	??_floorf+1,floorf@m
  4828   0024A8  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4829   0024AC  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4830   0024B0  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4831   0024B4  504B               	movf	floorf@m^0,w,c
  4832   0024B6  1451               	andwf	floorf@u^0,w,c
  4833   0024B8  6E45               	movwf	??_floorf^0,c
  4834   0024BA  504C               	movf	(floorf@m+1)^0,w,c
  4835   0024BC  1452               	andwf	(floorf@u+1)^0,w,c
  4836   0024BE  6E46               	movwf	(??_floorf+1)^0,c
  4837   0024C0  504D               	movf	(floorf@m+2)^0,w,c
  4838   0024C2  1453               	andwf	(floorf@u+2)^0,w,c
  4839   0024C4  6E47               	movwf	(??_floorf+2)^0,c
  4840   0024C6  504E               	movf	(floorf@m+3)^0,w,c
  4841   0024C8  1454               	andwf	(floorf@u+3)^0,w,c
  4842   0024CA  6E48               	movwf	(??_floorf+3)^0,c
  4843   0024CC  5045               	movf	??_floorf^0,w,c
  4844   0024CE  1046               	iorwf	(??_floorf+1)^0,w,c
  4845   0024D0  1047               	iorwf	(??_floorf+2)^0,w,c
  4846   0024D2  1048               	iorwf	(??_floorf+3)^0,w,c
  4847   0024D4  A4D8               	btfss	status,2,c
  4848   0024D6  EF6F  F012         	goto	u3871
  4849   0024DA  EF71  F012         	goto	u3870
  4850   0024DE                     u3871:
  4851   0024DE  EF73  F012         	goto	l3521
  4852   0024E2                     u3870:
  4853   0024E2  EF2A  F012         	goto	l3513
  4854   0024E6                     l3521:
  4855   0024E6  C051  F045         	movff	floorf@u,??_floorf
  4856   0024EA  C052  F046         	movff	floorf@u+1,??_floorf+1
  4857   0024EE  C053  F047         	movff	floorf@u+2,??_floorf+2
  4858   0024F2  C054  F048         	movff	floorf@u+3,??_floorf+3
  4859   0024F6  0E20               	movlw	32
  4860   0024F8  EF83  F012         	goto	u3880
  4861   0024FC                     u3885:
  4862   0024FC  90D8               	bcf	status,0,c
  4863   0024FE  3248               	rrcf	(??_floorf+3)^0,f,c
  4864   002500  3247               	rrcf	(??_floorf+2)^0,f,c
  4865   002502  3246               	rrcf	(??_floorf+1)^0,f,c
  4866   002504  3245               	rrcf	??_floorf^0,f,c
  4867   002506                     u3880:
  4868   002506  2EE8               	decfsz	wreg,f,c
  4869   002508  EF7E  F012         	goto	u3885
  4870   00250C  5045               	movf	??_floorf^0,w,c
  4871   00250E  1046               	iorwf	(??_floorf+1)^0,w,c
  4872   002510  1047               	iorwf	(??_floorf+2)^0,w,c
  4873   002512  1048               	iorwf	(??_floorf+3)^0,w,c
  4874   002514  B4D8               	btfsc	status,2,c
  4875   002516  EF8F  F012         	goto	u3891
  4876   00251A  EF91  F012         	goto	u3890
  4877   00251E                     u3891:
  4878   00251E  EF99  F012         	goto	l1071
  4879   002522                     u3890:
  4880   002522  504B               	movf	floorf@m^0,w,c
  4881   002524  2651               	addwf	floorf@u^0,f,c
  4882   002526  504C               	movf	(floorf@m+1)^0,w,c
  4883   002528  2252               	addwfc	(floorf@u+1)^0,f,c
  4884   00252A  504D               	movf	(floorf@m+2)^0,w,c
  4885   00252C  2253               	addwfc	(floorf@u+2)^0,f,c
  4886   00252E  504E               	movf	(floorf@m+3)^0,w,c
  4887   002530  2254               	addwfc	(floorf@u+3)^0,f,c
  4888   002532                     l1071:
  4889   002532  1C4B               	comf	floorf@m^0,w,c
  4890   002534  6E45               	movwf	??_floorf^0,c
  4891   002536  1C4C               	comf	(floorf@m+1)^0,w,c
  4892   002538  6E46               	movwf	(??_floorf+1)^0,c
  4893   00253A  1C4D               	comf	(floorf@m+2)^0,w,c
  4894   00253C  6E47               	movwf	(??_floorf+2)^0,c
  4895   00253E  1C4E               	comf	(floorf@m+3)^0,w,c
  4896   002540  6E48               	movwf	(??_floorf+3)^0,c
  4897   002542  5045               	movf	??_floorf^0,w,c
  4898   002544  1651               	andwf	floorf@u^0,f,c
  4899   002546  5046               	movf	(??_floorf+1)^0,w,c
  4900   002548  1652               	andwf	(floorf@u+1)^0,f,c
  4901   00254A  5047               	movf	(??_floorf+2)^0,w,c
  4902   00254C  1653               	andwf	(floorf@u+2)^0,f,c
  4903   00254E  5048               	movf	(??_floorf+3)^0,w,c
  4904   002550  1654               	andwf	(floorf@u+3)^0,f,c
  4905   002552  EFEF  F012         	goto	l3533
  4906   002556                     l3525:
  4907   002556  C051  F045         	movff	floorf@u,??_floorf
  4908   00255A  C052  F046         	movff	floorf@u+1,??_floorf+1
  4909   00255E  C053  F047         	movff	floorf@u+2,??_floorf+2
  4910   002562  C054  F048         	movff	floorf@u+3,??_floorf+3
  4911   002566  0E20               	movlw	32
  4912   002568  EFBB  F012         	goto	u3900
  4913   00256C                     u3905:
  4914   00256C  90D8               	bcf	status,0,c
  4915   00256E  3248               	rrcf	(??_floorf+3)^0,f,c
  4916   002570  3247               	rrcf	(??_floorf+2)^0,f,c
  4917   002572  3246               	rrcf	(??_floorf+1)^0,f,c
  4918   002574  3245               	rrcf	??_floorf^0,f,c
  4919   002576                     u3900:
  4920   002576  2EE8               	decfsz	wreg,f,c
  4921   002578  EFB6  F012         	goto	u3905
  4922   00257C  5045               	movf	??_floorf^0,w,c
  4923   00257E  1046               	iorwf	(??_floorf+1)^0,w,c
  4924   002580  1047               	iorwf	(??_floorf+2)^0,w,c
  4925   002582  1048               	iorwf	(??_floorf+3)^0,w,c
  4926   002584  A4D8               	btfss	status,2,c
  4927   002586  EFC7  F012         	goto	u3911
  4928   00258A  EFC9  F012         	goto	u3910
  4929   00258E                     u3911:
  4930   00258E  EFD3  F012         	goto	l3529
  4931   002592                     u3910:
  4932   002592  0E00               	movlw	0
  4933   002594  6E51               	movwf	floorf@u^0,c
  4934   002596  0E00               	movlw	0
  4935   002598  6E52               	movwf	(floorf@u+1)^0,c
  4936   00259A  0E00               	movlw	0
  4937   00259C  6E53               	movwf	(floorf@u+2)^0,c
  4938   00259E  0E00               	movlw	0
  4939   0025A0  6E54               	movwf	(floorf@u+3)^0,c
  4940   0025A2  EFEF  F012         	goto	l3533
  4941   0025A6                     l3529:
  4942   0025A6  90D8               	bcf	status,0,c
  4943   0025A8  3451               	rlcf	floorf@u^0,w,c
  4944   0025AA  6E45               	movwf	??_floorf^0,c
  4945   0025AC  3452               	rlcf	(floorf@u+1)^0,w,c
  4946   0025AE  6E46               	movwf	(??_floorf+1)^0,c
  4947   0025B0  3453               	rlcf	(floorf@u+2)^0,w,c
  4948   0025B2  6E47               	movwf	(??_floorf+2)^0,c
  4949   0025B4  3454               	rlcf	(floorf@u+3)^0,w,c
  4950   0025B6  6E48               	movwf	(??_floorf+3)^0,c
  4951   0025B8  5045               	movf	??_floorf^0,w,c
  4952   0025BA  1046               	iorwf	(??_floorf+1)^0,w,c
  4953   0025BC  1047               	iorwf	(??_floorf+2)^0,w,c
  4954   0025BE  1048               	iorwf	(??_floorf+3)^0,w,c
  4955   0025C0  B4D8               	btfsc	status,2,c
  4956   0025C2  EFE5  F012         	goto	u3921
  4957   0025C6  EFE7  F012         	goto	u3920
  4958   0025CA                     u3921:
  4959   0025CA  EFEF  F012         	goto	l3533
  4960   0025CE                     u3920:
  4961   0025CE  0E00               	movlw	0
  4962   0025D0  6E51               	movwf	floorf@u^0,c
  4963   0025D2  0E00               	movlw	0
  4964   0025D4  6E52               	movwf	(floorf@u+1)^0,c
  4965   0025D6  0E80               	movlw	128
  4966   0025D8  6E53               	movwf	(floorf@u+2)^0,c
  4967   0025DA  0EBF               	movlw	191
  4968   0025DC  6E54               	movwf	(floorf@u+3)^0,c
  4969   0025DE                     l3533:
  4970   0025DE  C051  F041         	movff	floorf@u,?_floorf
  4971   0025E2  C052  F042         	movff	floorf@u+1,?_floorf+1
  4972   0025E6  C053  F043         	movff	floorf@u+2,?_floorf+2
  4973   0025EA  C054  F044         	movff	floorf@u+3,?_floorf+3
  4974   0025EE                     l1068:
  4975   0025EE  0012               	return		;funcret
  4976   0025F0                     __end_of_floorf:
  4977                           	callstack 0
  4978                           
  4979 ;; *************** function ___fpclassifyf *****************
  4980 ;; Defined at:
  4981 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  x               4    0[COMRAM] float 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  u               4   10[COMRAM] struct .
  4986 ;;  e               2    8[COMRAM] int 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  2    0[COMRAM] int 
  4989 ;; Registers used:
  4990 ;;		wreg, status,2, status,0
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4996 ;;      Params:         4       0       0       0       0       0       0       0       0
  4997 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4998 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4999 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5000 ;;Total ram usage:       14 bytes
  5001 ;; Hardware stack levels used: 1
  5002 ;; This function calls:
  5003 ;;		Nothing
  5004 ;; This function is called by:
  5005 ;;		_efgtoa
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text21
  5010   002D98                     __ptext21:
  5011                           	callstack 0
  5012   002D98                     ___fpclassifyf:
  5013                           	callstack 25
  5014   002D98  C0DB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5015   002D9C  C0DC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5016   002DA0  C0DD  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5017   002DA4  C0DE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5018   002DA8  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5019   002DAC  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5020   002DB0  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5021   002DB4  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5022   002DB8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5023   002DBC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5024   002DC0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5025   002DC4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5026   002DC8  0E18               	movlw	24
  5027   002DCA  EFEC  F016         	goto	u3730
  5028   002DCE                     u3735:
  5029   002DCE  90D8               	bcf	status,0,c
  5030   002DD0  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5031   002DD2  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5032   002DD4  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5033   002DD6  3205               	rrcf	??___fpclassifyf^0,f,c
  5034   002DD8                     u3730:
  5035   002DD8  2EE8               	decfsz	wreg,f,c
  5036   002DDA  EFE7  F016         	goto	u3735
  5037   002DDE  5005               	movf	??___fpclassifyf^0,w,c
  5038   002DE0  6E09               	movwf	___fpclassifyf@e^0,c
  5039   002DE2  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5040   002DE4  5009               	movf	___fpclassifyf@e^0,w,c
  5041   002DE6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5042   002DE8  A4D8               	btfss	status,2,c
  5043   002DEA  EFF9  F016         	goto	u3741
  5044   002DEE  EFFB  F016         	goto	u3740
  5045   002DF2                     u3741:
  5046   002DF2  EF1B  F017         	goto	l3491
  5047   002DF6                     u3740:
  5048   002DF6  90D8               	bcf	status,0,c
  5049   002DF8  340B               	rlcf	___fpclassifyf@u^0,w,c
  5050   002DFA  6E05               	movwf	??___fpclassifyf^0,c
  5051   002DFC  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5052   002DFE  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5053   002E00  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5054   002E02  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5055   002E04  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5056   002E06  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5057   002E08  5005               	movf	??___fpclassifyf^0,w,c
  5058   002E0A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5059   002E0C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5060   002E0E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5061   002E10  A4D8               	btfss	status,2,c
  5062   002E12  EF0D  F017         	goto	u3751
  5063   002E16  EF0F  F017         	goto	u3750
  5064   002E1A                     u3751:
  5065   002E1A  EF15  F017         	goto	l3487
  5066   002E1E                     u3750:
  5067   002E1E  0E00               	movlw	0
  5068   002E20  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5069   002E22  0E02               	movlw	2
  5070   002E24  6E01               	movwf	?___fpclassifyf^0,c
  5071   002E26  EF4A  F017         	goto	l1054
  5072   002E2A                     l3487:
  5073   002E2A  0E00               	movlw	0
  5074   002E2C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5075   002E2E  0E03               	movlw	3
  5076   002E30  6E01               	movwf	?___fpclassifyf^0,c
  5077   002E32  EF4A  F017         	goto	l1054
  5078   002E36                     l3491:
  5079   002E36  2809               	incf	___fpclassifyf@e^0,w,c
  5080   002E38  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5081   002E3A  A4D8               	btfss	status,2,c
  5082   002E3C  EF22  F017         	goto	u3761
  5083   002E40  EF24  F017         	goto	u3760
  5084   002E44                     u3761:
  5085   002E44  EF46  F017         	goto	l3497
  5086   002E48                     u3760:
  5087   002E48  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5088   002E4C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5089   002E50  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5090   002E54  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5091   002E58  0E09               	movlw	9
  5092   002E5A                     u3775:
  5093   002E5A  90D8               	bcf	status,0,c
  5094   002E5C  3605               	rlcf	??___fpclassifyf^0,f,c
  5095   002E5E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5096   002E60  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5097   002E62  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5098   002E64  2EE8               	decfsz	wreg,f,c
  5099   002E66  EF2D  F017         	goto	u3775
  5100   002E6A  5005               	movf	??___fpclassifyf^0,w,c
  5101   002E6C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5102   002E6E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5103   002E70  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5104   002E72  B4D8               	btfsc	status,2,c
  5105   002E74  EF3E  F017         	goto	u3781
  5106   002E78  EF41  F017         	goto	u3780
  5107   002E7C                     u3781:
  5108   002E7C  0E01               	movlw	1
  5109   002E7E  EF42  F017         	goto	u3790
  5110   002E82                     u3780:
  5111   002E82  0E00               	movlw	0
  5112   002E84                     u3790:
  5113   002E84  6E01               	movwf	?___fpclassifyf^0,c
  5114   002E86  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5115   002E88  EF4A  F017         	goto	l1054
  5116   002E8C                     l3497:
  5117   002E8C  0E00               	movlw	0
  5118   002E8E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5119   002E90  0E04               	movlw	4
  5120   002E92  6E01               	movwf	?___fpclassifyf^0,c
  5121   002E94                     l1054:
  5122   002E94  0012               	return		;funcret
  5123   002E96                     __end_of___fpclassifyf:
  5124                           	callstack 0
  5125                           
  5126 ;; *************** function ___fltol *****************
  5127 ;; Defined at:
  5128 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  f1              4    0[COMRAM] int 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;  exp1            1    9[COMRAM] unsigned char 
  5133 ;;  sign1           1    8[COMRAM] unsigned char 
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  4    0[COMRAM] long 
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5143 ;;      Params:         4       0       0       0       0       0       0       0       0
  5144 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5145 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5146 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5147 ;;Total ram usage:       10 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; This function calls:
  5150 ;;		Nothing
  5151 ;; This function is called by:
  5152 ;;		_efgtoa
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text22
  5157   002B8E                     __ptext22:
  5158                           	callstack 0
  5159   002B8E                     ___fltol:
  5160                           	callstack 25
  5161   002B8E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5162   002B90  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5163   002B92  6E0A               	movwf	___fltol@exp1^0,c
  5164   002B94  500A               	movf	___fltol@exp1^0,w,c
  5165   002B96  A4D8               	btfss	status,2,c
  5166   002B98  EFD0  F015         	goto	u3631
  5167   002B9C  EFD2  F015         	goto	u3630
  5168   002BA0                     u3631:
  5169   002BA0  EFDC  F015         	goto	l3423
  5170   002BA4                     u3630:
  5171   002BA4                     l3419:
  5172   002BA4  0E00               	movlw	0
  5173   002BA6  6E01               	movwf	?___fltol^0,c
  5174   002BA8  0E00               	movlw	0
  5175   002BAA  6E02               	movwf	(?___fltol+1)^0,c
  5176   002BAC  0E00               	movlw	0
  5177   002BAE  6E03               	movwf	(?___fltol+2)^0,c
  5178   002BB0  0E00               	movlw	0
  5179   002BB2  6E04               	movwf	(?___fltol+3)^0,c
  5180   002BB4  EF49  F016         	goto	l518
  5181   002BB8                     l3423:
  5182   002BB8  C001  F005         	movff	___fltol@f1,??___fltol
  5183   002BBC  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5184   002BC0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5185   002BC4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5186   002BC8  0E20               	movlw	32
  5187   002BCA  EFEC  F015         	goto	u3640
  5188   002BCE                     u3645:
  5189   002BCE  90D8               	bcf	status,0,c
  5190   002BD0  3208               	rrcf	(??___fltol+3)^0,f,c
  5191   002BD2  3207               	rrcf	(??___fltol+2)^0,f,c
  5192   002BD4  3206               	rrcf	(??___fltol+1)^0,f,c
  5193   002BD6  3205               	rrcf	??___fltol^0,f,c
  5194   002BD8                     u3640:
  5195   002BD8  2EE8               	decfsz	wreg,f,c
  5196   002BDA  EFE7  F015         	goto	u3645
  5197   002BDE  5005               	movf	??___fltol^0,w,c
  5198   002BE0  6E09               	movwf	___fltol@sign1^0,c
  5199   002BE2  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5200   002BE4  0EFF               	movlw	255
  5201   002BE6  1601               	andwf	___fltol@f1^0,f,c
  5202   002BE8  0EFF               	movlw	255
  5203   002BEA  1602               	andwf	(___fltol@f1+1)^0,f,c
  5204   002BEC  0EFF               	movlw	255
  5205   002BEE  1603               	andwf	(___fltol@f1+2)^0,f,c
  5206   002BF0  0E00               	movlw	0
  5207   002BF2  1604               	andwf	(___fltol@f1+3)^0,f,c
  5208   002BF4  0E96               	movlw	150
  5209   002BF6  5E0A               	subwf	___fltol@exp1^0,f,c
  5210   002BF8  BE0A               	btfsc	___fltol@exp1^0,7,c
  5211   002BFA  EF03  F016         	goto	u3650
  5212   002BFE  EF01  F016         	goto	u3651
  5213   002C02                     u3651:
  5214   002C02  EF19  F016         	goto	l3443
  5215   002C06                     u3650:
  5216   002C06  500A               	movf	___fltol@exp1^0,w,c
  5217   002C08  0A80               	xorlw	128
  5218   002C0A  0F97               	addlw	151
  5219   002C0C  B0D8               	btfsc	status,0,c
  5220   002C0E  EF0B  F016         	goto	u3661
  5221   002C12  EF0D  F016         	goto	u3660
  5222   002C16                     u3661:
  5223   002C16  EF0F  F016         	goto	l3439
  5224   002C1A                     u3660:
  5225   002C1A  EFD2  F015         	goto	l3419
  5226   002C1E                     l3439:
  5227   002C1E  90D8               	bcf	status,0,c
  5228   002C20  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5229   002C22  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5230   002C24  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5231   002C26  3201               	rrcf	___fltol@f1^0,f,c
  5232   002C28  3E0A               	incfsz	___fltol@exp1^0,f,c
  5233   002C2A  EF0F  F016         	goto	l3439
  5234   002C2E  EF31  F016         	goto	l3453
  5235   002C32                     l3443:
  5236   002C32  0E1F               	movlw	31
  5237   002C34  640A               	cpfsgt	___fltol@exp1^0,c
  5238   002C36  EF1F  F016         	goto	u3671
  5239   002C3A  EF21  F016         	goto	u3670
  5240   002C3E                     u3671:
  5241   002C3E  EF29  F016         	goto	l3451
  5242   002C42                     u3670:
  5243   002C42  EFD2  F015         	goto	l3419
  5244   002C46                     l3449:
  5245   002C46  90D8               	bcf	status,0,c
  5246   002C48  3601               	rlcf	___fltol@f1^0,f,c
  5247   002C4A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5248   002C4C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5249   002C4E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5250   002C50  060A               	decf	___fltol@exp1^0,f,c
  5251   002C52                     l3451:
  5252   002C52  500A               	movf	___fltol@exp1^0,w,c
  5253   002C54  A4D8               	btfss	status,2,c
  5254   002C56  EF2F  F016         	goto	u3681
  5255   002C5A  EF31  F016         	goto	u3680
  5256   002C5E                     u3681:
  5257   002C5E  EF23  F016         	goto	l3449
  5258   002C62                     u3680:
  5259   002C62                     l3453:
  5260   002C62  5009               	movf	___fltol@sign1^0,w,c
  5261   002C64  B4D8               	btfsc	status,2,c
  5262   002C66  EF37  F016         	goto	u3691
  5263   002C6A  EF39  F016         	goto	u3690
  5264   002C6E                     u3691:
  5265   002C6E  EF41  F016         	goto	l3457
  5266   002C72                     u3690:
  5267   002C72  1E04               	comf	(___fltol@f1+3)^0,f,c
  5268   002C74  1E03               	comf	(___fltol@f1+2)^0,f,c
  5269   002C76  1E02               	comf	(___fltol@f1+1)^0,f,c
  5270   002C78  6C01               	negf	___fltol@f1^0,c
  5271   002C7A  0E00               	movlw	0
  5272   002C7C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5273   002C7E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5274   002C80  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5275   002C82                     l3457:
  5276   002C82  C001  F001         	movff	___fltol@f1,?___fltol
  5277   002C86  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5278   002C8A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5279   002C8E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5280   002C92                     l518:
  5281   002C92  0012               	return		;funcret
  5282   002C94                     __end_of___fltol:
  5283                           	callstack 0
  5284                           
  5285 ;; *************** function ___flsub *****************
  5286 ;; Defined at:
  5287 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  b               4   39[COMRAM] long 
  5290 ;;  a               4   43[COMRAM] long 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;		None
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  4   39[COMRAM] long 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0, cstack
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5302 ;;      Params:         8       0       0       0       0       0       0       0       0
  5303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5305 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5306 ;;Total ram usage:        8 bytes
  5307 ;; Hardware stack levels used: 1
  5308 ;; Hardware stack levels required when called: 1
  5309 ;; This function calls:
  5310 ;;		___fladd
  5311 ;; This function is called by:
  5312 ;;		_efgtoa
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text23
  5317   0037D6                     __ptext23:
  5318                           	callstack 0
  5319   0037D6                     ___flsub:
  5320                           	callstack 24
  5321   0037D6  0E00               	movlw	0
  5322   0037D8  1A2C               	xorwf	___flsub@a^0,f,c
  5323   0037DA  0E00               	movlw	0
  5324   0037DC  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5325   0037DE  0E00               	movlw	0
  5326   0037E0  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5327   0037E2  0E80               	movlw	128
  5328   0037E4  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5329   0037E6  C028  F001         	movff	___flsub@b,___fladd@b
  5330   0037EA  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5331   0037EE  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5332   0037F2  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5333   0037F6  C02C  F005         	movff	___flsub@a,___fladd@a
  5334   0037FA  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5335   0037FE  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5336   003802  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5337   003806  EC0F  F009         	call	___fladd	;wreg free
  5338   00380A  C001  F028         	movff	?___fladd,?___flsub
  5339   00380E  C002  F029         	movff	?___fladd+1,?___flsub+1
  5340   003812  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5341   003816  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5342   00381A  0012               	return		;funcret
  5343   00381C                     __end_of___flsub:
  5344                           	callstack 0
  5345                           
  5346 ;; *************** function ___fladd *****************
  5347 ;; Defined at:
  5348 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  b               4    0[COMRAM] long 
  5351 ;;  a               4    4[COMRAM] long 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  grs             1   15[COMRAM] unsigned char 
  5354 ;;  bexp            1   14[COMRAM] unsigned char 
  5355 ;;  aexp            1   13[COMRAM] unsigned char 
  5356 ;;  signs           1   12[COMRAM] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  4    0[COMRAM] unsigned char 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5366 ;;      Params:         8       0       0       0       0       0       0       0       0
  5367 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5368 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5369 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5370 ;;Total ram usage:       16 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		___flsub
  5376 ;;		_efgtoa
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text24
  5381   00121E                     __ptext24:
  5382                           	callstack 0
  5383   00121E                     ___fladd:
  5384                           	callstack 24
  5385   00121E  5004               	movf	(___fladd@b+3)^0,w,c
  5386   001220  0B80               	andlw	128
  5387   001222  6E0D               	movwf	___fladd@signs^0,c
  5388   001224  5004               	movf	(___fladd@b+3)^0,w,c
  5389   001226  2404               	addwf	(___fladd@b+3)^0,w,c
  5390   001228  6E0F               	movwf	___fladd@bexp^0,c
  5391   00122A  AE03               	btfss	(___fladd@b+2)^0,7,c
  5392   00122C  EF1A  F009         	goto	u2601
  5393   001230  EF1C  F009         	goto	u2600
  5394   001234                     u2601:
  5395   001234  EF1D  F009         	goto	l2807
  5396   001238                     u2600:
  5397   001238  800F               	bsf	___fladd@bexp^0,0,c
  5398   00123A                     l2807:
  5399   00123A  500F               	movf	___fladd@bexp^0,w,c
  5400   00123C  B4D8               	btfsc	status,2,c
  5401   00123E  EF23  F009         	goto	u2611
  5402   001242  EF25  F009         	goto	u2610
  5403   001246                     u2611:
  5404   001246  EF3A  F009         	goto	l2817
  5405   00124A                     u2610:
  5406   00124A  280F               	incf	___fladd@bexp^0,w,c
  5407   00124C  A4D8               	btfss	status,2,c
  5408   00124E  EF2B  F009         	goto	u2621
  5409   001252  EF2D  F009         	goto	u2620
  5410   001256                     u2621:
  5411   001256  EF35  F009         	goto	l2813
  5412   00125A                     u2620:
  5413   00125A  0E00               	movlw	0
  5414   00125C  6E01               	movwf	___fladd@b^0,c
  5415   00125E  0E00               	movlw	0
  5416   001260  6E02               	movwf	(___fladd@b+1)^0,c
  5417   001262  0E00               	movlw	0
  5418   001264  6E03               	movwf	(___fladd@b+2)^0,c
  5419   001266  0E00               	movlw	0
  5420   001268  6E04               	movwf	(___fladd@b+3)^0,c
  5421   00126A                     l2813:
  5422   00126A  8E03               	bsf	(___fladd@b+2)^0,7,c
  5423   00126C  0E00               	movlw	0
  5424   00126E  6E04               	movwf	(___fladd@b+3)^0,c
  5425   001270  EF42  F009         	goto	l2819
  5426   001274                     l2817:
  5427   001274  0E00               	movlw	0
  5428   001276  6E01               	movwf	___fladd@b^0,c
  5429   001278  0E00               	movlw	0
  5430   00127A  6E02               	movwf	(___fladd@b+1)^0,c
  5431   00127C  0E00               	movlw	0
  5432   00127E  6E03               	movwf	(___fladd@b+2)^0,c
  5433   001280  0E00               	movlw	0
  5434   001282  6E04               	movwf	(___fladd@b+3)^0,c
  5435   001284                     l2819:
  5436   001284  5008               	movf	(___fladd@a+3)^0,w,c
  5437   001286  0B80               	andlw	128
  5438   001288  6E0E               	movwf	___fladd@aexp^0,c
  5439   00128A  500D               	movf	___fladd@signs^0,w,c
  5440   00128C  180E               	xorwf	___fladd@aexp^0,w,c
  5441   00128E  B4D8               	btfsc	status,2,c
  5442   001290  EF4C  F009         	goto	u2631
  5443   001294  EF4E  F009         	goto	u2630
  5444   001298                     u2631:
  5445   001298  EF4F  F009         	goto	l2825
  5446   00129C                     u2630:
  5447   00129C  8C0D               	bsf	___fladd@signs^0,6,c
  5448   00129E                     l2825:
  5449   00129E  5008               	movf	(___fladd@a+3)^0,w,c
  5450   0012A0  2408               	addwf	(___fladd@a+3)^0,w,c
  5451   0012A2  6E0E               	movwf	___fladd@aexp^0,c
  5452   0012A4  AE07               	btfss	(___fladd@a+2)^0,7,c
  5453   0012A6  EF57  F009         	goto	u2641
  5454   0012AA  EF59  F009         	goto	u2640
  5455   0012AE                     u2641:
  5456   0012AE  EF5A  F009         	goto	l2831
  5457   0012B2                     u2640:
  5458   0012B2  800E               	bsf	___fladd@aexp^0,0,c
  5459   0012B4                     l2831:
  5460   0012B4  500E               	movf	___fladd@aexp^0,w,c
  5461   0012B6  B4D8               	btfsc	status,2,c
  5462   0012B8  EF60  F009         	goto	u2651
  5463   0012BC  EF62  F009         	goto	u2650
  5464   0012C0                     u2651:
  5465   0012C0  EF77  F009         	goto	l2841
  5466   0012C4                     u2650:
  5467   0012C4  280E               	incf	___fladd@aexp^0,w,c
  5468   0012C6  A4D8               	btfss	status,2,c
  5469   0012C8  EF68  F009         	goto	u2661
  5470   0012CC  EF6A  F009         	goto	u2660
  5471   0012D0                     u2661:
  5472   0012D0  EF72  F009         	goto	l2837
  5473   0012D4                     u2660:
  5474   0012D4  0E00               	movlw	0
  5475   0012D6  6E05               	movwf	___fladd@a^0,c
  5476   0012D8  0E00               	movlw	0
  5477   0012DA  6E06               	movwf	(___fladd@a+1)^0,c
  5478   0012DC  0E00               	movlw	0
  5479   0012DE  6E07               	movwf	(___fladd@a+2)^0,c
  5480   0012E0  0E00               	movlw	0
  5481   0012E2  6E08               	movwf	(___fladd@a+3)^0,c
  5482   0012E4                     l2837:
  5483   0012E4  8E07               	bsf	(___fladd@a+2)^0,7,c
  5484   0012E6  0E00               	movlw	0
  5485   0012E8  6E08               	movwf	(___fladd@a+3)^0,c
  5486   0012EA  EF7F  F009         	goto	l2843
  5487   0012EE                     l2841:
  5488   0012EE  0E00               	movlw	0
  5489   0012F0  6E05               	movwf	___fladd@a^0,c
  5490   0012F2  0E00               	movlw	0
  5491   0012F4  6E06               	movwf	(___fladd@a+1)^0,c
  5492   0012F6  0E00               	movlw	0
  5493   0012F8  6E07               	movwf	(___fladd@a+2)^0,c
  5494   0012FA  0E00               	movlw	0
  5495   0012FC  6E08               	movwf	(___fladd@a+3)^0,c
  5496   0012FE                     l2843:
  5497   0012FE  500F               	movf	___fladd@bexp^0,w,c
  5498   001300  5C0E               	subwf	___fladd@aexp^0,w,c
  5499   001302  B0D8               	btfsc	status,0,c
  5500   001304  EF86  F009         	goto	u2671
  5501   001308  EF88  F009         	goto	u2670
  5502   00130C                     u2671:
  5503   00130C  EFAF  F009         	goto	l2879
  5504   001310                     u2670:
  5505   001310  AC0D               	btfss	___fladd@signs^0,6,c
  5506   001312  EF8D  F009         	goto	u2681
  5507   001316  EF8F  F009         	goto	u2680
  5508   00131A                     u2681:
  5509   00131A  EF91  F009         	goto	l2849
  5510   00131E                     u2680:
  5511   00131E  0E80               	movlw	128
  5512   001320  1A0D               	xorwf	___fladd@signs^0,f,c
  5513   001322                     l2849:
  5514   001322  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5515   001326  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5516   00132A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5517   00132E  C001  F010         	movff	___fladd@b,___fladd@grs
  5518   001332  C005  F001         	movff	___fladd@a,___fladd@b
  5519   001336  C010  F005         	movff	___fladd@grs,___fladd@a
  5520   00133A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5521   00133E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5522   001342  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5523   001346  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5524   00134A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5525   00134E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5526   001352  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5527   001356  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5528   00135A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5529   00135E                     l2879:
  5530   00135E  0E00               	movlw	0
  5531   001360  6E10               	movwf	___fladd@grs^0,c
  5532   001362  500F               	movf	___fladd@bexp^0,w,c
  5533   001364  C00E  F009         	movff	___fladd@aexp,??___fladd
  5534   001368  6A0A               	clrf	(??___fladd+1)^0,c
  5535   00136A  5E09               	subwf	??___fladd^0,f,c
  5536   00136C  0E00               	movlw	0
  5537   00136E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5538   001370  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5539   001372  EFC4  F009         	goto	u2691
  5540   001376  500A               	movf	(??___fladd+1)^0,w,c
  5541   001378  E109               	bnz	u2690
  5542   00137A  0E1A               	movlw	26
  5543   00137C  5C09               	subwf	??___fladd^0,w,c
  5544   00137E  A0D8               	btfss	status,0,c
  5545   001380  EFC4  F009         	goto	u2691
  5546   001384  EFC6  F009         	goto	u2690
  5547   001388                     u2691:
  5548   001388  EFFD  F009         	goto	l750
  5549   00138C                     u2690:
  5550   00138C  5001               	movf	___fladd@b^0,w,c
  5551   00138E  1002               	iorwf	(___fladd@b+1)^0,w,c
  5552   001390  1003               	iorwf	(___fladd@b+2)^0,w,c
  5553   001392  1004               	iorwf	(___fladd@b+3)^0,w,c
  5554   001394  A4D8               	btfss	status,2,c
  5555   001396  EFCF  F009         	goto	u2701
  5556   00139A  EFD2  F009         	goto	u2700
  5557   00139E                     u2701:
  5558   00139E  0E01               	movlw	1
  5559   0013A0  EFD3  F009         	goto	u2710
  5560   0013A4                     u2700:
  5561   0013A4  0E00               	movlw	0
  5562   0013A6                     u2710:
  5563   0013A6  6E10               	movwf	___fladd@grs^0,c
  5564   0013A8  0E00               	movlw	0
  5565   0013AA  6E01               	movwf	___fladd@b^0,c
  5566   0013AC  0E00               	movlw	0
  5567   0013AE  6E02               	movwf	(___fladd@b+1)^0,c
  5568   0013B0  0E00               	movlw	0
  5569   0013B2  6E03               	movwf	(___fladd@b+2)^0,c
  5570   0013B4  0E00               	movlw	0
  5571   0013B6  6E04               	movwf	(___fladd@b+3)^0,c
  5572   0013B8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5573   0013BC  EF06  F00A         	goto	l749
  5574   0013C0                     l751:
  5575   0013C0  A010               	btfss	___fladd@grs^0,0,c
  5576   0013C2  EFE5  F009         	goto	u2721
  5577   0013C6  EFE7  F009         	goto	u2720
  5578   0013CA                     u2721:
  5579   0013CA  EFED  F009         	goto	l2891
  5580   0013CE                     u2720:
  5581   0013CE  90D8               	bcf	status,0,c
  5582   0013D0  3010               	rrcf	___fladd@grs^0,w,c
  5583   0013D2  0901               	iorlw	1
  5584   0013D4  6E10               	movwf	___fladd@grs^0,c
  5585   0013D6  EFEF  F009         	goto	l2893
  5586   0013DA                     l2891:
  5587   0013DA  90D8               	bcf	status,0,c
  5588   0013DC  3210               	rrcf	___fladd@grs^0,f,c
  5589   0013DE                     l2893:
  5590   0013DE  A001               	btfss	___fladd@b^0,0,c
  5591   0013E0  EFF4  F009         	goto	u2731
  5592   0013E4  EFF6  F009         	goto	u2730
  5593   0013E8                     u2731:
  5594   0013E8  EFF7  F009         	goto	l2897
  5595   0013EC                     u2730:
  5596   0013EC  8E10               	bsf	___fladd@grs^0,7,c
  5597   0013EE                     l2897:
  5598   0013EE  3404               	rlcf	(___fladd@b+3)^0,w,c
  5599   0013F0  3204               	rrcf	(___fladd@b+3)^0,f,c
  5600   0013F2  3203               	rrcf	(___fladd@b+2)^0,f,c
  5601   0013F4  3202               	rrcf	(___fladd@b+1)^0,f,c
  5602   0013F6  3201               	rrcf	___fladd@b^0,f,c
  5603   0013F8  2A0F               	incf	___fladd@bexp^0,f,c
  5604   0013FA                     l750:
  5605   0013FA  500E               	movf	___fladd@aexp^0,w,c
  5606   0013FC  5C0F               	subwf	___fladd@bexp^0,w,c
  5607   0013FE  A0D8               	btfss	status,0,c
  5608   001400  EF04  F00A         	goto	u2741
  5609   001404  EF06  F00A         	goto	u2740
  5610   001408                     u2741:
  5611   001408  EFE0  F009         	goto	l751
  5612   00140C                     u2740:
  5613   00140C                     l749:
  5614   00140C  BC0D               	btfsc	___fladd@signs^0,6,c
  5615   00140E  EF0B  F00A         	goto	u2751
  5616   001412  EF0D  F00A         	goto	u2750
  5617   001416                     u2751:
  5618   001416  EF4D  F00A         	goto	l2925
  5619   00141A                     u2750:
  5620   00141A  500F               	movf	___fladd@bexp^0,w,c
  5621   00141C  A4D8               	btfss	status,2,c
  5622   00141E  EF13  F00A         	goto	u2761
  5623   001422  EF15  F00A         	goto	u2760
  5624   001426                     u2761:
  5625   001426  EF1F  F00A         	goto	l2907
  5626   00142A                     u2760:
  5627   00142A  0E00               	movlw	0
  5628   00142C  6E01               	movwf	?___fladd^0,c
  5629   00142E  0E00               	movlw	0
  5630   001430  6E02               	movwf	(?___fladd+1)^0,c
  5631   001432  0E00               	movlw	0
  5632   001434  6E03               	movwf	(?___fladd+2)^0,c
  5633   001436  0E00               	movlw	0
  5634   001438  6E04               	movwf	(?___fladd+3)^0,c
  5635   00143A  EF6E  F00B         	goto	l758
  5636   00143E                     l2907:
  5637   00143E  5005               	movf	___fladd@a^0,w,c
  5638   001440  2601               	addwf	___fladd@b^0,f,c
  5639   001442  5006               	movf	(___fladd@a+1)^0,w,c
  5640   001444  2202               	addwfc	(___fladd@b+1)^0,f,c
  5641   001446  5007               	movf	(___fladd@a+2)^0,w,c
  5642   001448  2203               	addwfc	(___fladd@b+2)^0,f,c
  5643   00144A  5008               	movf	(___fladd@a+3)^0,w,c
  5644   00144C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5645   00144E  A004               	btfss	(___fladd@b+3)^0,0,c
  5646   001450  EF2C  F00A         	goto	u2771
  5647   001454  EF2E  F00A         	goto	u2770
  5648   001458                     u2771:
  5649   001458  EFDA  F00A         	goto	l2961
  5650   00145C                     u2770:
  5651   00145C  A010               	btfss	___fladd@grs^0,0,c
  5652   00145E  EF33  F00A         	goto	u2781
  5653   001462  EF35  F00A         	goto	u2780
  5654   001466                     u2781:
  5655   001466  EF3B  F00A         	goto	l2915
  5656   00146A                     u2780:
  5657   00146A  90D8               	bcf	status,0,c
  5658   00146C  3010               	rrcf	___fladd@grs^0,w,c
  5659   00146E  0901               	iorlw	1
  5660   001470  6E10               	movwf	___fladd@grs^0,c
  5661   001472  EF3D  F00A         	goto	l2917
  5662   001476                     l2915:
  5663   001476  90D8               	bcf	status,0,c
  5664   001478  3210               	rrcf	___fladd@grs^0,f,c
  5665   00147A                     l2917:
  5666   00147A  A001               	btfss	___fladd@b^0,0,c
  5667   00147C  EF42  F00A         	goto	u2791
  5668   001480  EF44  F00A         	goto	u2790
  5669   001484                     u2791:
  5670   001484  EF45  F00A         	goto	l2921
  5671   001488                     u2790:
  5672   001488  8E10               	bsf	___fladd@grs^0,7,c
  5673   00148A                     l2921:
  5674   00148A  3404               	rlcf	(___fladd@b+3)^0,w,c
  5675   00148C  3204               	rrcf	(___fladd@b+3)^0,f,c
  5676   00148E  3203               	rrcf	(___fladd@b+2)^0,f,c
  5677   001490  3202               	rrcf	(___fladd@b+1)^0,f,c
  5678   001492  3201               	rrcf	___fladd@b^0,f,c
  5679   001494  2A0F               	incf	___fladd@bexp^0,f,c
  5680   001496  EFDA  F00A         	goto	l2961
  5681   00149A                     l2925:
  5682   00149A  5005               	movf	___fladd@a^0,w,c
  5683   00149C  5C01               	subwf	___fladd@b^0,w,c
  5684   00149E  5006               	movf	(___fladd@a+1)^0,w,c
  5685   0014A0  5802               	subwfb	(___fladd@b+1)^0,w,c
  5686   0014A2  5007               	movf	(___fladd@a+2)^0,w,c
  5687   0014A4  5803               	subwfb	(___fladd@b+2)^0,w,c
  5688   0014A6  5004               	movf	(___fladd@b+3)^0,w,c
  5689   0014A8  0A80               	xorlw	128
  5690   0014AA  6E09               	movwf	??___fladd^0,c
  5691   0014AC  5008               	movf	(___fladd@a+3)^0,w,c
  5692   0014AE  0A80               	xorlw	128
  5693   0014B0  5809               	subwfb	??___fladd^0,w,c
  5694   0014B2  B0D8               	btfsc	status,0,c
  5695   0014B4  EF5E  F00A         	goto	u2801
  5696   0014B8  EF60  F00A         	goto	u2800
  5697   0014BC                     u2801:
  5698   0014BC  EF8B  F00A         	goto	l2935
  5699   0014C0                     u2800:
  5700   0014C0  5001               	movf	___fladd@b^0,w,c
  5701   0014C2  5C05               	subwf	___fladd@a^0,w,c
  5702   0014C4  6E09               	movwf	??___fladd^0,c
  5703   0014C6  5002               	movf	(___fladd@b+1)^0,w,c
  5704   0014C8  5806               	subwfb	(___fladd@a+1)^0,w,c
  5705   0014CA  6E0A               	movwf	(??___fladd+1)^0,c
  5706   0014CC  5003               	movf	(___fladd@b+2)^0,w,c
  5707   0014CE  5807               	subwfb	(___fladd@a+2)^0,w,c
  5708   0014D0  6E0B               	movwf	(??___fladd+2)^0,c
  5709   0014D2  5004               	movf	(___fladd@b+3)^0,w,c
  5710   0014D4  5808               	subwfb	(___fladd@a+3)^0,w,c
  5711   0014D6  6E0C               	movwf	(??___fladd+3)^0,c
  5712   0014D8  0EFF               	movlw	255
  5713   0014DA  2409               	addwf	??___fladd^0,w,c
  5714   0014DC  6E01               	movwf	___fladd@b^0,c
  5715   0014DE  0EFF               	movlw	255
  5716   0014E0  200A               	addwfc	(??___fladd+1)^0,w,c
  5717   0014E2  6E02               	movwf	(___fladd@b+1)^0,c
  5718   0014E4  0EFF               	movlw	255
  5719   0014E6  200B               	addwfc	(??___fladd+2)^0,w,c
  5720   0014E8  6E03               	movwf	(___fladd@b+2)^0,c
  5721   0014EA  0EFF               	movlw	255
  5722   0014EC  200C               	addwfc	(??___fladd+3)^0,w,c
  5723   0014EE  6E04               	movwf	(___fladd@b+3)^0,c
  5724   0014F0  0E80               	movlw	128
  5725   0014F2  1A0D               	xorwf	___fladd@signs^0,f,c
  5726   0014F4  6C10               	negf	___fladd@grs^0,c
  5727   0014F6  5010               	movf	___fladd@grs^0,w,c
  5728   0014F8  A4D8               	btfss	status,2,c
  5729   0014FA  EF81  F00A         	goto	u2811
  5730   0014FE  EF83  F00A         	goto	u2810
  5731   001502                     u2811:
  5732   001502  EF93  F00A         	goto	l766
  5733   001506                     u2810:
  5734   001506  0E01               	movlw	1
  5735   001508  2601               	addwf	___fladd@b^0,f,c
  5736   00150A  0E00               	movlw	0
  5737   00150C  2202               	addwfc	(___fladd@b+1)^0,f,c
  5738   00150E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5739   001510  2204               	addwfc	(___fladd@b+3)^0,f,c
  5740   001512  EF93  F00A         	goto	l766
  5741   001516                     l2935:
  5742   001516  5005               	movf	___fladd@a^0,w,c
  5743   001518  5E01               	subwf	___fladd@b^0,f,c
  5744   00151A  5006               	movf	(___fladd@a+1)^0,w,c
  5745   00151C  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5746   00151E  5007               	movf	(___fladd@a+2)^0,w,c
  5747   001520  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5748   001522  5008               	movf	(___fladd@a+3)^0,w,c
  5749   001524  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5750   001526                     l766:
  5751   001526  5001               	movf	___fladd@b^0,w,c
  5752   001528  1002               	iorwf	(___fladd@b+1)^0,w,c
  5753   00152A  1003               	iorwf	(___fladd@b+2)^0,w,c
  5754   00152C  1004               	iorwf	(___fladd@b+3)^0,w,c
  5755   00152E  A4D8               	btfss	status,2,c
  5756   001530  EF9C  F00A         	goto	u2821
  5757   001534  EF9E  F00A         	goto	u2820
  5758   001538                     u2821:
  5759   001538  EFD3  F00A         	goto	l2959
  5760   00153C                     u2820:
  5761   00153C  5010               	movf	___fladd@grs^0,w,c
  5762   00153E  A4D8               	btfss	status,2,c
  5763   001540  EFA4  F00A         	goto	u2831
  5764   001544  EFA6  F00A         	goto	u2830
  5765   001548                     u2831:
  5766   001548  EFD3  F00A         	goto	l2959
  5767   00154C                     u2830:
  5768   00154C  0E00               	movlw	0
  5769   00154E  6E01               	movwf	?___fladd^0,c
  5770   001550  0E00               	movlw	0
  5771   001552  6E02               	movwf	(?___fladd+1)^0,c
  5772   001554  0E00               	movlw	0
  5773   001556  6E03               	movwf	(?___fladd+2)^0,c
  5774   001558  0E00               	movlw	0
  5775   00155A  6E04               	movwf	(?___fladd+3)^0,c
  5776   00155C  EF6E  F00B         	goto	l758
  5777   001560                     l2943:
  5778   001560  90D8               	bcf	status,0,c
  5779   001562  3601               	rlcf	___fladd@b^0,f,c
  5780   001564  3602               	rlcf	(___fladd@b+1)^0,f,c
  5781   001566  3603               	rlcf	(___fladd@b+2)^0,f,c
  5782   001568  3604               	rlcf	(___fladd@b+3)^0,f,c
  5783   00156A  AE10               	btfss	___fladd@grs^0,7,c
  5784   00156C  EFBA  F00A         	goto	u2841
  5785   001570  EFBC  F00A         	goto	u2840
  5786   001574                     u2841:
  5787   001574  EFBD  F00A         	goto	l2949
  5788   001578                     u2840:
  5789   001578  8001               	bsf	___fladd@b^0,0,c
  5790   00157A                     l2949:
  5791   00157A  A010               	btfss	___fladd@grs^0,0,c
  5792   00157C  EFC2  F00A         	goto	u2851
  5793   001580  EFC4  F00A         	goto	u2850
  5794   001584                     u2851:
  5795   001584  EFC8  F00A         	goto	l2953
  5796   001588                     u2850:
  5797   001588  80D8               	bsf	status,0,c
  5798   00158A  3610               	rlcf	___fladd@grs^0,f,c
  5799   00158C  EFCA  F00A         	goto	l2955
  5800   001590                     l2953:
  5801   001590  90D8               	bcf	status,0,c
  5802   001592  3610               	rlcf	___fladd@grs^0,f,c
  5803   001594                     l2955:
  5804   001594  500F               	movf	___fladd@bexp^0,w,c
  5805   001596  B4D8               	btfsc	status,2,c
  5806   001598  EFD0  F00A         	goto	u2861
  5807   00159C  EFD2  F00A         	goto	u2860
  5808   0015A0                     u2861:
  5809   0015A0  EFD3  F00A         	goto	l2959
  5810   0015A4                     u2860:
  5811   0015A4  060F               	decf	___fladd@bexp^0,f,c
  5812   0015A6                     l2959:
  5813   0015A6  AE03               	btfss	(___fladd@b+2)^0,7,c
  5814   0015A8  EFD8  F00A         	goto	u2871
  5815   0015AC  EFDA  F00A         	goto	u2870
  5816   0015B0                     u2871:
  5817   0015B0  EFB0  F00A         	goto	l2943
  5818   0015B4                     u2870:
  5819   0015B4                     l2961:
  5820   0015B4  0E00               	movlw	0
  5821   0015B6  6E0E               	movwf	___fladd@aexp^0,c
  5822   0015B8  AE10               	btfss	___fladd@grs^0,7,c
  5823   0015BA  EFE1  F00A         	goto	u2881
  5824   0015BE  EFE3  F00A         	goto	u2880
  5825   0015C2                     u2881:
  5826   0015C2  EFFB  F00A         	goto	l775
  5827   0015C6                     u2880:
  5828   0015C6  C010  F009         	movff	___fladd@grs,??___fladd
  5829   0015CA  0E7F               	movlw	127
  5830   0015CC  1609               	andwf	??___fladd^0,f,c
  5831   0015CE  B4D8               	btfsc	status,2,c
  5832   0015D0  EFEC  F00A         	goto	u2891
  5833   0015D4  EFEE  F00A         	goto	u2890
  5834   0015D8                     u2891:
  5835   0015D8  EFF2  F00A         	goto	l776
  5836   0015DC                     u2890:
  5837   0015DC                     l2967:
  5838   0015DC  0E01               	movlw	1
  5839   0015DE  6E0E               	movwf	___fladd@aexp^0,c
  5840   0015E0  EFFB  F00A         	goto	l775
  5841   0015E4                     l776:
  5842   0015E4  A001               	btfss	___fladd@b^0,0,c
  5843   0015E6  EFF7  F00A         	goto	u2901
  5844   0015EA  EFF9  F00A         	goto	u2900
  5845   0015EE                     u2901:
  5846   0015EE  EFFB  F00A         	goto	l775
  5847   0015F2                     u2900:
  5848   0015F2  EFEE  F00A         	goto	l2967
  5849   0015F6                     l775:
  5850   0015F6  500E               	movf	___fladd@aexp^0,w,c
  5851   0015F8  B4D8               	btfsc	status,2,c
  5852   0015FA  EF01  F00B         	goto	u2911
  5853   0015FE  EF03  F00B         	goto	u2910
  5854   001602                     u2911:
  5855   001602  EF2E  F00B         	goto	l2979
  5856   001606                     u2910:
  5857   001606  0E01               	movlw	1
  5858   001608  2601               	addwf	___fladd@b^0,f,c
  5859   00160A  0E00               	movlw	0
  5860   00160C  2202               	addwfc	(___fladd@b+1)^0,f,c
  5861   00160E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5862   001610  2204               	addwfc	(___fladd@b+3)^0,f,c
  5863   001612  A004               	btfss	(___fladd@b+3)^0,0,c
  5864   001614  EF0E  F00B         	goto	u2921
  5865   001618  EF10  F00B         	goto	u2920
  5866   00161C                     u2921:
  5867   00161C  EF2E  F00B         	goto	l2979
  5868   001620                     u2920:
  5869   001620  C001  F009         	movff	___fladd@b,??___fladd
  5870   001624  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5871   001628  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5872   00162C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5873   001630  340C               	rlcf	(??___fladd+3)^0,w,c
  5874   001632  320C               	rrcf	(??___fladd+3)^0,f,c
  5875   001634  320B               	rrcf	(??___fladd+2)^0,f,c
  5876   001636  320A               	rrcf	(??___fladd+1)^0,f,c
  5877   001638  3209               	rrcf	??___fladd^0,f,c
  5878   00163A  C009  F001         	movff	??___fladd,___fladd@b
  5879   00163E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5880   001642  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5881   001646  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5882   00164A  280F               	incf	___fladd@bexp^0,w,c
  5883   00164C  B4D8               	btfsc	status,2,c
  5884   00164E  EF2B  F00B         	goto	u2931
  5885   001652  EF2D  F00B         	goto	u2930
  5886   001656                     u2931:
  5887   001656  EF2E  F00B         	goto	l2979
  5888   00165A                     u2930:
  5889   00165A  2A0F               	incf	___fladd@bexp^0,f,c
  5890   00165C                     l2979:
  5891   00165C  280F               	incf	___fladd@bexp^0,w,c
  5892   00165E  B4D8               	btfsc	status,2,c
  5893   001660  EF34  F00B         	goto	u2941
  5894   001664  EF36  F00B         	goto	u2940
  5895   001668                     u2941:
  5896   001668  EF3E  F00B         	goto	l2983
  5897   00166C                     u2940:
  5898   00166C  500F               	movf	___fladd@bexp^0,w,c
  5899   00166E  A4D8               	btfss	status,2,c
  5900   001670  EF3C  F00B         	goto	u2951
  5901   001674  EF3E  F00B         	goto	u2950
  5902   001678                     u2951:
  5903   001678  EF50  F00B         	goto	l2987
  5904   00167C                     u2950:
  5905   00167C                     l2983:
  5906   00167C  0E00               	movlw	0
  5907   00167E  6E01               	movwf	___fladd@b^0,c
  5908   001680  0E00               	movlw	0
  5909   001682  6E02               	movwf	(___fladd@b+1)^0,c
  5910   001684  0E00               	movlw	0
  5911   001686  6E03               	movwf	(___fladd@b+2)^0,c
  5912   001688  0E00               	movlw	0
  5913   00168A  6E04               	movwf	(___fladd@b+3)^0,c
  5914   00168C  500F               	movf	___fladd@bexp^0,w,c
  5915   00168E  A4D8               	btfss	status,2,c
  5916   001690  EF4C  F00B         	goto	u2961
  5917   001694  EF4E  F00B         	goto	u2960
  5918   001698                     u2961:
  5919   001698  EF50  F00B         	goto	l2987
  5920   00169C                     u2960:
  5921   00169C  0E00               	movlw	0
  5922   00169E  6E0D               	movwf	___fladd@signs^0,c
  5923   0016A0                     l2987:
  5924   0016A0  A00F               	btfss	___fladd@bexp^0,0,c
  5925   0016A2  EF55  F00B         	goto	u2971
  5926   0016A6  EF57  F00B         	goto	u2970
  5927   0016AA                     u2971:
  5928   0016AA  EF5A  F00B         	goto	l2991
  5929   0016AE                     u2970:
  5930   0016AE  8E03               	bsf	(___fladd@b+2)^0,7,c
  5931   0016B0  EF5B  F00B         	goto	l2993
  5932   0016B4                     l2991:
  5933   0016B4  9E03               	bcf	(___fladd@b+2)^0,7,c
  5934   0016B6                     l2993:
  5935   0016B6  90D8               	bcf	status,0,c
  5936   0016B8  300F               	rrcf	___fladd@bexp^0,w,c
  5937   0016BA  6E04               	movwf	(___fladd@b+3)^0,c
  5938   0016BC  AE0D               	btfss	___fladd@signs^0,7,c
  5939   0016BE  EF63  F00B         	goto	u2981
  5940   0016C2  EF65  F00B         	goto	u2980
  5941   0016C6                     u2981:
  5942   0016C6  EF66  F00B         	goto	l2999
  5943   0016CA                     u2980:
  5944   0016CA  8E04               	bsf	(___fladd@b+3)^0,7,c
  5945   0016CC                     l2999:
  5946   0016CC  C001  F001         	movff	___fladd@b,?___fladd
  5947   0016D0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5948   0016D4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5949   0016D8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5950   0016DC                     l758:
  5951   0016DC  0012               	return		;funcret
  5952   0016DE                     __end_of___fladd:
  5953                           	callstack 0
  5954                           
  5955 ;; *************** function ___flneg *****************
  5956 ;; Defined at:
  5957 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  f1              4    0[COMRAM] unsigned char 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  4    0[COMRAM] unsigned char 
  5964 ;; Registers used:
  5965 ;;		wreg, status,2, status,0
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5971 ;;      Params:         4       0       0       0       0       0       0       0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5974 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5975 ;;Total ram usage:        4 bytes
  5976 ;; Hardware stack levels used: 1
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		_efgtoa
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text25
  5985   0038A0                     __ptext25:
  5986                           	callstack 0
  5987   0038A0                     ___flneg:
  5988                           	callstack 25
  5989   0038A0  5001               	movf	___flneg@f1^0,w,c
  5990   0038A2  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5991   0038A4  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5992   0038A6  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5993   0038A8  B4D8               	btfsc	status,2,c
  5994   0038AA  EF59  F01C         	goto	u3621
  5995   0038AE  EF5B  F01C         	goto	u3620
  5996   0038B2                     u3621:
  5997   0038B2  EF63  F01C         	goto	l3413
  5998   0038B6                     u3620:
  5999   0038B6  0E00               	movlw	0
  6000   0038B8  1A01               	xorwf	___flneg@f1^0,f,c
  6001   0038BA  0E00               	movlw	0
  6002   0038BC  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6003   0038BE  0E00               	movlw	0
  6004   0038C0  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6005   0038C2  0E80               	movlw	128
  6006   0038C4  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6007   0038C6                     l3413:
  6008   0038C6  C001  F001         	movff	___flneg@f1,?___flneg
  6009   0038CA  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6010   0038CE  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6011   0038D2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6012   0038D6  0012               	return		;funcret
  6013   0038D8                     __end_of___flneg:
  6014                           	callstack 0
  6015                           
  6016 ;; *************** function ___flge *****************
  6017 ;; Defined at:
  6018 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  ff1             4   39[COMRAM] unsigned char 
  6021 ;;  ff2             4   43[COMRAM] unsigned char 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;		None               void
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6033 ;;      Params:         8       0       0       0       0       0       0       0       0
  6034 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6035 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6036 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6037 ;;Total ram usage:       12 bytes
  6038 ;; Hardware stack levels used: 1
  6039 ;; This function calls:
  6040 ;;		Nothing
  6041 ;; This function is called by:
  6042 ;;		_efgtoa
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text26
  6047   002C94                     __ptext26:
  6048                           	callstack 0
  6049   002C94                     ___flge:
  6050                           	callstack 25
  6051   002C94  0E00               	movlw	0
  6052   002C96  1428               	andwf	___flge@ff1^0,w,c
  6053   002C98  6E30               	movwf	??___flge^0,c
  6054   002C9A  0E00               	movlw	0
  6055   002C9C  1429               	andwf	(___flge@ff1+1)^0,w,c
  6056   002C9E  6E31               	movwf	(??___flge+1)^0,c
  6057   002CA0  0E80               	movlw	128
  6058   002CA2  142A               	andwf	(___flge@ff1+2)^0,w,c
  6059   002CA4  6E32               	movwf	(??___flge+2)^0,c
  6060   002CA6  0E7F               	movlw	127
  6061   002CA8  142B               	andwf	(___flge@ff1+3)^0,w,c
  6062   002CAA  6E33               	movwf	(??___flge+3)^0,c
  6063   002CAC  5030               	movf	??___flge^0,w,c
  6064   002CAE  1031               	iorwf	(??___flge+1)^0,w,c
  6065   002CB0  1032               	iorwf	(??___flge+2)^0,w,c
  6066   002CB2  1033               	iorwf	(??___flge+3)^0,w,c
  6067   002CB4  A4D8               	btfss	status,2,c
  6068   002CB6  EF5F  F016         	goto	u3571
  6069   002CBA  EF61  F016         	goto	u3570
  6070   002CBE                     u3571:
  6071   002CBE  EF69  F016         	goto	l3391
  6072   002CC2                     u3570:
  6073   002CC2  0E00               	movlw	0
  6074   002CC4  6E28               	movwf	___flge@ff1^0,c
  6075   002CC6  0E00               	movlw	0
  6076   002CC8  6E29               	movwf	(___flge@ff1+1)^0,c
  6077   002CCA  0E00               	movlw	0
  6078   002CCC  6E2A               	movwf	(___flge@ff1+2)^0,c
  6079   002CCE  0E00               	movlw	0
  6080   002CD0  6E2B               	movwf	(___flge@ff1+3)^0,c
  6081   002CD2                     l3391:
  6082   002CD2  0E00               	movlw	0
  6083   002CD4  142C               	andwf	___flge@ff2^0,w,c
  6084   002CD6  6E30               	movwf	??___flge^0,c
  6085   002CD8  0E00               	movlw	0
  6086   002CDA  142D               	andwf	(___flge@ff2+1)^0,w,c
  6087   002CDC  6E31               	movwf	(??___flge+1)^0,c
  6088   002CDE  0E80               	movlw	128
  6089   002CE0  142E               	andwf	(___flge@ff2+2)^0,w,c
  6090   002CE2  6E32               	movwf	(??___flge+2)^0,c
  6091   002CE4  0E7F               	movlw	127
  6092   002CE6  142F               	andwf	(___flge@ff2+3)^0,w,c
  6093   002CE8  6E33               	movwf	(??___flge+3)^0,c
  6094   002CEA  5030               	movf	??___flge^0,w,c
  6095   002CEC  1031               	iorwf	(??___flge+1)^0,w,c
  6096   002CEE  1032               	iorwf	(??___flge+2)^0,w,c
  6097   002CF0  1033               	iorwf	(??___flge+3)^0,w,c
  6098   002CF2  A4D8               	btfss	status,2,c
  6099   002CF4  EF7E  F016         	goto	u3581
  6100   002CF8  EF80  F016         	goto	u3580
  6101   002CFC                     u3581:
  6102   002CFC  EF88  F016         	goto	l3395
  6103   002D00                     u3580:
  6104   002D00  0E00               	movlw	0
  6105   002D02  6E2C               	movwf	___flge@ff2^0,c
  6106   002D04  0E00               	movlw	0
  6107   002D06  6E2D               	movwf	(___flge@ff2+1)^0,c
  6108   002D08  0E00               	movlw	0
  6109   002D0A  6E2E               	movwf	(___flge@ff2+2)^0,c
  6110   002D0C  0E00               	movlw	0
  6111   002D0E  6E2F               	movwf	(___flge@ff2+3)^0,c
  6112   002D10                     l3395:
  6113   002D10  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6114   002D12  EF8D  F016         	goto	u3591
  6115   002D16  EF8F  F016         	goto	u3590
  6116   002D1A                     u3591:
  6117   002D1A  EF98  F016         	goto	l3399
  6118   002D1E                     u3590:
  6119   002D1E  6C28               	negf	___flge@ff1^0,c
  6120   002D20  1E29               	comf	(___flge@ff1+1)^0,f,c
  6121   002D22  B0D8               	btfsc	status,0,c
  6122   002D24  2A29               	incf	(___flge@ff1+1)^0,f,c
  6123   002D26  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6124   002D28  B0D8               	btfsc	status,0,c
  6125   002D2A  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6126   002D2C  0E80               	movlw	128
  6127   002D2E  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6128   002D30                     l3399:
  6129   002D30  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6130   002D32  EF9D  F016         	goto	u3601
  6131   002D36  EF9F  F016         	goto	u3600
  6132   002D3A                     u3601:
  6133   002D3A  EFA8  F016         	goto	l486
  6134   002D3E                     u3600:
  6135   002D3E  6C2C               	negf	___flge@ff2^0,c
  6136   002D40  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6137   002D42  B0D8               	btfsc	status,0,c
  6138   002D44  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6139   002D46  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6140   002D48  B0D8               	btfsc	status,0,c
  6141   002D4A  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6142   002D4C  0E80               	movlw	128
  6143   002D4E  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6144   002D50                     l486:
  6145   002D50  0E00               	movlw	0
  6146   002D52  1A28               	xorwf	___flge@ff1^0,f,c
  6147   002D54  0E00               	movlw	0
  6148   002D56  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6149   002D58  0E00               	movlw	0
  6150   002D5A  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6151   002D5C  0E80               	movlw	128
  6152   002D5E  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6153   002D60  0E00               	movlw	0
  6154   002D62  1A2C               	xorwf	___flge@ff2^0,f,c
  6155   002D64  0E00               	movlw	0
  6156   002D66  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6157   002D68  0E00               	movlw	0
  6158   002D6A  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6159   002D6C  0E80               	movlw	128
  6160   002D6E  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6161   002D70  502C               	movf	___flge@ff2^0,w,c
  6162   002D72  5C28               	subwf	___flge@ff1^0,w,c
  6163   002D74  502D               	movf	(___flge@ff2+1)^0,w,c
  6164   002D76  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6165   002D78  502E               	movf	(___flge@ff2+2)^0,w,c
  6166   002D7A  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6167   002D7C  502F               	movf	(___flge@ff2+3)^0,w,c
  6168   002D7E  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6169   002D80  B0D8               	btfsc	status,0,c
  6170   002D82  EFC5  F016         	goto	u3611
  6171   002D86  EFC7  F016         	goto	u3610
  6172   002D8A                     u3611:
  6173   002D8A  EFCA  F016         	goto	l3405
  6174   002D8E                     u3610:
  6175   002D8E  90D8               	bcf	status,0,c
  6176   002D90  EFCB  F016         	goto	l491
  6177   002D94                     l3405:
  6178   002D94  80D8               	bsf	status,0,c
  6179   002D96                     l491:
  6180   002D96  0012               	return		;funcret
  6181   002D98                     __end_of___flge:
  6182                           	callstack 0
  6183                           
  6184 ;; *************** function ___fleq *****************
  6185 ;; Defined at:
  6186 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;  ff1             4    0[COMRAM] unsigned char 
  6189 ;;  ff2             4    4[COMRAM] unsigned char 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;		None
  6192 ;; Return value:  Size  Location     Type
  6193 ;;		None               void
  6194 ;; Registers used:
  6195 ;;		wreg, status,2, status,0
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6201 ;;      Params:         8       0       0       0       0       0       0       0       0
  6202 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6203 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6204 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6205 ;;Total ram usage:       12 bytes
  6206 ;; Hardware stack levels used: 1
  6207 ;; This function calls:
  6208 ;;		Nothing
  6209 ;; This function is called by:
  6210 ;;		_efgtoa
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text27
  6215   00319A                     __ptext27:
  6216                           	callstack 0
  6217   00319A                     ___fleq:
  6218                           	callstack 25
  6219   00319A  0E00               	movlw	0
  6220   00319C  1401               	andwf	___fleq@ff1^0,w,c
  6221   00319E  6E09               	movwf	??___fleq^0,c
  6222   0031A0  0E00               	movlw	0
  6223   0031A2  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6224   0031A4  6E0A               	movwf	(??___fleq+1)^0,c
  6225   0031A6  0E80               	movlw	128
  6226   0031A8  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6227   0031AA  6E0B               	movwf	(??___fleq+2)^0,c
  6228   0031AC  0E7F               	movlw	127
  6229   0031AE  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6230   0031B0  6E0C               	movwf	(??___fleq+3)^0,c
  6231   0031B2  5009               	movf	??___fleq^0,w,c
  6232   0031B4  100A               	iorwf	(??___fleq+1)^0,w,c
  6233   0031B6  100B               	iorwf	(??___fleq+2)^0,w,c
  6234   0031B8  100C               	iorwf	(??___fleq+3)^0,w,c
  6235   0031BA  A4D8               	btfss	status,2,c
  6236   0031BC  EFE2  F018         	goto	u3541
  6237   0031C0  EFE4  F018         	goto	u3540
  6238   0031C4                     u3541:
  6239   0031C4  EFEC  F018         	goto	l3375
  6240   0031C8                     u3540:
  6241   0031C8  0E00               	movlw	0
  6242   0031CA  6E01               	movwf	___fleq@ff1^0,c
  6243   0031CC  0E00               	movlw	0
  6244   0031CE  6E02               	movwf	(___fleq@ff1+1)^0,c
  6245   0031D0  0E00               	movlw	0
  6246   0031D2  6E03               	movwf	(___fleq@ff1+2)^0,c
  6247   0031D4  0E00               	movlw	0
  6248   0031D6  6E04               	movwf	(___fleq@ff1+3)^0,c
  6249   0031D8                     l3375:
  6250   0031D8  0E00               	movlw	0
  6251   0031DA  1405               	andwf	___fleq@ff2^0,w,c
  6252   0031DC  6E09               	movwf	??___fleq^0,c
  6253   0031DE  0E00               	movlw	0
  6254   0031E0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6255   0031E2  6E0A               	movwf	(??___fleq+1)^0,c
  6256   0031E4  0E80               	movlw	128
  6257   0031E6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6258   0031E8  6E0B               	movwf	(??___fleq+2)^0,c
  6259   0031EA  0E7F               	movlw	127
  6260   0031EC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6261   0031EE  6E0C               	movwf	(??___fleq+3)^0,c
  6262   0031F0  5009               	movf	??___fleq^0,w,c
  6263   0031F2  100A               	iorwf	(??___fleq+1)^0,w,c
  6264   0031F4  100B               	iorwf	(??___fleq+2)^0,w,c
  6265   0031F6  100C               	iorwf	(??___fleq+3)^0,w,c
  6266   0031F8  A4D8               	btfss	status,2,c
  6267   0031FA  EF01  F019         	goto	u3551
  6268   0031FE  EF03  F019         	goto	u3550
  6269   003202                     u3551:
  6270   003202  EF0B  F019         	goto	l3379
  6271   003206                     u3550:
  6272   003206  0E00               	movlw	0
  6273   003208  6E05               	movwf	___fleq@ff2^0,c
  6274   00320A  0E00               	movlw	0
  6275   00320C  6E06               	movwf	(___fleq@ff2+1)^0,c
  6276   00320E  0E00               	movlw	0
  6277   003210  6E07               	movwf	(___fleq@ff2+2)^0,c
  6278   003212  0E00               	movlw	0
  6279   003214  6E08               	movwf	(___fleq@ff2+3)^0,c
  6280   003216                     l3379:
  6281   003216  5005               	movf	___fleq@ff2^0,w,c
  6282   003218  1801               	xorwf	___fleq@ff1^0,w,c
  6283   00321A  E10F               	bnz	u3560
  6284   00321C  5006               	movf	(___fleq@ff2+1)^0,w,c
  6285   00321E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6286   003220  E10C               	bnz	u3560
  6287   003222  5007               	movf	(___fleq@ff2+2)^0,w,c
  6288   003224  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6289   003226  E109               	bnz	u3560
  6290   003228  5008               	movf	(___fleq@ff2+3)^0,w,c
  6291   00322A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6292   00322C  B4D8               	btfsc	status,2,c
  6293   00322E  EF1B  F019         	goto	u3561
  6294   003232  EF1D  F019         	goto	u3560
  6295   003236                     u3561:
  6296   003236  EF20  F019         	goto	l3383
  6297   00323A                     u3560:
  6298   00323A  90D8               	bcf	status,0,c
  6299   00323C  EF21  F019         	goto	l480
  6300   003240                     l3383:
  6301   003240  80D8               	bsf	status,0,c
  6302   003242                     l480:
  6303   003242  0012               	return		;funcret
  6304   003244                     __end_of___fleq:
  6305                           	callstack 0
  6306                           
  6307 ;; *************** function _dtoa *****************
  6308 ;; Defined at:
  6309 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  6312 ;;		 -> sprintf@f(12), 
  6313 ;;  d               2   31[COMRAM] int 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  i               2   39[COMRAM] int 
  6316 ;;  w               2   37[COMRAM] int 
  6317 ;;  p               2   35[COMRAM] int 
  6318 ;;  s               1   41[COMRAM] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6328 ;;      Params:         4       0       0       0       0       0       0       0       0
  6329 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6331 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6332 ;;Total ram usage:       13 bytes
  6333 ;; Hardware stack levels used: 1
  6334 ;; Hardware stack levels required when called: 5
  6335 ;; This function calls:
  6336 ;;		___awdiv
  6337 ;;		___awmod
  6338 ;;		_abs
  6339 ;;		_pad
  6340 ;; This function is called by:
  6341 ;;		_vfpfcnvrt
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text28
  6346   0027A4                     __ptext28:
  6347                           	callstack 0
  6348   0027A4                     _dtoa:
  6349                           	callstack 21
  6350   0027A4                     
  6351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  6352   0027A4  BE21               	btfsc	(dtoa@d+1)^0,7,c
  6353   0027A6  EFD7  F013         	goto	u3941
  6354   0027AA  EFDA  F013         	goto	u3940
  6355   0027AE                     u3941:
  6356   0027AE  0E01               	movlw	1
  6357   0027B0  EFDB  F013         	goto	u3950
  6358   0027B4                     u3940:
  6359   0027B4  0E00               	movlw	0
  6360   0027B6                     u3950:
  6361   0027B6  6E2A               	movwf	dtoa@s^0,c
  6362   0027B8                     
  6363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  6364   0027B8  502A               	movf	dtoa@s^0,w,c
  6365   0027BA  B4D8               	btfsc	status,2,c
  6366   0027BC  EFE2  F013         	goto	u3961
  6367   0027C0  EFE4  F013         	goto	u3960
  6368   0027C4                     u3961:
  6369   0027C4  EFE8  F013         	goto	l3555
  6370   0027C8                     u3960:
  6371   0027C8                     
  6372                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  6373   0027C8  6C20               	negf	dtoa@d^0,c
  6374   0027CA  1E21               	comf	(dtoa@d+1)^0,f,c
  6375   0027CC  B0D8               	btfsc	status,0,c
  6376   0027CE  2A21               	incf	(dtoa@d+1)^0,f,c
  6377   0027D0                     l3555:
  6378                           
  6379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  6380   0027D0  0100               	movlb	0	; () banked
  6381   0027D2  BFE2               	btfsc	(_prec+1)& (0+255),7,b
  6382   0027D4  EFF0  F013         	goto	u3970
  6383   0027D8  EFEE  F013         	goto	u3971
  6384   0027DC                     u3971:
  6385   0027DC  EFF6  F013         	goto	l940
  6386   0027E0                     u3970:
  6387   0027E0                     
  6388                           ; BSR set to: 0
  6389   0027E0  0E00               	movlw	0
  6390   0027E2  6E25               	movwf	(dtoa@p+1)^0,c
  6391   0027E4  0E01               	movlw	1
  6392   0027E6  6E24               	movwf	dtoa@p^0,c
  6393   0027E8  EFFA  F013         	goto	l942
  6394   0027EC                     l940:
  6395                           
  6396                           ; BSR set to: 0
  6397   0027EC  C0E1  F024         	movff	_prec,dtoa@p
  6398   0027F0  C0E2  F025         	movff	_prec+1,dtoa@p+1
  6399   0027F4                     l942:
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  6403   0027F4  C0DF  F026         	movff	_width,dtoa@w
  6404   0027F8  C0E0  F027         	movff	_width+1,dtoa@w+1
  6405   0027FC                     
  6406                           ; BSR set to: 0
  6407                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  6408   0027FC  502A               	movf	dtoa@s^0,w,c
  6409   0027FE  B4D8               	btfsc	status,2,c
  6410   002800  EF04  F014         	goto	u3981
  6411   002804  EF06  F014         	goto	u3980
  6412   002808                     u3981:
  6413   002808  EF1D  F014         	goto	l943
  6414   00280C                     u3980:
  6415   00280C                     
  6416                           ; BSR set to: 0
  6417                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  6418   00280C  0626               	decf	dtoa@w^0,f,c
  6419   00280E  A0D8               	btfss	status,0,c
  6420   002810  0627               	decf	(dtoa@w+1)^0,f,c
  6421   002812                     
  6422                           ; BSR set to: 0
  6423                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  6424   002812  502A               	movf	dtoa@s^0,w,c
  6425   002814  A4D8               	btfss	status,2,c
  6426   002816  EF0F  F014         	goto	u3991
  6427   00281A  EF11  F014         	goto	u3990
  6428   00281E                     u3991:
  6429   00281E  EF17  F014         	goto	l3567
  6430   002822                     u3990:
  6431   002822                     
  6432                           ; BSR set to: 0
  6433   002822  0E00               	movlw	0
  6434   002824  6E23               	movwf	(_dtoa$1144+1)^0,c
  6435   002826  0E2B               	movlw	43
  6436   002828  6E22               	movwf	_dtoa$1144^0,c
  6437   00282A  EF1B  F014         	goto	l3569
  6438   00282E                     l3567:
  6439                           
  6440                           ; BSR set to: 0
  6441   00282E  0E00               	movlw	0
  6442   002830  6E23               	movwf	(_dtoa$1144+1)^0,c
  6443   002832  0E2D               	movlw	45
  6444   002834  6E22               	movwf	_dtoa$1144^0,c
  6445   002836                     l3569:
  6446                           
  6447                           ; BSR set to: 0
  6448   002836  C022  F02A         	movff	_dtoa$1144,dtoa@s
  6449   00283A                     l943:
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  6453   00283A  0E00               	movlw	0
  6454   00283C  6E29               	movwf	(dtoa@i+1)^0,c
  6455   00283E  0E4F               	movlw	79
  6456   002840  6E28               	movwf	dtoa@i^0,c
  6457   002842                     
  6458                           ; BSR set to: 0
  6459                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  6460   002842  0E00               	movlw	0
  6461   002844  0101               	movlb	1	; () banked
  6462   002846  6FF3               	movwf	(_dbuf+79)& (0+255),b
  6463                           
  6464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  6465   002848  EF56  F014         	goto	l3583
  6466   00284C                     l3573:
  6467                           
  6468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  6469   00284C  0628               	decf	dtoa@i^0,f,c
  6470   00284E  A0D8               	btfss	status,0,c
  6471   002850  0629               	decf	(dtoa@i+1)^0,f,c
  6472   002852                     
  6473                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6474   002852  0EA4               	movlw	low _dbuf
  6475   002854  2428               	addwf	dtoa@i^0,w,c
  6476   002856  6ED9               	movwf	fsr2l,c
  6477   002858  0E01               	movlw	high _dbuf
  6478   00285A  2029               	addwfc	(dtoa@i+1)^0,w,c
  6479   00285C  6EDA               	movwf	fsr2h,c
  6480   00285E  C020  F001         	movff	dtoa@d,___awmod@dividend
  6481   002862  C021  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6482   002866  0E00               	movlw	0
  6483   002868  6E04               	movwf	(___awmod@divisor+1)^0,c
  6484   00286A  0E0A               	movlw	10
  6485   00286C  6E03               	movwf	___awmod@divisor^0,c
  6486   00286E  EC75  F018         	call	___awmod	;wreg free
  6487   002872  C001  F007         	movff	?___awmod,abs@a
  6488   002876  C002  F008         	movff	?___awmod+1,abs@a+1
  6489   00287A  EC30  F01C         	call	_abs	;wreg free
  6490   00287E  5007               	movf	?_abs^0,w,c
  6491   002880  0F30               	addlw	48
  6492   002882  6EDF               	movwf	indf2,c
  6493   002884                     
  6494                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  6495   002884  0624               	decf	dtoa@p^0,f,c
  6496   002886  A0D8               	btfss	status,0,c
  6497   002888  0625               	decf	(dtoa@p+1)^0,f,c
  6498   00288A                     
  6499                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  6500   00288A  0626               	decf	dtoa@w^0,f,c
  6501   00288C  A0D8               	btfss	status,0,c
  6502   00288E  0627               	decf	(dtoa@w+1)^0,f,c
  6503   002890                     
  6504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  6505   002890  C020  F001         	movff	dtoa@d,___awdiv@dividend
  6506   002894  C021  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6507   002898  0E00               	movlw	0
  6508   00289A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6509   00289C  0E0A               	movlw	10
  6510   00289E  6E03               	movwf	___awdiv@divisor^0,c
  6511   0028A0  EC13  F018         	call	___awdiv	;wreg free
  6512   0028A4  C001  F020         	movff	?___awdiv,dtoa@d
  6513   0028A8  C002  F021         	movff	?___awdiv+1,dtoa@d+1
  6514   0028AC                     l3583:
  6515                           
  6516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  6517   0028AC  BE29               	btfsc	(dtoa@i+1)^0,7,c
  6518   0028AE  EF61  F014         	goto	u4001
  6519   0028B2  5029               	movf	(dtoa@i+1)^0,w,c
  6520   0028B4  E108               	bnz	u4000
  6521   0028B6  0428               	decf	dtoa@i^0,w,c
  6522   0028B8  A0D8               	btfss	status,0,c
  6523   0028BA  EF61  F014         	goto	u4001
  6524   0028BE  EF63  F014         	goto	u4000
  6525   0028C2                     u4001:
  6526   0028C2  EF79  F014         	goto	l3589
  6527   0028C6                     u4000:
  6528   0028C6  5020               	movf	dtoa@d^0,w,c
  6529   0028C8  1021               	iorwf	(dtoa@d+1)^0,w,c
  6530   0028CA  A4D8               	btfss	status,2,c
  6531   0028CC  EF6A  F014         	goto	u4011
  6532   0028D0  EF6C  F014         	goto	u4010
  6533   0028D4                     u4011:
  6534   0028D4  EF26  F014         	goto	l3573
  6535   0028D8                     u4010:
  6536   0028D8  BE25               	btfsc	(dtoa@p+1)^0,7,c
  6537   0028DA  EF79  F014         	goto	u4020
  6538   0028DE  5025               	movf	(dtoa@p+1)^0,w,c
  6539   0028E0  E106               	bnz	u4021
  6540   0028E2  0424               	decf	dtoa@p^0,w,c
  6541   0028E4  B0D8               	btfsc	status,0,c
  6542   0028E6  EF77  F014         	goto	u4021
  6543   0028EA  EF79  F014         	goto	u4020
  6544   0028EE                     u4021:
  6545   0028EE  EF26  F014         	goto	l3573
  6546   0028F2                     u4020:
  6547   0028F2                     l3589:
  6548                           
  6549                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  6550   0028F2  502A               	movf	dtoa@s^0,w,c
  6551   0028F4  B4D8               	btfsc	status,2,c
  6552   0028F6  EF7F  F014         	goto	u4031
  6553   0028FA  EF81  F014         	goto	u4030
  6554   0028FE                     u4031:
  6555   0028FE  EF8C  F014         	goto	l3595
  6556   002902                     u4030:
  6557   002902                     
  6558                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  6559   002902  0628               	decf	dtoa@i^0,f,c
  6560   002904  A0D8               	btfss	status,0,c
  6561   002906  0629               	decf	(dtoa@i+1)^0,f,c
  6562   002908                     
  6563                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  6564   002908  0EA4               	movlw	low _dbuf
  6565   00290A  2428               	addwf	dtoa@i^0,w,c
  6566   00290C  6ED9               	movwf	fsr2l,c
  6567   00290E  0E01               	movlw	high _dbuf
  6568   002910  2029               	addwfc	(dtoa@i+1)^0,w,c
  6569   002912  6EDA               	movwf	fsr2h,c
  6570   002914  C02A  FFDF         	movff	dtoa@s,indf2
  6571   002918                     l3595:
  6572                           
  6573                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6574   002918  C01E  F013         	movff	dtoa@fp,pad@fp
  6575   00291C  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  6576   002920  0EA4               	movlw	low _dbuf
  6577   002922  2428               	addwf	dtoa@i^0,w,c
  6578   002924  6E15               	movwf	pad@buf^0,c
  6579   002926  0E01               	movlw	high _dbuf
  6580   002928  2029               	addwfc	(dtoa@i+1)^0,w,c
  6581   00292A  6E16               	movwf	(pad@buf+1)^0,c
  6582   00292C  C026  F017         	movff	dtoa@w,pad@p
  6583   002930  C027  F018         	movff	dtoa@w+1,pad@p+1
  6584   002934  ECE8  F019         	call	_pad	;wreg free
  6585   002938  0012               	return		;funcret
  6586   00293A                     __end_of_dtoa:
  6587                           	callstack 0
  6588                           
  6589 ;; *************** function _pad *****************
  6590 ;; Defined at:
  6591 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  6594 ;;		 -> sprintf@f(12), 
  6595 ;;  buf             2   20[COMRAM] PTR unsigned char 
  6596 ;;		 -> dbuf(80), 
  6597 ;;  p               2   22[COMRAM] int 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  w               2   27[COMRAM] int 
  6600 ;;  i               2   25[COMRAM] int 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  1    wreg      void 
  6603 ;; Registers used:
  6604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6610 ;;      Params:         6       0       0       0       0       0       0       0       0
  6611 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6612 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6613 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6614 ;;Total ram usage:       11 bytes
  6615 ;; Hardware stack levels used: 1
  6616 ;; Hardware stack levels required when called: 4
  6617 ;; This function calls:
  6618 ;;		_fputc
  6619 ;;		_fputs
  6620 ;; This function is called by:
  6621 ;;		_dtoa
  6622 ;;		_efgtoa
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text29
  6627   0033D0                     __ptext29:
  6628                           	callstack 0
  6629   0033D0                     _pad:
  6630                           	callstack 21
  6631   0033D0                     
  6632                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  6633   0033D0  BE18               	btfsc	(pad@p+1)^0,7,c
  6634   0033D2  EFED  F019         	goto	u3701
  6635   0033D6  EFEF  F019         	goto	u3700
  6636   0033DA                     u3701:
  6637   0033DA  EFF5  F019         	goto	l3465
  6638   0033DE                     u3700:
  6639   0033DE  C017  F01C         	movff	pad@p,pad@w
  6640   0033E2  C018  F01D         	movff	pad@p+1,pad@w+1
  6641   0033E6  EFF9  F019         	goto	l931
  6642   0033EA                     l3465:
  6643   0033EA  0E00               	movlw	0
  6644   0033EC  6E1D               	movwf	(pad@w+1)^0,c
  6645   0033EE  0E00               	movlw	0
  6646   0033F0  6E1C               	movwf	pad@w^0,c
  6647   0033F2                     l931:
  6648                           
  6649                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  6650   0033F2  0E00               	movlw	0
  6651   0033F4  6E1B               	movwf	(pad@i+1)^0,c
  6652   0033F6  0E00               	movlw	0
  6653   0033F8  6E1A               	movwf	pad@i^0,c
  6654                           
  6655                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  6656   0033FA  EF0B  F01A         	goto	l3471
  6657   0033FE                     l3467:
  6658                           
  6659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  6660   0033FE  0E00               	movlw	0
  6661   003400  6E04               	movwf	(fputc@c+1)^0,c
  6662   003402  0E20               	movlw	32
  6663   003404  6E03               	movwf	fputc@c^0,c
  6664   003406  C013  F005         	movff	pad@fp,fputc@fp
  6665   00340A  C014  F006         	movff	pad@fp+1,fputc@fp+1
  6666   00340E  EC4B  F017         	call	_fputc	;wreg free
  6667   003412                     
  6668                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  6669   003412  4A1A               	infsnz	pad@i^0,f,c
  6670   003414  2A1B               	incf	(pad@i+1)^0,f,c
  6671   003416                     l3471:
  6672                           
  6673                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  6674   003416  501C               	movf	pad@w^0,w,c
  6675   003418  5C1A               	subwf	pad@i^0,w,c
  6676   00341A  501B               	movf	(pad@i+1)^0,w,c
  6677   00341C  0A80               	xorlw	128
  6678   00341E  6E19               	movwf	??_pad^0,c
  6679   003420  501D               	movf	(pad@w+1)^0,w,c
  6680   003422  0A80               	xorlw	128
  6681   003424  5819               	subwfb	??_pad^0,w,c
  6682   003426  A0D8               	btfss	status,0,c
  6683   003428  EF18  F01A         	goto	u3711
  6684   00342C  EF1A  F01A         	goto	u3710
  6685   003430                     u3711:
  6686   003430  EFFF  F019         	goto	l3467
  6687   003434                     u3710:
  6688   003434                     
  6689                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  6690   003434  C015  F00C         	movff	pad@buf,fputs@s
  6691   003438  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6692   00343C  C013  F00E         	movff	pad@fp,fputs@fp
  6693   003440  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6694   003444  EC0E  F01C         	call	_fputs	;wreg free
  6695   003448  0012               	return		;funcret
  6696   00344A                     __end_of_pad:
  6697                           	callstack 0
  6698                           
  6699 ;; *************** function _fputs *****************
  6700 ;; Defined at:
  6701 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6704 ;;		 -> dbuf(80), 
  6705 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6706 ;;		 -> sprintf@f(12), 
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  i               2   16[COMRAM] int 
  6709 ;;  c               1   15[COMRAM] unsigned char 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  2   11[COMRAM] int 
  6712 ;; Registers used:
  6713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6719 ;;      Params:         4       0       0       0       0       0       0       0       0
  6720 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6722 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6723 ;;Total ram usage:        7 bytes
  6724 ;; Hardware stack levels used: 1
  6725 ;; Hardware stack levels required when called: 3
  6726 ;; This function calls:
  6727 ;;		_fputc
  6728 ;; This function is called by:
  6729 ;;		_pad
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text30
  6734   00381C                     __ptext30:
  6735                           	callstack 0
  6736   00381C                     _fputs:
  6737                           	callstack 21
  6738   00381C  0E00               	movlw	0
  6739   00381E  6E12               	movwf	(fputs@i+1)^0,c
  6740   003820  0E00               	movlw	0
  6741   003822  6E11               	movwf	fputs@i^0,c
  6742   003824  EF1F  F01C         	goto	l3009
  6743   003828                     l3005:
  6744   003828  C010  F003         	movff	fputs@c,fputc@c
  6745   00382C  6A04               	clrf	(fputc@c+1)^0,c
  6746   00382E  C00E  F005         	movff	fputs@fp,fputc@fp
  6747   003832  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  6748   003836  EC4B  F017         	call	_fputc	;wreg free
  6749   00383A  4A11               	infsnz	fputs@i^0,f,c
  6750   00383C  2A12               	incf	(fputs@i+1)^0,f,c
  6751   00383E                     l3009:
  6752   00383E  5011               	movf	fputs@i^0,w,c
  6753   003840  240C               	addwf	fputs@s^0,w,c
  6754   003842  6ED9               	movwf	fsr2l,c
  6755   003844  5012               	movf	(fputs@i+1)^0,w,c
  6756   003846  200D               	addwfc	(fputs@s+1)^0,w,c
  6757   003848  6EDA               	movwf	fsr2h,c
  6758   00384A  50DF               	movf	indf2,w,c
  6759   00384C  6E10               	movwf	fputs@c^0,c
  6760   00384E  5010               	movf	fputs@c^0,w,c
  6761   003850  A4D8               	btfss	status,2,c
  6762   003852  EF2D  F01C         	goto	u2991
  6763   003856  EF2F  F01C         	goto	u2990
  6764   00385A                     u2991:
  6765   00385A  EF14  F01C         	goto	l3005
  6766   00385E                     u2990:
  6767   00385E  0012               	return		;funcret
  6768   003860                     __end_of_fputs:
  6769                           	callstack 0
  6770                           
  6771 ;; *************** function _fputc *****************
  6772 ;; Defined at:
  6773 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  6774 ;; Parameters:    Size  Location     Type
  6775 ;;  c               2    2[COMRAM] int 
  6776 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  6777 ;;		 -> sprintf@f(12), 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;		None
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  2    2[COMRAM] int 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6789 ;;      Params:         4       0       0       0       0       0       0       0       0
  6790 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6791 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6792 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6793 ;;Total ram usage:        9 bytes
  6794 ;; Hardware stack levels used: 1
  6795 ;; Hardware stack levels required when called: 2
  6796 ;; This function calls:
  6797 ;;		_putch
  6798 ;; This function is called by:
  6799 ;;		_pad
  6800 ;;		_vfpfcnvrt
  6801 ;;		_fputs
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           	psect	text31
  6806   002E96                     __ptext31:
  6807                           	callstack 0
  6808   002E96                     _fputc:
  6809                           	callstack 24
  6810   002E96  5005               	movf	fputc@fp^0,w,c
  6811   002E98  1006               	iorwf	(fputc@fp+1)^0,w,c
  6812   002E9A  B4D8               	btfsc	status,2,c
  6813   002E9C  EF52  F017         	goto	u2561
  6814   002EA0  EF54  F017         	goto	u2560
  6815   002EA4                     u2561:
  6816   002EA4  EF5D  F017         	goto	l2791
  6817   002EA8                     u2560:
  6818   002EA8  5005               	movf	fputc@fp^0,w,c
  6819   002EAA  1006               	iorwf	(fputc@fp+1)^0,w,c
  6820   002EAC  A4D8               	btfss	status,2,c
  6821   002EAE  EF5B  F017         	goto	u2571
  6822   002EB2  EF5D  F017         	goto	u2570
  6823   002EB6                     u2571:
  6824   002EB6  EF62  F017         	goto	l2793
  6825   002EBA                     u2570:
  6826   002EBA                     l2791:
  6827   002EBA  5003               	movf	fputc@c^0,w,c
  6828   002EBC  EC04  F01D         	call	_putch
  6829   002EC0  EFAF  F017         	goto	l1100
  6830   002EC4                     l2793:
  6831   002EC4  EE20 F00A          	lfsr	2,10
  6832   002EC8  5005               	movf	fputc@fp^0,w,c
  6833   002ECA  26D9               	addwf	fsr2l,f,c
  6834   002ECC  5006               	movf	(fputc@fp+1)^0,w,c
  6835   002ECE  22DA               	addwfc	fsr2h,f,c
  6836   002ED0  50DE               	movf	postinc2,w,c
  6837   002ED2  10DE               	iorwf	postinc2,w,c
  6838   002ED4  B4D8               	btfsc	status,2,c
  6839   002ED6  EF6F  F017         	goto	u2581
  6840   002EDA  EF71  F017         	goto	u2580
  6841   002EDE                     u2581:
  6842   002EDE  EF8C  F017         	goto	l2797
  6843   002EE2                     u2580:
  6844   002EE2  EE20 F00A          	lfsr	2,10
  6845   002EE6  5005               	movf	fputc@fp^0,w,c
  6846   002EE8  26D9               	addwf	fsr2l,f,c
  6847   002EEA  5006               	movf	(fputc@fp+1)^0,w,c
  6848   002EEC  22DA               	addwfc	fsr2h,f,c
  6849   002EEE  EE10 F003          	lfsr	1,3
  6850   002EF2  5005               	movf	fputc@fp^0,w,c
  6851   002EF4  26E1               	addwf	fsr1l,f,c
  6852   002EF6  5006               	movf	(fputc@fp+1)^0,w,c
  6853   002EF8  22E2               	addwfc	fsr1h,f,c
  6854   002EFA  50DE               	movf	postinc2,w,c
  6855   002EFC  5CE6               	subwf	postinc1,w,c
  6856   002EFE  50E6               	movf	postinc1,w,c
  6857   002F00  0A80               	xorlw	128
  6858   002F02  6E0B               	movwf	(??_fputc+4)^0,c
  6859   002F04  50DE               	movf	postinc2,w,c
  6860   002F06  0A80               	xorlw	128
  6861   002F08  580B               	subwfb	(??_fputc+4)^0,w,c
  6862   002F0A  B0D8               	btfsc	status,0,c
  6863   002F0C  EF8A  F017         	goto	u2591
  6864   002F10  EF8C  F017         	goto	u2590
  6865   002F14                     u2591:
  6866   002F14  EFAF  F017         	goto	l1100
  6867   002F18                     u2590:
  6868   002F18                     l2797:
  6869   002F18  EE20 F003          	lfsr	2,3
  6870   002F1C  5005               	movf	fputc@fp^0,w,c
  6871   002F1E  26D9               	addwf	fsr2l,f,c
  6872   002F20  5006               	movf	(fputc@fp+1)^0,w,c
  6873   002F22  22DA               	addwfc	fsr2h,f,c
  6874   002F24  CFDE F007          	movff	postinc2,??_fputc
  6875   002F28  CFDD F008          	movff	postdec2,??_fputc+1
  6876   002F2C  C005  FFD9         	movff	fputc@fp,fsr2l
  6877   002F30  C006  FFDA         	movff	fputc@fp+1,fsr2h
  6878   002F34  CFDE F009          	movff	postinc2,??_fputc+2
  6879   002F38  CFDD F00A          	movff	postdec2,??_fputc+3
  6880   002F3C  5007               	movf	??_fputc^0,w,c
  6881   002F3E  2409               	addwf	(??_fputc+2)^0,w,c
  6882   002F40  6ED9               	movwf	fsr2l,c
  6883   002F42  5008               	movf	(??_fputc+1)^0,w,c
  6884   002F44  200A               	addwfc	(??_fputc+3)^0,w,c
  6885   002F46  6EDA               	movwf	fsr2h,c
  6886   002F48  C003  FFDF         	movff	fputc@c,indf2
  6887   002F4C  EE20 F003          	lfsr	2,3
  6888   002F50  5005               	movf	fputc@fp^0,w,c
  6889   002F52  26D9               	addwf	fsr2l,f,c
  6890   002F54  5006               	movf	(fputc@fp+1)^0,w,c
  6891   002F56  22DA               	addwfc	fsr2h,f,c
  6892   002F58  2ADE               	incf	postinc2,f,c
  6893   002F5A  0E00               	movlw	0
  6894   002F5C  22DD               	addwfc	postdec2,f,c
  6895   002F5E                     l1100:
  6896   002F5E  0012               	return		;funcret
  6897   002F60                     __end_of_fputc:
  6898                           	callstack 0
  6899                           
  6900 ;; *************** function _putch *****************
  6901 ;; Defined at:
  6902 ;;		line 91 in file "./UART.h"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  dato            1    wreg     unsigned char 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  dato            1    1[COMRAM] unsigned char 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  1    wreg      void 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6916 ;;      Params:         0       0       0       0       0       0       0       0       0
  6917 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6919 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6920 ;;Total ram usage:        1 bytes
  6921 ;; Hardware stack levels used: 1
  6922 ;; Hardware stack levels required when called: 1
  6923 ;; This function calls:
  6924 ;;		_UART_write
  6925 ;; This function is called by:
  6926 ;;		_fputc
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text32
  6931   003A08                     __ptext32:
  6932                           	callstack 0
  6933   003A08                     _putch:
  6934                           	callstack 24
  6935                           
  6936                           ;incstack = 0
  6937                           ;putch@dato stored from wreg
  6938   003A08  6E02               	movwf	putch@dato^0,c
  6939   003A0A                     
  6940                           ;./UART.h: 91: void putch(char dato);./UART.h: 92: {;./UART.h: 93:     UART_write(dato);
  6941   003A0A  5002               	movf	putch@dato^0,w,c
  6942   003A0C  ECEA  F01C         	call	_UART_write
  6943   003A10  0012               	return		;funcret
  6944   003A12                     __end_of_putch:
  6945                           	callstack 0
  6946                           
  6947 ;; *************** function _abs *****************
  6948 ;; Defined at:
  6949 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;  a               2    6[COMRAM] int 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;		None
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  2    6[COMRAM] int 
  6956 ;; Registers used:
  6957 ;;		wreg, status,2, status,0
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6963 ;;      Params:         2       0       0       0       0       0       0       0       0
  6964 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6965 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6966 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6967 ;;Total ram usage:        4 bytes
  6968 ;; Hardware stack levels used: 1
  6969 ;; This function calls:
  6970 ;;		Nothing
  6971 ;; This function is called by:
  6972 ;;		_dtoa
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text33
  6977   003860                     __ptext33:
  6978                           	callstack 0
  6979   003860                     _abs:
  6980                           	callstack 25
  6981   003860  BE08               	btfsc	(abs@a+1)^0,7,c
  6982   003862  EF3D  F01C         	goto	u3720
  6983   003866  5008               	movf	(abs@a+1)^0,w,c
  6984   003868  E106               	bnz	u3721
  6985   00386A  0407               	decf	abs@a^0,w,c
  6986   00386C  B0D8               	btfsc	status,0,c
  6987   00386E  EF3B  F01C         	goto	u3721
  6988   003872  EF3D  F01C         	goto	u3720
  6989   003876                     u3721:
  6990   003876  EF4B  F01C         	goto	l1059
  6991   00387A                     u3720:
  6992   00387A  C007  F009         	movff	abs@a,??_abs
  6993   00387E  C008  F00A         	movff	abs@a+1,??_abs+1
  6994   003882  1E09               	comf	??_abs^0,f,c
  6995   003884  1E0A               	comf	(??_abs+1)^0,f,c
  6996   003886  4A09               	infsnz	??_abs^0,f,c
  6997   003888  2A0A               	incf	(??_abs+1)^0,f,c
  6998   00388A  C009  F007         	movff	??_abs,?_abs
  6999   00388E  C00A  F008         	movff	??_abs+1,?_abs+1
  7000   003892  EF4F  F01C         	goto	l1062
  7001   003896                     l1059:
  7002   003896  C007  F007         	movff	abs@a,?_abs
  7003   00389A  C008  F008         	movff	abs@a+1,?_abs+1
  7004   00389E                     l1062:
  7005   00389E  0012               	return		;funcret
  7006   0038A0                     __end_of_abs:
  7007                           	callstack 0
  7008                           
  7009 ;; *************** function ___awmod *****************
  7010 ;; Defined at:
  7011 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  dividend        2    0[COMRAM] int 
  7014 ;;  divisor         2    2[COMRAM] int 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;  sign            1    5[COMRAM] unsigned char 
  7017 ;;  counter         1    4[COMRAM] unsigned char 
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  2    0[COMRAM] int 
  7020 ;; Registers used:
  7021 ;;		wreg, status,2, status,0
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7027 ;;      Params:         4       0       0       0       0       0       0       0       0
  7028 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7030 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7031 ;;Total ram usage:        6 bytes
  7032 ;; Hardware stack levels used: 1
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_dtoa
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text34
  7041   0030EA                     __ptext34:
  7042                           	callstack 0
  7043   0030EA                     ___awmod:
  7044                           	callstack 25
  7045   0030EA  0E00               	movlw	0
  7046   0030EC  6E06               	movwf	___awmod@sign^0,c
  7047   0030EE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7048   0030F0  EF7E  F018         	goto	u3480
  7049   0030F4  EF7C  F018         	goto	u3481
  7050   0030F8                     u3481:
  7051   0030F8  EF84  F018         	goto	l3343
  7052   0030FC                     u3480:
  7053   0030FC  6C01               	negf	___awmod@dividend^0,c
  7054   0030FE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7055   003100  B0D8               	btfsc	status,0,c
  7056   003102  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7057   003104  0E01               	movlw	1
  7058   003106  6E06               	movwf	___awmod@sign^0,c
  7059   003108                     l3343:
  7060   003108  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7061   00310A  EF8B  F018         	goto	u3490
  7062   00310E  EF89  F018         	goto	u3491
  7063   003112                     u3491:
  7064   003112  EF8F  F018         	goto	l3347
  7065   003116                     u3490:
  7066   003116  6C03               	negf	___awmod@divisor^0,c
  7067   003118  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7068   00311A  B0D8               	btfsc	status,0,c
  7069   00311C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7070   00311E                     l3347:
  7071   00311E  5003               	movf	___awmod@divisor^0,w,c
  7072   003120  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7073   003122  B4D8               	btfsc	status,2,c
  7074   003124  EF96  F018         	goto	u3501
  7075   003128  EF98  F018         	goto	u3500
  7076   00312C                     u3501:
  7077   00312C  EFBC  F018         	goto	l3363
  7078   003130                     u3500:
  7079   003130  0E01               	movlw	1
  7080   003132  6E05               	movwf	___awmod@counter^0,c
  7081   003134  EFA0  F018         	goto	l3353
  7082   003138                     l3351:
  7083   003138  90D8               	bcf	status,0,c
  7084   00313A  3603               	rlcf	___awmod@divisor^0,f,c
  7085   00313C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7086   00313E  2A05               	incf	___awmod@counter^0,f,c
  7087   003140                     l3353:
  7088   003140  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7089   003142  EFA5  F018         	goto	u3511
  7090   003146  EFA7  F018         	goto	u3510
  7091   00314A                     u3511:
  7092   00314A  EF9C  F018         	goto	l3351
  7093   00314E                     u3510:
  7094   00314E                     l3355:
  7095   00314E  5003               	movf	___awmod@divisor^0,w,c
  7096   003150  5C01               	subwf	___awmod@dividend^0,w,c
  7097   003152  5004               	movf	(___awmod@divisor+1)^0,w,c
  7098   003154  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7099   003156  A0D8               	btfss	status,0,c
  7100   003158  EFB0  F018         	goto	u3521
  7101   00315C  EFB2  F018         	goto	u3520
  7102   003160                     u3521:
  7103   003160  EFB6  F018         	goto	l3359
  7104   003164                     u3520:
  7105   003164  5003               	movf	___awmod@divisor^0,w,c
  7106   003166  5E01               	subwf	___awmod@dividend^0,f,c
  7107   003168  5004               	movf	(___awmod@divisor+1)^0,w,c
  7108   00316A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7109   00316C                     l3359:
  7110   00316C  90D8               	bcf	status,0,c
  7111   00316E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7112   003170  3203               	rrcf	___awmod@divisor^0,f,c
  7113   003172  2E05               	decfsz	___awmod@counter^0,f,c
  7114   003174  EFA7  F018         	goto	l3355
  7115   003178                     l3363:
  7116   003178  5006               	movf	___awmod@sign^0,w,c
  7117   00317A  B4D8               	btfsc	status,2,c
  7118   00317C  EFC2  F018         	goto	u3531
  7119   003180  EFC4  F018         	goto	u3530
  7120   003184                     u3531:
  7121   003184  EFC8  F018         	goto	l3367
  7122   003188                     u3530:
  7123   003188  6C01               	negf	___awmod@dividend^0,c
  7124   00318A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7125   00318C  B0D8               	btfsc	status,0,c
  7126   00318E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7127   003190                     l3367:
  7128   003190  C001  F001         	movff	___awmod@dividend,?___awmod
  7129   003194  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7130   003198  0012               	return		;funcret
  7131   00319A                     __end_of___awmod:
  7132                           	callstack 0
  7133                           
  7134 ;; *************** function ___awdiv *****************
  7135 ;; Defined at:
  7136 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  dividend        2    0[COMRAM] int 
  7139 ;;  divisor         2    2[COMRAM] int 
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;  quotient        2    6[COMRAM] int 
  7142 ;;  sign            1    5[COMRAM] unsigned char 
  7143 ;;  counter         1    4[COMRAM] unsigned char 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  2    0[COMRAM] int 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7153 ;;      Params:         4       0       0       0       0       0       0       0       0
  7154 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7156 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7157 ;;Total ram usage:        8 bytes
  7158 ;; Hardware stack levels used: 1
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		_dtoa
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text35
  7167   003026                     __ptext35:
  7168                           	callstack 0
  7169   003026                     ___awdiv:
  7170                           	callstack 25
  7171   003026  0E00               	movlw	0
  7172   003028  6E06               	movwf	___awdiv@sign^0,c
  7173   00302A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7174   00302C  EF1C  F018         	goto	u3420
  7175   003030  EF1A  F018         	goto	u3421
  7176   003034                     u3421:
  7177   003034  EF22  F018         	goto	l3299
  7178   003038                     u3420:
  7179   003038  6C03               	negf	___awdiv@divisor^0,c
  7180   00303A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7181   00303C  B0D8               	btfsc	status,0,c
  7182   00303E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7183   003040  0E01               	movlw	1
  7184   003042  6E06               	movwf	___awdiv@sign^0,c
  7185   003044                     l3299:
  7186   003044  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7187   003046  EF29  F018         	goto	u3430
  7188   00304A  EF27  F018         	goto	u3431
  7189   00304E                     u3431:
  7190   00304E  EF2F  F018         	goto	l3305
  7191   003052                     u3430:
  7192   003052  6C01               	negf	___awdiv@dividend^0,c
  7193   003054  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7194   003056  B0D8               	btfsc	status,0,c
  7195   003058  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7196   00305A  0E01               	movlw	1
  7197   00305C  1A06               	xorwf	___awdiv@sign^0,f,c
  7198   00305E                     l3305:
  7199   00305E  0E00               	movlw	0
  7200   003060  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7201   003062  0E00               	movlw	0
  7202   003064  6E07               	movwf	___awdiv@quotient^0,c
  7203   003066  5003               	movf	___awdiv@divisor^0,w,c
  7204   003068  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7205   00306A  B4D8               	btfsc	status,2,c
  7206   00306C  EF3A  F018         	goto	u3441
  7207   003070  EF3C  F018         	goto	u3440
  7208   003074                     u3441:
  7209   003074  EF64  F018         	goto	l3327
  7210   003078                     u3440:
  7211   003078  0E01               	movlw	1
  7212   00307A  6E05               	movwf	___awdiv@counter^0,c
  7213   00307C  EF44  F018         	goto	l3313
  7214   003080                     l3311:
  7215   003080  90D8               	bcf	status,0,c
  7216   003082  3603               	rlcf	___awdiv@divisor^0,f,c
  7217   003084  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7218   003086  2A05               	incf	___awdiv@counter^0,f,c
  7219   003088                     l3313:
  7220   003088  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7221   00308A  EF49  F018         	goto	u3451
  7222   00308E  EF4B  F018         	goto	u3450
  7223   003092                     u3451:
  7224   003092  EF40  F018         	goto	l3311
  7225   003096                     u3450:
  7226   003096                     l3315:
  7227   003096  90D8               	bcf	status,0,c
  7228   003098  3607               	rlcf	___awdiv@quotient^0,f,c
  7229   00309A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7230   00309C  5003               	movf	___awdiv@divisor^0,w,c
  7231   00309E  5C01               	subwf	___awdiv@dividend^0,w,c
  7232   0030A0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7233   0030A2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7234   0030A4  A0D8               	btfss	status,0,c
  7235   0030A6  EF57  F018         	goto	u3461
  7236   0030AA  EF59  F018         	goto	u3460
  7237   0030AE                     u3461:
  7238   0030AE  EF5E  F018         	goto	l3323
  7239   0030B2                     u3460:
  7240   0030B2  5003               	movf	___awdiv@divisor^0,w,c
  7241   0030B4  5E01               	subwf	___awdiv@dividend^0,f,c
  7242   0030B6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7243   0030B8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7244   0030BA  8007               	bsf	___awdiv@quotient^0,0,c
  7245   0030BC                     l3323:
  7246   0030BC  90D8               	bcf	status,0,c
  7247   0030BE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7248   0030C0  3203               	rrcf	___awdiv@divisor^0,f,c
  7249   0030C2  2E05               	decfsz	___awdiv@counter^0,f,c
  7250   0030C4  EF4B  F018         	goto	l3315
  7251   0030C8                     l3327:
  7252   0030C8  5006               	movf	___awdiv@sign^0,w,c
  7253   0030CA  B4D8               	btfsc	status,2,c
  7254   0030CC  EF6A  F018         	goto	u3471
  7255   0030D0  EF6C  F018         	goto	u3470
  7256   0030D4                     u3471:
  7257   0030D4  EF70  F018         	goto	l3331
  7258   0030D8                     u3470:
  7259   0030D8  6C07               	negf	___awdiv@quotient^0,c
  7260   0030DA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7261   0030DC  B0D8               	btfsc	status,0,c
  7262   0030DE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7263   0030E0                     l3331:
  7264   0030E0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7265   0030E4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7266   0030E8  0012               	return		;funcret
  7267   0030EA                     __end_of___awdiv:
  7268                           	callstack 0
  7269                           
  7270 ;; *************** function _VOLTAJE *****************
  7271 ;; Defined at:
  7272 ;;		line 34 in file "PARTE3_PARCIAL2.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  ADC             2   64[COMRAM] int 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;  voltaje         4   68[COMRAM] int 
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  4   64[COMRAM] int 
  7279 ;; Registers used:
  7280 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7286 ;;      Params:         4       0       0       0       0       0       0       0       0
  7287 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7289 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7290 ;;Total ram usage:        8 bytes
  7291 ;; Hardware stack levels used: 1
  7292 ;; Hardware stack levels required when called: 1
  7293 ;; This function calls:
  7294 ;;		___fldiv
  7295 ;;		___flmul
  7296 ;;		___xxtofl
  7297 ;; This function is called by:
  7298 ;;		_IMPRIMIR
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text36
  7303   0032CE                     __ptext36:
  7304                           	callstack 0
  7305   0032CE                     _VOLTAJE:
  7306                           	callstack 28
  7307   0032CE                     
  7308                           ;PARTE3_PARCIAL2.c: 36:     voltaje= (double)ADC*5/1023;
  7309   0032CE  0E00               	movlw	0
  7310   0032D0  6E13               	movwf	___flmul@a^0,c
  7311   0032D2  0E00               	movlw	0
  7312   0032D4  6E14               	movwf	(___flmul@a+1)^0,c
  7313   0032D6  0EA0               	movlw	160
  7314   0032D8  6E15               	movwf	(___flmul@a+2)^0,c
  7315   0032DA  0E40               	movlw	64
  7316   0032DC  6E16               	movwf	(___flmul@a+3)^0,c
  7317   0032DE  C041  F001         	movff	VOLTAJE@ADC,___xxtofl@val
  7318   0032E2  C042  F002         	movff	VOLTAJE@ADC+1,___xxtofl@val+1
  7319   0032E6  0E00               	movlw	0
  7320   0032E8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7321   0032EA  0EFF               	movlw	-1
  7322   0032EC  6E03               	movwf	(___xxtofl@val+2)^0,c
  7323   0032EE  6E04               	movwf	(___xxtofl@val+3)^0,c
  7324   0032F0  0E01               	movlw	1
  7325   0032F2  ECF8  F012         	call	___xxtofl
  7326   0032F6  C001  F00F         	movff	?___xxtofl,___flmul@b
  7327   0032FA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7328   0032FE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7329   003302  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7330   003306  EC6F  F00B         	call	___flmul	;wreg free
  7331   00330A  C00F  F028         	movff	?___flmul,___fldiv@b
  7332   00330E  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  7333   003312  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  7334   003316  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  7335   00331A  0E00               	movlw	0
  7336   00331C  6E2C               	movwf	___fldiv@a^0,c
  7337   00331E  0EC0               	movlw	192
  7338   003320  6E2D               	movwf	(___fldiv@a+1)^0,c
  7339   003322  0E7F               	movlw	127
  7340   003324  6E2E               	movwf	(___fldiv@a+2)^0,c
  7341   003326  0E44               	movlw	68
  7342   003328  6E2F               	movwf	(___fldiv@a+3)^0,c
  7343   00332A  EC84  F00D         	call	___fldiv	;wreg free
  7344   00332E  C028  F045         	movff	?___fldiv,VOLTAJE@voltaje
  7345   003332  C029  F046         	movff	?___fldiv+1,VOLTAJE@voltaje+1
  7346   003336  C02A  F047         	movff	?___fldiv+2,VOLTAJE@voltaje+2
  7347   00333A  C02B  F048         	movff	?___fldiv+3,VOLTAJE@voltaje+3
  7348   00333E                     
  7349                           ;PARTE3_PARCIAL2.c: 37:     return voltaje;
  7350   00333E  C045  F041         	movff	VOLTAJE@voltaje,?_VOLTAJE
  7351   003342  C046  F042         	movff	VOLTAJE@voltaje+1,?_VOLTAJE+1
  7352   003346  C047  F043         	movff	VOLTAJE@voltaje+2,?_VOLTAJE+2
  7353   00334A  C048  F044         	movff	VOLTAJE@voltaje+3,?_VOLTAJE+3
  7354   00334E  0012               	return		;funcret
  7355   003350                     __end_of_VOLTAJE:
  7356                           	callstack 0
  7357                           
  7358 ;; *************** function ___xxtofl *****************
  7359 ;; Defined at:
  7360 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  sign            1    wreg     unsigned char 
  7363 ;;  val             4    0[COMRAM] long 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  sign            1    8[COMRAM] unsigned char 
  7366 ;;  arg             4   10[COMRAM] unsigned long 
  7367 ;;  exp             1    9[COMRAM] unsigned char 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  4    0[COMRAM] unsigned char 
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, status,0
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7377 ;;      Params:         4       0       0       0       0       0       0       0       0
  7378 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7379 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7380 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7381 ;;Total ram usage:       14 bytes
  7382 ;; Hardware stack levels used: 1
  7383 ;; This function calls:
  7384 ;;		Nothing
  7385 ;; This function is called by:
  7386 ;;		_VOLTAJE
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390                           	psect	text37
  7391   0025F0                     __ptext37:
  7392                           	callstack 0
  7393   0025F0                     ___xxtofl:
  7394                           	callstack 28
  7395                           
  7396                           ;incstack = 0
  7397                           ;___xxtofl@sign stored from wreg
  7398   0025F0  6E09               	movwf	___xxtofl@sign^0,c
  7399   0025F2  5009               	movf	___xxtofl@sign^0,w,c
  7400   0025F4  B4D8               	btfsc	status,2,c
  7401   0025F6  EFFF  F012         	goto	u4551
  7402   0025FA  EF01  F013         	goto	u4550
  7403   0025FE                     u4551:
  7404   0025FE  EF23  F013         	goto	l876
  7405   002602                     u4550:
  7406   002602  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7407   002604  EF08  F013         	goto	u4560
  7408   002608  EF06  F013         	goto	u4561
  7409   00260C                     u4561:
  7410   00260C  EF23  F013         	goto	l876
  7411   002610                     u4560:
  7412   002610  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7413   002614  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7414   002618  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7415   00261C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7416   002620  1E05               	comf	??___xxtofl^0,f,c
  7417   002622  1E06               	comf	(??___xxtofl+1)^0,f,c
  7418   002624  1E07               	comf	(??___xxtofl+2)^0,f,c
  7419   002626  1E08               	comf	(??___xxtofl+3)^0,f,c
  7420   002628  2A05               	incf	??___xxtofl^0,f,c
  7421   00262A  0E00               	movlw	0
  7422   00262C  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7423   00262E  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7424   002630  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7425   002632  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7426   002636  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7427   00263A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7428   00263E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7429   002642  EF2B  F013         	goto	l3991
  7430   002646                     l876:
  7431   002646  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7432   00264A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7433   00264E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7434   002652  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7435   002656                     l3991:
  7436   002656  5001               	movf	___xxtofl@val^0,w,c
  7437   002658  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7438   00265A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7439   00265C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7440   00265E  A4D8               	btfss	status,2,c
  7441   002660  EF34  F013         	goto	u4571
  7442   002664  EF36  F013         	goto	u4570
  7443   002668                     u4571:
  7444   002668  EF40  F013         	goto	l3997
  7445   00266C                     u4570:
  7446   00266C  0E00               	movlw	0
  7447   00266E  6E01               	movwf	?___xxtofl^0,c
  7448   002670  0E00               	movlw	0
  7449   002672  6E02               	movwf	(?___xxtofl+1)^0,c
  7450   002674  0E00               	movlw	0
  7451   002676  6E03               	movwf	(?___xxtofl+2)^0,c
  7452   002678  0E00               	movlw	0
  7453   00267A  6E04               	movwf	(?___xxtofl+3)^0,c
  7454   00267C  EFD1  F013         	goto	l879
  7455   002680                     l3997:
  7456   002680  0E96               	movlw	150
  7457   002682  6E0A               	movwf	___xxtofl@exp^0,c
  7458   002684  EF4A  F013         	goto	l4001
  7459   002688                     l3999:
  7460   002688  2A0A               	incf	___xxtofl@exp^0,f,c
  7461   00268A  90D8               	bcf	status,0,c
  7462   00268C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7463   00268E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7464   002690  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7465   002692  320B               	rrcf	___xxtofl@arg^0,f,c
  7466   002694                     l4001:
  7467   002694  0E00               	movlw	0
  7468   002696  140B               	andwf	___xxtofl@arg^0,w,c
  7469   002698  6E05               	movwf	??___xxtofl^0,c
  7470   00269A  0E00               	movlw	0
  7471   00269C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7472   00269E  6E06               	movwf	(??___xxtofl+1)^0,c
  7473   0026A0  0E00               	movlw	0
  7474   0026A2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7475   0026A4  6E07               	movwf	(??___xxtofl+2)^0,c
  7476   0026A6  0EFE               	movlw	254
  7477   0026A8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7478   0026AA  6E08               	movwf	(??___xxtofl+3)^0,c
  7479   0026AC  5005               	movf	??___xxtofl^0,w,c
  7480   0026AE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7481   0026B0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7482   0026B2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7483   0026B4  A4D8               	btfss	status,2,c
  7484   0026B6  EF5F  F013         	goto	u4581
  7485   0026BA  EF61  F013         	goto	u4580
  7486   0026BE                     u4581:
  7487   0026BE  EF44  F013         	goto	l3999
  7488   0026C2                     u4580:
  7489   0026C2  EF6F  F013         	goto	l883
  7490   0026C6                     l4003:
  7491   0026C6  2A0A               	incf	___xxtofl@exp^0,f,c
  7492   0026C8  0E01               	movlw	1
  7493   0026CA  260B               	addwf	___xxtofl@arg^0,f,c
  7494   0026CC  0E00               	movlw	0
  7495   0026CE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7496   0026D0  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7497   0026D2  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7498   0026D4  90D8               	bcf	status,0,c
  7499   0026D6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7500   0026D8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7501   0026DA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7502   0026DC  320B               	rrcf	___xxtofl@arg^0,f,c
  7503   0026DE                     l883:
  7504   0026DE  0E00               	movlw	0
  7505   0026E0  140B               	andwf	___xxtofl@arg^0,w,c
  7506   0026E2  6E05               	movwf	??___xxtofl^0,c
  7507   0026E4  0E00               	movlw	0
  7508   0026E6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7509   0026E8  6E06               	movwf	(??___xxtofl+1)^0,c
  7510   0026EA  0E00               	movlw	0
  7511   0026EC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7512   0026EE  6E07               	movwf	(??___xxtofl+2)^0,c
  7513   0026F0  0EFF               	movlw	255
  7514   0026F2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7515   0026F4  6E08               	movwf	(??___xxtofl+3)^0,c
  7516   0026F6  5005               	movf	??___xxtofl^0,w,c
  7517   0026F8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7518   0026FA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7519   0026FC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7520   0026FE  A4D8               	btfss	status,2,c
  7521   002700  EF84  F013         	goto	u4591
  7522   002704  EF86  F013         	goto	u4590
  7523   002708                     u4591:
  7524   002708  EF63  F013         	goto	l4003
  7525   00270C                     u4590:
  7526   00270C  EF8E  F013         	goto	l4011
  7527   002710                     l4009:
  7528   002710  060A               	decf	___xxtofl@exp^0,f,c
  7529   002712  90D8               	bcf	status,0,c
  7530   002714  360B               	rlcf	___xxtofl@arg^0,f,c
  7531   002716  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7532   002718  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7533   00271A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7534   00271C                     l4011:
  7535   00271C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7536   00271E  EF93  F013         	goto	u4601
  7537   002722  EF95  F013         	goto	u4600
  7538   002726                     u4601:
  7539   002726  EF9D  F013         	goto	l890
  7540   00272A                     u4600:
  7541   00272A  0E02               	movlw	2
  7542   00272C  600A               	cpfslt	___xxtofl@exp^0,c
  7543   00272E  EF9B  F013         	goto	u4611
  7544   002732  EF9D  F013         	goto	u4610
  7545   002736                     u4611:
  7546   002736  EF88  F013         	goto	l4009
  7547   00273A                     u4610:
  7548   00273A                     l890:
  7549   00273A  B00A               	btfsc	___xxtofl@exp^0,0,c
  7550   00273C  EFA2  F013         	goto	u4621
  7551   002740  EFA4  F013         	goto	u4620
  7552   002744                     u4621:
  7553   002744  EFA5  F013         	goto	l4017
  7554   002748                     u4620:
  7555   002748  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7556   00274A                     l4017:
  7557   00274A  90D8               	bcf	status,0,c
  7558   00274C  320A               	rrcf	___xxtofl@exp^0,f,c
  7559   00274E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7560   002752  6A06               	clrf	(??___xxtofl+1)^0,c
  7561   002754  6A07               	clrf	(??___xxtofl+2)^0,c
  7562   002756  6A08               	clrf	(??___xxtofl+3)^0,c
  7563   002758  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7564   00275C  6A07               	clrf	(??___xxtofl+2)^0,c
  7565   00275E  6A06               	clrf	(??___xxtofl+1)^0,c
  7566   002760  6A05               	clrf	??___xxtofl^0,c
  7567   002762  5005               	movf	??___xxtofl^0,w,c
  7568   002764  120B               	iorwf	___xxtofl@arg^0,f,c
  7569   002766  5006               	movf	(??___xxtofl+1)^0,w,c
  7570   002768  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7571   00276A  5007               	movf	(??___xxtofl+2)^0,w,c
  7572   00276C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7573   00276E  5008               	movf	(??___xxtofl+3)^0,w,c
  7574   002770  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7575   002772  5009               	movf	___xxtofl@sign^0,w,c
  7576   002774  B4D8               	btfsc	status,2,c
  7577   002776  EFBF  F013         	goto	u4631
  7578   00277A  EFC1  F013         	goto	u4630
  7579   00277E                     u4631:
  7580   00277E  EFC9  F013         	goto	l4027
  7581   002782                     u4630:
  7582   002782  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7583   002784  EFC8  F013         	goto	u4640
  7584   002788  EFC6  F013         	goto	u4641
  7585   00278C                     u4641:
  7586   00278C  EFC9  F013         	goto	l4027
  7587   002790                     u4640:
  7588   002790  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7589   002792                     l4027:
  7590   002792  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7591   002796  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7592   00279A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7593   00279E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7594   0027A2                     l879:
  7595   0027A2  0012               	return		;funcret
  7596   0027A4                     __end_of___xxtofl:
  7597                           	callstack 0
  7598                           
  7599 ;; *************** function ___flmul *****************
  7600 ;; Defined at:
  7601 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  b               4   14[COMRAM] unsigned char 
  7604 ;;  a               4   18[COMRAM] unsigned char 
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;  prod            4   33[COMRAM] struct .
  7607 ;;  grs             4   27[COMRAM] unsigned long 
  7608 ;;  temp            2   37[COMRAM] struct .
  7609 ;;  bexp            1   32[COMRAM] unsigned char 
  7610 ;;  aexp            1   31[COMRAM] unsigned char 
  7611 ;;  sign            1   26[COMRAM] unsigned char 
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  4   14[COMRAM] unsigned char 
  7614 ;; Registers used:
  7615 ;;		wreg, status,2, status,0, prodl, prodh
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7621 ;;      Params:         8       0       0       0       0       0       0       0       0
  7622 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7623 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7624 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7625 ;;Total ram usage:       25 bytes
  7626 ;; Hardware stack levels used: 1
  7627 ;; This function calls:
  7628 ;;		Nothing
  7629 ;; This function is called by:
  7630 ;;		_VOLTAJE
  7631 ;;		_efgtoa
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text38
  7636   0016DE                     __ptext38:
  7637                           	callstack 0
  7638   0016DE                     ___flmul:
  7639                           	callstack 25
  7640   0016DE  5012               	movf	(___flmul@b+3)^0,w,c
  7641   0016E0  0B80               	andlw	128
  7642   0016E2  6E1B               	movwf	___flmul@sign^0,c
  7643   0016E4  5012               	movf	(___flmul@b+3)^0,w,c
  7644   0016E6  2412               	addwf	(___flmul@b+3)^0,w,c
  7645   0016E8  6E21               	movwf	___flmul@bexp^0,c
  7646   0016EA  AE11               	btfss	(___flmul@b+2)^0,7,c
  7647   0016EC  EF7A  F00B         	goto	u3231
  7648   0016F0  EF7C  F00B         	goto	u3230
  7649   0016F4                     u3231:
  7650   0016F4  EF7D  F00B         	goto	l3161
  7651   0016F8                     u3230:
  7652   0016F8  8021               	bsf	___flmul@bexp^0,0,c
  7653   0016FA                     l3161:
  7654   0016FA  5021               	movf	___flmul@bexp^0,w,c
  7655   0016FC  B4D8               	btfsc	status,2,c
  7656   0016FE  EF83  F00B         	goto	u3241
  7657   001702  EF85  F00B         	goto	u3240
  7658   001706                     u3241:
  7659   001706  EF98  F00B         	goto	l3169
  7660   00170A                     u3240:
  7661   00170A  2821               	incf	___flmul@bexp^0,w,c
  7662   00170C  A4D8               	btfss	status,2,c
  7663   00170E  EF8B  F00B         	goto	u3251
  7664   001712  EF8D  F00B         	goto	u3250
  7665   001716                     u3251:
  7666   001716  EF95  F00B         	goto	l3167
  7667   00171A                     u3250:
  7668   00171A  0E00               	movlw	0
  7669   00171C  6E0F               	movwf	___flmul@b^0,c
  7670   00171E  0E00               	movlw	0
  7671   001720  6E10               	movwf	(___flmul@b+1)^0,c
  7672   001722  0E00               	movlw	0
  7673   001724  6E11               	movwf	(___flmul@b+2)^0,c
  7674   001726  0E00               	movlw	0
  7675   001728  6E12               	movwf	(___flmul@b+3)^0,c
  7676   00172A                     l3167:
  7677   00172A  8E11               	bsf	(___flmul@b+2)^0,7,c
  7678   00172C  EFA0  F00B         	goto	l3171
  7679   001730                     l3169:
  7680   001730  0E00               	movlw	0
  7681   001732  6E0F               	movwf	___flmul@b^0,c
  7682   001734  0E00               	movlw	0
  7683   001736  6E10               	movwf	(___flmul@b+1)^0,c
  7684   001738  0E00               	movlw	0
  7685   00173A  6E11               	movwf	(___flmul@b+2)^0,c
  7686   00173C  0E00               	movlw	0
  7687   00173E  6E12               	movwf	(___flmul@b+3)^0,c
  7688   001740                     l3171:
  7689   001740  5016               	movf	(___flmul@a+3)^0,w,c
  7690   001742  0B80               	andlw	128
  7691   001744  1A1B               	xorwf	___flmul@sign^0,f,c
  7692   001746  5016               	movf	(___flmul@a+3)^0,w,c
  7693   001748  2416               	addwf	(___flmul@a+3)^0,w,c
  7694   00174A  6E20               	movwf	___flmul@aexp^0,c
  7695   00174C  AE15               	btfss	(___flmul@a+2)^0,7,c
  7696   00174E  EFAB  F00B         	goto	u3261
  7697   001752  EFAD  F00B         	goto	u3260
  7698   001756                     u3261:
  7699   001756  EFAE  F00B         	goto	l3179
  7700   00175A                     u3260:
  7701   00175A  8020               	bsf	___flmul@aexp^0,0,c
  7702   00175C                     l3179:
  7703   00175C  5020               	movf	___flmul@aexp^0,w,c
  7704   00175E  B4D8               	btfsc	status,2,c
  7705   001760  EFB4  F00B         	goto	u3271
  7706   001764  EFB6  F00B         	goto	u3270
  7707   001768                     u3271:
  7708   001768  EFC9  F00B         	goto	l3187
  7709   00176C                     u3270:
  7710   00176C  2820               	incf	___flmul@aexp^0,w,c
  7711   00176E  A4D8               	btfss	status,2,c
  7712   001770  EFBC  F00B         	goto	u3281
  7713   001774  EFBE  F00B         	goto	u3280
  7714   001778                     u3281:
  7715   001778  EFC6  F00B         	goto	l3185
  7716   00177C                     u3280:
  7717   00177C  0E00               	movlw	0
  7718   00177E  6E13               	movwf	___flmul@a^0,c
  7719   001780  0E00               	movlw	0
  7720   001782  6E14               	movwf	(___flmul@a+1)^0,c
  7721   001784  0E00               	movlw	0
  7722   001786  6E15               	movwf	(___flmul@a+2)^0,c
  7723   001788  0E00               	movlw	0
  7724   00178A  6E16               	movwf	(___flmul@a+3)^0,c
  7725   00178C                     l3185:
  7726   00178C  8E15               	bsf	(___flmul@a+2)^0,7,c
  7727   00178E  EFD1  F00B         	goto	l835
  7728   001792                     l3187:
  7729   001792  0E00               	movlw	0
  7730   001794  6E13               	movwf	___flmul@a^0,c
  7731   001796  0E00               	movlw	0
  7732   001798  6E14               	movwf	(___flmul@a+1)^0,c
  7733   00179A  0E00               	movlw	0
  7734   00179C  6E15               	movwf	(___flmul@a+2)^0,c
  7735   00179E  0E00               	movlw	0
  7736   0017A0  6E16               	movwf	(___flmul@a+3)^0,c
  7737   0017A2                     l835:
  7738   0017A2  5020               	movf	___flmul@aexp^0,w,c
  7739   0017A4  B4D8               	btfsc	status,2,c
  7740   0017A6  EFD7  F00B         	goto	u3291
  7741   0017AA  EFD9  F00B         	goto	u3290
  7742   0017AE                     u3291:
  7743   0017AE  EFE1  F00B         	goto	l3191
  7744   0017B2                     u3290:
  7745   0017B2  5021               	movf	___flmul@bexp^0,w,c
  7746   0017B4  A4D8               	btfss	status,2,c
  7747   0017B6  EFDF  F00B         	goto	u3301
  7748   0017BA  EFE1  F00B         	goto	u3300
  7749   0017BE                     u3301:
  7750   0017BE  EFEB  F00B         	goto	l3195
  7751   0017C2                     u3300:
  7752   0017C2                     l3191:
  7753   0017C2  0E00               	movlw	0
  7754   0017C4  6E0F               	movwf	?___flmul^0,c
  7755   0017C6  0E00               	movlw	0
  7756   0017C8  6E10               	movwf	(?___flmul+1)^0,c
  7757   0017CA  0E00               	movlw	0
  7758   0017CC  6E11               	movwf	(?___flmul+2)^0,c
  7759   0017CE  0E00               	movlw	0
  7760   0017D0  6E12               	movwf	(?___flmul+3)^0,c
  7761   0017D2  EF83  F00D         	goto	l839
  7762   0017D6                     l3195:
  7763   0017D6  5015               	movf	(___flmul@a+2)^0,w,c
  7764   0017D8  020F               	mulwf	___flmul@b^0,c
  7765   0017DA  CFF3 F026          	movff	prodl,___flmul@temp
  7766   0017DE  CFF4 F027          	movff	prodh,___flmul@temp+1
  7767   0017E2  5026               	movf	___flmul@temp^0,w,c
  7768   0017E4  6E1C               	movwf	___flmul@grs^0,c
  7769   0017E6  6A1D               	clrf	(___flmul@grs+1)^0,c
  7770   0017E8  6A1E               	clrf	(___flmul@grs+2)^0,c
  7771   0017EA  6A1F               	clrf	(___flmul@grs+3)^0,c
  7772   0017EC  5027               	movf	(___flmul@temp+1)^0,w,c
  7773   0017EE  6E22               	movwf	___flmul@prod^0,c
  7774   0017F0  6A23               	clrf	(___flmul@prod+1)^0,c
  7775   0017F2  6A24               	clrf	(___flmul@prod+2)^0,c
  7776   0017F4  6A25               	clrf	(___flmul@prod+3)^0,c
  7777   0017F6  5014               	movf	(___flmul@a+1)^0,w,c
  7778   0017F8  0210               	mulwf	(___flmul@b+1)^0,c
  7779   0017FA  CFF3 F026          	movff	prodl,___flmul@temp
  7780   0017FE  CFF4 F027          	movff	prodh,___flmul@temp+1
  7781   001802  5026               	movf	___flmul@temp^0,w,c
  7782   001804  261C               	addwf	___flmul@grs^0,f,c
  7783   001806  0E00               	movlw	0
  7784   001808  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7785   00180A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7786   00180C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7787   00180E  5027               	movf	(___flmul@temp+1)^0,w,c
  7788   001810  2622               	addwf	___flmul@prod^0,f,c
  7789   001812  0E00               	movlw	0
  7790   001814  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7791   001816  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7792   001818  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7793   00181A  5013               	movf	___flmul@a^0,w,c
  7794   00181C  0211               	mulwf	(___flmul@b+2)^0,c
  7795   00181E  CFF3 F026          	movff	prodl,___flmul@temp
  7796   001822  CFF4 F027          	movff	prodh,___flmul@temp+1
  7797   001826  5026               	movf	___flmul@temp^0,w,c
  7798   001828  261C               	addwf	___flmul@grs^0,f,c
  7799   00182A  0E00               	movlw	0
  7800   00182C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7801   00182E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7802   001830  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7803   001832  5027               	movf	(___flmul@temp+1)^0,w,c
  7804   001834  2622               	addwf	___flmul@prod^0,f,c
  7805   001836  0E00               	movlw	0
  7806   001838  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7807   00183A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7808   00183C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7809   00183E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7810   001842  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7811   001846  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7812   00184A  6A1C               	clrf	___flmul@grs^0,c
  7813   00184C  5013               	movf	___flmul@a^0,w,c
  7814   00184E  0210               	mulwf	(___flmul@b+1)^0,c
  7815   001850  CFF3 F026          	movff	prodl,___flmul@temp
  7816   001854  CFF4 F027          	movff	prodh,___flmul@temp+1
  7817   001858  5026               	movf	___flmul@temp^0,w,c
  7818   00185A  261C               	addwf	___flmul@grs^0,f,c
  7819   00185C  5027               	movf	(___flmul@temp+1)^0,w,c
  7820   00185E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7821   001860  0E00               	movlw	0
  7822   001862  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7823   001864  0E00               	movlw	0
  7824   001866  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7825   001868  5014               	movf	(___flmul@a+1)^0,w,c
  7826   00186A  020F               	mulwf	___flmul@b^0,c
  7827   00186C  CFF3 F026          	movff	prodl,___flmul@temp
  7828   001870  CFF4 F027          	movff	prodh,___flmul@temp+1
  7829   001874  5026               	movf	___flmul@temp^0,w,c
  7830   001876  261C               	addwf	___flmul@grs^0,f,c
  7831   001878  5027               	movf	(___flmul@temp+1)^0,w,c
  7832   00187A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7833   00187C  0E00               	movlw	0
  7834   00187E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7835   001880  0E00               	movlw	0
  7836   001882  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7837   001884  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7838   001888  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7839   00188C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7840   001890  6A1C               	clrf	___flmul@grs^0,c
  7841   001892  5013               	movf	___flmul@a^0,w,c
  7842   001894  020F               	mulwf	___flmul@b^0,c
  7843   001896  CFF3 F026          	movff	prodl,___flmul@temp
  7844   00189A  CFF4 F027          	movff	prodh,___flmul@temp+1
  7845   00189E  5026               	movf	___flmul@temp^0,w,c
  7846   0018A0  261C               	addwf	___flmul@grs^0,f,c
  7847   0018A2  5027               	movf	(___flmul@temp+1)^0,w,c
  7848   0018A4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7849   0018A6  0E00               	movlw	0
  7850   0018A8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7851   0018AA  0E00               	movlw	0
  7852   0018AC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7853   0018AE  5015               	movf	(___flmul@a+2)^0,w,c
  7854   0018B0  0210               	mulwf	(___flmul@b+1)^0,c
  7855   0018B2  CFF3 F026          	movff	prodl,___flmul@temp
  7856   0018B6  CFF4 F027          	movff	prodh,___flmul@temp+1
  7857   0018BA  5026               	movf	___flmul@temp^0,w,c
  7858   0018BC  2622               	addwf	___flmul@prod^0,f,c
  7859   0018BE  5027               	movf	(___flmul@temp+1)^0,w,c
  7860   0018C0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7861   0018C2  0E00               	movlw	0
  7862   0018C4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7863   0018C6  0E00               	movlw	0
  7864   0018C8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7865   0018CA  5014               	movf	(___flmul@a+1)^0,w,c
  7866   0018CC  0211               	mulwf	(___flmul@b+2)^0,c
  7867   0018CE  CFF3 F026          	movff	prodl,___flmul@temp
  7868   0018D2  CFF4 F027          	movff	prodh,___flmul@temp+1
  7869   0018D6  5026               	movf	___flmul@temp^0,w,c
  7870   0018D8  2622               	addwf	___flmul@prod^0,f,c
  7871   0018DA  5027               	movf	(___flmul@temp+1)^0,w,c
  7872   0018DC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7873   0018DE  0E00               	movlw	0
  7874   0018E0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7875   0018E2  0E00               	movlw	0
  7876   0018E4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7877   0018E6  5015               	movf	(___flmul@a+2)^0,w,c
  7878   0018E8  0211               	mulwf	(___flmul@b+2)^0,c
  7879   0018EA  CFF3 F026          	movff	prodl,___flmul@temp
  7880   0018EE  CFF4 F027          	movff	prodh,___flmul@temp+1
  7881   0018F2  5026               	movf	___flmul@temp^0,w,c
  7882   0018F4  6E17               	movwf	??___flmul^0,c
  7883   0018F6  5027               	movf	(___flmul@temp+1)^0,w,c
  7884   0018F8  6E18               	movwf	(??___flmul+1)^0,c
  7885   0018FA  6A19               	clrf	(??___flmul+2)^0,c
  7886   0018FC  6A1A               	clrf	(??___flmul+3)^0,c
  7887   0018FE  C019  F01A         	movff	??___flmul+2,??___flmul+3
  7888   001902  C018  F019         	movff	??___flmul+1,??___flmul+2
  7889   001906  C017  F018         	movff	??___flmul,??___flmul+1
  7890   00190A  6A17               	clrf	??___flmul^0,c
  7891   00190C  5017               	movf	??___flmul^0,w,c
  7892   00190E  2622               	addwf	___flmul@prod^0,f,c
  7893   001910  5018               	movf	(??___flmul+1)^0,w,c
  7894   001912  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7895   001914  5019               	movf	(??___flmul+2)^0,w,c
  7896   001916  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7897   001918  501A               	movf	(??___flmul+3)^0,w,c
  7898   00191A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7899   00191C  C01C  F017         	movff	___flmul@grs,??___flmul
  7900   001920  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  7901   001924  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  7902   001928  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  7903   00192C  0E19               	movlw	25
  7904   00192E  EF9E  F00C         	goto	u3310
  7905   001932                     u3315:
  7906   001932  90D8               	bcf	status,0,c
  7907   001934  321A               	rrcf	(??___flmul+3)^0,f,c
  7908   001936  3219               	rrcf	(??___flmul+2)^0,f,c
  7909   001938  3218               	rrcf	(??___flmul+1)^0,f,c
  7910   00193A  3217               	rrcf	??___flmul^0,f,c
  7911   00193C                     u3310:
  7912   00193C  2EE8               	decfsz	wreg,f,c
  7913   00193E  EF99  F00C         	goto	u3315
  7914   001942  5017               	movf	??___flmul^0,w,c
  7915   001944  2622               	addwf	___flmul@prod^0,f,c
  7916   001946  5018               	movf	(??___flmul+1)^0,w,c
  7917   001948  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7918   00194A  5019               	movf	(??___flmul+2)^0,w,c
  7919   00194C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7920   00194E  501A               	movf	(??___flmul+3)^0,w,c
  7921   001950  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7922   001952  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7923   001956  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7924   00195A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7925   00195E  6A1C               	clrf	___flmul@grs^0,c
  7926   001960  5020               	movf	___flmul@aexp^0,w,c
  7927   001962  C021  F017         	movff	___flmul@bexp,??___flmul
  7928   001966  6A18               	clrf	(??___flmul+1)^0,c
  7929   001968  2617               	addwf	??___flmul^0,f,c
  7930   00196A  0E00               	movlw	0
  7931   00196C  2218               	addwfc	(??___flmul+1)^0,f,c
  7932   00196E  0E82               	movlw	130
  7933   001970  2417               	addwf	??___flmul^0,w,c
  7934   001972  6E26               	movwf	___flmul@temp^0,c
  7935   001974  0EFF               	movlw	255
  7936   001976  2018               	addwfc	(??___flmul+1)^0,w,c
  7937   001978  6E27               	movwf	(___flmul@temp+1)^0,c
  7938   00197A  EFD4  F00C         	goto	l3243
  7939   00197E                     l3237:
  7940   00197E  90D8               	bcf	status,0,c
  7941   001980  3622               	rlcf	___flmul@prod^0,f,c
  7942   001982  3623               	rlcf	(___flmul@prod+1)^0,f,c
  7943   001984  3624               	rlcf	(___flmul@prod+2)^0,f,c
  7944   001986  3625               	rlcf	(___flmul@prod+3)^0,f,c
  7945   001988  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  7946   00198A  EFC9  F00C         	goto	u3321
  7947   00198E  EFCB  F00C         	goto	u3320
  7948   001992                     u3321:
  7949   001992  EFCC  F00C         	goto	l842
  7950   001996                     u3320:
  7951   001996  8022               	bsf	___flmul@prod^0,0,c
  7952   001998                     l842:
  7953   001998  90D8               	bcf	status,0,c
  7954   00199A  361C               	rlcf	___flmul@grs^0,f,c
  7955   00199C  361D               	rlcf	(___flmul@grs+1)^0,f,c
  7956   00199E  361E               	rlcf	(___flmul@grs+2)^0,f,c
  7957   0019A0  361F               	rlcf	(___flmul@grs+3)^0,f,c
  7958   0019A2  0626               	decf	___flmul@temp^0,f,c
  7959   0019A4  A0D8               	btfss	status,0,c
  7960   0019A6  0627               	decf	(___flmul@temp+1)^0,f,c
  7961   0019A8                     l3243:
  7962   0019A8  AE24               	btfss	(___flmul@prod+2)^0,7,c
  7963   0019AA  EFD9  F00C         	goto	u3331
  7964   0019AE  EFDB  F00C         	goto	u3330
  7965   0019B2                     u3331:
  7966   0019B2  EFBF  F00C         	goto	l3237
  7967   0019B6                     u3330:
  7968   0019B6  0E00               	movlw	0
  7969   0019B8  6E20               	movwf	___flmul@aexp^0,c
  7970   0019BA  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  7971   0019BC  EFE2  F00C         	goto	u3341
  7972   0019C0  EFE4  F00C         	goto	u3340
  7973   0019C4                     u3341:
  7974   0019C4  EF08  F00D         	goto	l844
  7975   0019C8                     u3340:
  7976   0019C8  0EFF               	movlw	255
  7977   0019CA  141C               	andwf	___flmul@grs^0,w,c
  7978   0019CC  6E17               	movwf	??___flmul^0,c
  7979   0019CE  0EFF               	movlw	255
  7980   0019D0  141D               	andwf	(___flmul@grs+1)^0,w,c
  7981   0019D2  6E18               	movwf	(??___flmul+1)^0,c
  7982   0019D4  0EFF               	movlw	255
  7983   0019D6  141E               	andwf	(___flmul@grs+2)^0,w,c
  7984   0019D8  6E19               	movwf	(??___flmul+2)^0,c
  7985   0019DA  0E7F               	movlw	127
  7986   0019DC  141F               	andwf	(___flmul@grs+3)^0,w,c
  7987   0019DE  6E1A               	movwf	(??___flmul+3)^0,c
  7988   0019E0  5017               	movf	??___flmul^0,w,c
  7989   0019E2  1018               	iorwf	(??___flmul+1)^0,w,c
  7990   0019E4  1019               	iorwf	(??___flmul+2)^0,w,c
  7991   0019E6  101A               	iorwf	(??___flmul+3)^0,w,c
  7992   0019E8  B4D8               	btfsc	status,2,c
  7993   0019EA  EFF9  F00C         	goto	u3351
  7994   0019EE  EFFB  F00C         	goto	u3350
  7995   0019F2                     u3351:
  7996   0019F2  EFFF  F00C         	goto	l845
  7997   0019F6                     u3350:
  7998   0019F6                     l3251:
  7999   0019F6  0E01               	movlw	1
  8000   0019F8  6E20               	movwf	___flmul@aexp^0,c
  8001   0019FA  EF08  F00D         	goto	l844
  8002   0019FE                     l845:
  8003   0019FE  A022               	btfss	___flmul@prod^0,0,c
  8004   001A00  EF04  F00D         	goto	u3361
  8005   001A04  EF06  F00D         	goto	u3360
  8006   001A08                     u3361:
  8007   001A08  EF08  F00D         	goto	l844
  8008   001A0C                     u3360:
  8009   001A0C  EFFB  F00C         	goto	l3251
  8010   001A10                     l844:
  8011   001A10  5020               	movf	___flmul@aexp^0,w,c
  8012   001A12  B4D8               	btfsc	status,2,c
  8013   001A14  EF0E  F00D         	goto	u3371
  8014   001A18  EF10  F00D         	goto	u3370
  8015   001A1C                     u3371:
  8016   001A1C  EF34  F00D         	goto	l3263
  8017   001A20                     u3370:
  8018   001A20  0E01               	movlw	1
  8019   001A22  2622               	addwf	___flmul@prod^0,f,c
  8020   001A24  0E00               	movlw	0
  8021   001A26  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8022   001A28  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8023   001A2A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8024   001A2C  A025               	btfss	(___flmul@prod+3)^0,0,c
  8025   001A2E  EF1B  F00D         	goto	u3381
  8026   001A32  EF1D  F00D         	goto	u3380
  8027   001A36                     u3381:
  8028   001A36  EF34  F00D         	goto	l3263
  8029   001A3A                     u3380:
  8030   001A3A  C022  F017         	movff	___flmul@prod,??___flmul
  8031   001A3E  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8032   001A42  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8033   001A46  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8034   001A4A  341A               	rlcf	(??___flmul+3)^0,w,c
  8035   001A4C  321A               	rrcf	(??___flmul+3)^0,f,c
  8036   001A4E  3219               	rrcf	(??___flmul+2)^0,f,c
  8037   001A50  3218               	rrcf	(??___flmul+1)^0,f,c
  8038   001A52  3217               	rrcf	??___flmul^0,f,c
  8039   001A54  C017  F022         	movff	??___flmul,___flmul@prod
  8040   001A58  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8041   001A5C  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8042   001A60  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8043   001A64  4A26               	infsnz	___flmul@temp^0,f,c
  8044   001A66  2A27               	incf	(___flmul@temp+1)^0,f,c
  8045   001A68                     l3263:
  8046   001A68  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8047   001A6A  EF3F  F00D         	goto	u3391
  8048   001A6E  5027               	movf	(___flmul@temp+1)^0,w,c
  8049   001A70  E108               	bnz	u3390
  8050   001A72  2826               	incf	___flmul@temp^0,w,c
  8051   001A74  A0D8               	btfss	status,0,c
  8052   001A76  EF3F  F00D         	goto	u3391
  8053   001A7A  EF41  F00D         	goto	u3390
  8054   001A7E                     u3391:
  8055   001A7E  EF4B  F00D         	goto	l3267
  8056   001A82                     u3390:
  8057   001A82  0E00               	movlw	0
  8058   001A84  6E22               	movwf	___flmul@prod^0,c
  8059   001A86  0E00               	movlw	0
  8060   001A88  6E23               	movwf	(___flmul@prod+1)^0,c
  8061   001A8A  0E80               	movlw	128
  8062   001A8C  6E24               	movwf	(___flmul@prod+2)^0,c
  8063   001A8E  0E7F               	movlw	127
  8064   001A90  6E25               	movwf	(___flmul@prod+3)^0,c
  8065   001A92  EF79  F00D         	goto	l3279
  8066   001A96                     l3267:
  8067   001A96  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8068   001A98  EF58  F00D         	goto	u3400
  8069   001A9C  5027               	movf	(___flmul@temp+1)^0,w,c
  8070   001A9E  E106               	bnz	u3401
  8071   001AA0  0426               	decf	___flmul@temp^0,w,c
  8072   001AA2  B0D8               	btfsc	status,0,c
  8073   001AA4  EF56  F00D         	goto	u3401
  8074   001AA8  EF58  F00D         	goto	u3400
  8075   001AAC                     u3401:
  8076   001AAC  EF64  F00D         	goto	l852
  8077   001AB0                     u3400:
  8078   001AB0  0E00               	movlw	0
  8079   001AB2  6E22               	movwf	___flmul@prod^0,c
  8080   001AB4  0E00               	movlw	0
  8081   001AB6  6E23               	movwf	(___flmul@prod+1)^0,c
  8082   001AB8  0E00               	movlw	0
  8083   001ABA  6E24               	movwf	(___flmul@prod+2)^0,c
  8084   001ABC  0E00               	movlw	0
  8085   001ABE  6E25               	movwf	(___flmul@prod+3)^0,c
  8086   001AC0  0E00               	movlw	0
  8087   001AC2  6E1B               	movwf	___flmul@sign^0,c
  8088   001AC4  EF79  F00D         	goto	l3279
  8089   001AC8                     l852:
  8090   001AC8  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8091   001ACC  0EFF               	movlw	255
  8092   001ACE  1622               	andwf	___flmul@prod^0,f,c
  8093   001AD0  0EFF               	movlw	255
  8094   001AD2  1623               	andwf	(___flmul@prod+1)^0,f,c
  8095   001AD4  0E7F               	movlw	127
  8096   001AD6  1624               	andwf	(___flmul@prod+2)^0,f,c
  8097   001AD8  0E00               	movlw	0
  8098   001ADA  1625               	andwf	(___flmul@prod+3)^0,f,c
  8099   001ADC  A021               	btfss	___flmul@bexp^0,0,c
  8100   001ADE  EF73  F00D         	goto	u3411
  8101   001AE2  EF75  F00D         	goto	u3410
  8102   001AE6                     u3411:
  8103   001AE6  EF76  F00D         	goto	l3277
  8104   001AEA                     u3410:
  8105   001AEA  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8106   001AEC                     l3277:
  8107   001AEC  90D8               	bcf	status,0,c
  8108   001AEE  3021               	rrcf	___flmul@bexp^0,w,c
  8109   001AF0  6E25               	movwf	(___flmul@prod+3)^0,c
  8110   001AF2                     l3279:
  8111   001AF2  501B               	movf	___flmul@sign^0,w,c
  8112   001AF4  1225               	iorwf	(___flmul@prod+3)^0,f,c
  8113   001AF6  C022  F00F         	movff	___flmul@prod,?___flmul
  8114   001AFA  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8115   001AFE  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8116   001B02  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8117   001B06                     l839:
  8118   001B06  0012               	return		;funcret
  8119   001B08                     __end_of___flmul:
  8120                           	callstack 0
  8121                           
  8122 ;; *************** function ___fldiv *****************
  8123 ;; Defined at:
  8124 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;  b               4   39[COMRAM] unsigned char 
  8127 ;;  a               4   43[COMRAM] unsigned char 
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;  grs             4   58[COMRAM] unsigned long 
  8130 ;;  rem             4   51[COMRAM] unsigned long 
  8131 ;;  new_exp         2   56[COMRAM] short 
  8132 ;;  aexp            1   63[COMRAM] unsigned char 
  8133 ;;  bexp            1   62[COMRAM] unsigned char 
  8134 ;;  sign            1   55[COMRAM] unsigned char 
  8135 ;; Return value:  Size  Location     Type
  8136 ;;                  4   39[COMRAM] unsigned char 
  8137 ;; Registers used:
  8138 ;;		wreg, status,2, status,0
  8139 ;; Tracked objects:
  8140 ;;		On entry : 0/0
  8141 ;;		On exit  : 0/0
  8142 ;;		Unchanged: 0/0
  8143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8144 ;;      Params:         8       0       0       0       0       0       0       0       0
  8145 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8146 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8147 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8148 ;;Total ram usage:       25 bytes
  8149 ;; Hardware stack levels used: 1
  8150 ;; This function calls:
  8151 ;;		Nothing
  8152 ;; This function is called by:
  8153 ;;		_VOLTAJE
  8154 ;;		_efgtoa
  8155 ;; This function uses a non-reentrant model
  8156 ;;
  8157                           
  8158                           	psect	text39
  8159   001B08                     __ptext39:
  8160                           	callstack 0
  8161   001B08                     ___fldiv:
  8162                           	callstack 25
  8163   001B08  502B               	movf	(___fldiv@b+3)^0,w,c
  8164   001B0A  0B80               	andlw	128
  8165   001B0C  6E38               	movwf	___fldiv@sign^0,c
  8166   001B0E  502B               	movf	(___fldiv@b+3)^0,w,c
  8167   001B10  242B               	addwf	(___fldiv@b+3)^0,w,c
  8168   001B12  6E3F               	movwf	___fldiv@bexp^0,c
  8169   001B14  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  8170   001B16  EF8F  F00D         	goto	u3001
  8171   001B1A  EF91  F00D         	goto	u3000
  8172   001B1E                     u3001:
  8173   001B1E  EF92  F00D         	goto	l3023
  8174   001B22                     u3000:
  8175   001B22  803F               	bsf	___fldiv@bexp^0,0,c
  8176   001B24                     l3023:
  8177   001B24  503F               	movf	___fldiv@bexp^0,w,c
  8178   001B26  B4D8               	btfsc	status,2,c
  8179   001B28  EF98  F00D         	goto	u3011
  8180   001B2C  EF9A  F00D         	goto	u3010
  8181   001B30                     u3011:
  8182   001B30  EFAF  F00D         	goto	l3033
  8183   001B34                     u3010:
  8184   001B34  283F               	incf	___fldiv@bexp^0,w,c
  8185   001B36  A4D8               	btfss	status,2,c
  8186   001B38  EFA0  F00D         	goto	u3021
  8187   001B3C  EFA2  F00D         	goto	u3020
  8188   001B40                     u3021:
  8189   001B40  EFAA  F00D         	goto	l3029
  8190   001B44                     u3020:
  8191   001B44  0E00               	movlw	0
  8192   001B46  6E28               	movwf	___fldiv@b^0,c
  8193   001B48  0E00               	movlw	0
  8194   001B4A  6E29               	movwf	(___fldiv@b+1)^0,c
  8195   001B4C  0E00               	movlw	0
  8196   001B4E  6E2A               	movwf	(___fldiv@b+2)^0,c
  8197   001B50  0E00               	movlw	0
  8198   001B52  6E2B               	movwf	(___fldiv@b+3)^0,c
  8199   001B54                     l3029:
  8200   001B54  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  8201   001B56  0E00               	movlw	0
  8202   001B58  6E2B               	movwf	(___fldiv@b+3)^0,c
  8203   001B5A  EFB7  F00D         	goto	l3035
  8204   001B5E                     l3033:
  8205   001B5E  0E00               	movlw	0
  8206   001B60  6E28               	movwf	___fldiv@b^0,c
  8207   001B62  0E00               	movlw	0
  8208   001B64  6E29               	movwf	(___fldiv@b+1)^0,c
  8209   001B66  0E00               	movlw	0
  8210   001B68  6E2A               	movwf	(___fldiv@b+2)^0,c
  8211   001B6A  0E00               	movlw	0
  8212   001B6C  6E2B               	movwf	(___fldiv@b+3)^0,c
  8213   001B6E                     l3035:
  8214   001B6E  502F               	movf	(___fldiv@a+3)^0,w,c
  8215   001B70  0B80               	andlw	128
  8216   001B72  1A38               	xorwf	___fldiv@sign^0,f,c
  8217   001B74  502F               	movf	(___fldiv@a+3)^0,w,c
  8218   001B76  242F               	addwf	(___fldiv@a+3)^0,w,c
  8219   001B78  6E40               	movwf	___fldiv@aexp^0,c
  8220   001B7A  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  8221   001B7C  EFC2  F00D         	goto	u3031
  8222   001B80  EFC4  F00D         	goto	u3030
  8223   001B84                     u3031:
  8224   001B84  EFC5  F00D         	goto	l3043
  8225   001B88                     u3030:
  8226   001B88  8040               	bsf	___fldiv@aexp^0,0,c
  8227   001B8A                     l3043:
  8228   001B8A  5040               	movf	___fldiv@aexp^0,w,c
  8229   001B8C  B4D8               	btfsc	status,2,c
  8230   001B8E  EFCB  F00D         	goto	u3041
  8231   001B92  EFCD  F00D         	goto	u3040
  8232   001B96                     u3041:
  8233   001B96  EFE2  F00D         	goto	l3053
  8234   001B9A                     u3040:
  8235   001B9A  2840               	incf	___fldiv@aexp^0,w,c
  8236   001B9C  A4D8               	btfss	status,2,c
  8237   001B9E  EFD3  F00D         	goto	u3051
  8238   001BA2  EFD5  F00D         	goto	u3050
  8239   001BA6                     u3051:
  8240   001BA6  EFDD  F00D         	goto	l3049
  8241   001BAA                     u3050:
  8242   001BAA  0E00               	movlw	0
  8243   001BAC  6E2C               	movwf	___fldiv@a^0,c
  8244   001BAE  0E00               	movlw	0
  8245   001BB0  6E2D               	movwf	(___fldiv@a+1)^0,c
  8246   001BB2  0E00               	movlw	0
  8247   001BB4  6E2E               	movwf	(___fldiv@a+2)^0,c
  8248   001BB6  0E00               	movlw	0
  8249   001BB8  6E2F               	movwf	(___fldiv@a+3)^0,c
  8250   001BBA                     l3049:
  8251   001BBA  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  8252   001BBC  0E00               	movlw	0
  8253   001BBE  6E2F               	movwf	(___fldiv@a+3)^0,c
  8254   001BC0  EFEA  F00D         	goto	l3055
  8255   001BC4                     l3053:
  8256   001BC4  0E00               	movlw	0
  8257   001BC6  6E2C               	movwf	___fldiv@a^0,c
  8258   001BC8  0E00               	movlw	0
  8259   001BCA  6E2D               	movwf	(___fldiv@a+1)^0,c
  8260   001BCC  0E00               	movlw	0
  8261   001BCE  6E2E               	movwf	(___fldiv@a+2)^0,c
  8262   001BD0  0E00               	movlw	0
  8263   001BD2  6E2F               	movwf	(___fldiv@a+3)^0,c
  8264   001BD4                     l3055:
  8265   001BD4  502C               	movf	___fldiv@a^0,w,c
  8266   001BD6  102D               	iorwf	(___fldiv@a+1)^0,w,c
  8267   001BD8  102E               	iorwf	(___fldiv@a+2)^0,w,c
  8268   001BDA  102F               	iorwf	(___fldiv@a+3)^0,w,c
  8269   001BDC  A4D8               	btfss	status,2,c
  8270   001BDE  EFF3  F00D         	goto	u3061
  8271   001BE2  EFF5  F00D         	goto	u3060
  8272   001BE6                     u3061:
  8273   001BE6  EF0D  F00E         	goto	l3067
  8274   001BEA                     u3060:
  8275   001BEA  0E00               	movlw	0
  8276   001BEC  6E28               	movwf	___fldiv@b^0,c
  8277   001BEE  0E00               	movlw	0
  8278   001BF0  6E29               	movwf	(___fldiv@b+1)^0,c
  8279   001BF2  0E00               	movlw	0
  8280   001BF4  6E2A               	movwf	(___fldiv@b+2)^0,c
  8281   001BF6  0E00               	movlw	0
  8282   001BF8  6E2B               	movwf	(___fldiv@b+3)^0,c
  8283   001BFA  0E80               	movlw	128
  8284   001BFC  122A               	iorwf	(___fldiv@b+2)^0,f,c
  8285   001BFE  0E7F               	movlw	127
  8286   001C00  122B               	iorwf	(___fldiv@b+3)^0,f,c
  8287   001C02                     l3061:
  8288   001C02  5038               	movf	___fldiv@sign^0,w,c
  8289   001C04  122B               	iorwf	(___fldiv@b+3)^0,f,c
  8290   001C06  C028  F028         	movff	___fldiv@b,?___fldiv
  8291   001C0A  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  8292   001C0E  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  8293   001C12  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  8294   001C16  EF50  F00F         	goto	l803
  8295   001C1A                     l3067:
  8296   001C1A  503F               	movf	___fldiv@bexp^0,w,c
  8297   001C1C  A4D8               	btfss	status,2,c
  8298   001C1E  EF13  F00E         	goto	u3071
  8299   001C22  EF15  F00E         	goto	u3070
  8300   001C26                     u3071:
  8301   001C26  EF1F  F00E         	goto	l3075
  8302   001C2A                     u3070:
  8303   001C2A  0E00               	movlw	0
  8304   001C2C  6E28               	movwf	?___fldiv^0,c
  8305   001C2E  0E00               	movlw	0
  8306   001C30  6E29               	movwf	(?___fldiv+1)^0,c
  8307   001C32  0E00               	movlw	0
  8308   001C34  6E2A               	movwf	(?___fldiv+2)^0,c
  8309   001C36  0E00               	movlw	0
  8310   001C38  6E2B               	movwf	(?___fldiv+3)^0,c
  8311   001C3A  EF50  F00F         	goto	l803
  8312   001C3E                     l3075:
  8313   001C3E  5040               	movf	___fldiv@aexp^0,w,c
  8314   001C40  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  8315   001C44  6A31               	clrf	(??___fldiv+1)^0,c
  8316   001C46  5E30               	subwf	??___fldiv^0,f,c
  8317   001C48  0E00               	movlw	0
  8318   001C4A  5A31               	subwfb	(??___fldiv+1)^0,f,c
  8319   001C4C  0E7F               	movlw	127
  8320   001C4E  2430               	addwf	??___fldiv^0,w,c
  8321   001C50  6E39               	movwf	___fldiv@new_exp^0,c
  8322   001C52  0E00               	movlw	0
  8323   001C54  2031               	addwfc	(??___fldiv+1)^0,w,c
  8324   001C56  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  8325   001C58  C028  F034         	movff	___fldiv@b,___fldiv@rem
  8326   001C5C  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  8327   001C60  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  8328   001C64  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  8329   001C68  0E00               	movlw	0
  8330   001C6A  6E28               	movwf	___fldiv@b^0,c
  8331   001C6C  0E00               	movlw	0
  8332   001C6E  6E29               	movwf	(___fldiv@b+1)^0,c
  8333   001C70  0E00               	movlw	0
  8334   001C72  6E2A               	movwf	(___fldiv@b+2)^0,c
  8335   001C74  0E00               	movlw	0
  8336   001C76  6E2B               	movwf	(___fldiv@b+3)^0,c
  8337   001C78  0E00               	movlw	0
  8338   001C7A  6E3B               	movwf	___fldiv@grs^0,c
  8339   001C7C  0E00               	movlw	0
  8340   001C7E  6E3C               	movwf	(___fldiv@grs+1)^0,c
  8341   001C80  0E00               	movlw	0
  8342   001C82  6E3D               	movwf	(___fldiv@grs+2)^0,c
  8343   001C84  0E00               	movlw	0
  8344   001C86  6E3E               	movwf	(___fldiv@grs+3)^0,c
  8345   001C88  0E00               	movlw	0
  8346   001C8A  6E40               	movwf	___fldiv@aexp^0,c
  8347   001C8C  EF80  F00E         	goto	l805
  8348   001C90                     l3085:
  8349   001C90  5040               	movf	___fldiv@aexp^0,w,c
  8350   001C92  B4D8               	btfsc	status,2,c
  8351   001C94  EF4E  F00E         	goto	u3081
  8352   001C98  EF50  F00E         	goto	u3080
  8353   001C9C                     u3081:
  8354   001C9C  EF67  F00E         	goto	l3093
  8355   001CA0                     u3080:
  8356   001CA0  90D8               	bcf	status,0,c
  8357   001CA2  3634               	rlcf	___fldiv@rem^0,f,c
  8358   001CA4  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  8359   001CA6  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  8360   001CA8  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  8361   001CAA  90D8               	bcf	status,0,c
  8362   001CAC  3628               	rlcf	___fldiv@b^0,f,c
  8363   001CAE  3629               	rlcf	(___fldiv@b+1)^0,f,c
  8364   001CB0  362A               	rlcf	(___fldiv@b+2)^0,f,c
  8365   001CB2  362B               	rlcf	(___fldiv@b+3)^0,f,c
  8366   001CB4  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  8367   001CB6  EF5F  F00E         	goto	u3091
  8368   001CBA  EF61  F00E         	goto	u3090
  8369   001CBE                     u3091:
  8370   001CBE  EF62  F00E         	goto	l808
  8371   001CC2                     u3090:
  8372   001CC2  8028               	bsf	___fldiv@b^0,0,c
  8373   001CC4                     l808:
  8374   001CC4  90D8               	bcf	status,0,c
  8375   001CC6  363B               	rlcf	___fldiv@grs^0,f,c
  8376   001CC8  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  8377   001CCA  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  8378   001CCC  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  8379   001CCE                     l3093:
  8380   001CCE  502C               	movf	___fldiv@a^0,w,c
  8381   001CD0  5C34               	subwf	___fldiv@rem^0,w,c
  8382   001CD2  502D               	movf	(___fldiv@a+1)^0,w,c
  8383   001CD4  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  8384   001CD6  502E               	movf	(___fldiv@a+2)^0,w,c
  8385   001CD8  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  8386   001CDA  502F               	movf	(___fldiv@a+3)^0,w,c
  8387   001CDC  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  8388   001CDE  A0D8               	btfss	status,0,c
  8389   001CE0  EF74  F00E         	goto	u3101
  8390   001CE4  EF76  F00E         	goto	u3100
  8391   001CE8                     u3101:
  8392   001CE8  EF7F  F00E         	goto	l3099
  8393   001CEC                     u3100:
  8394   001CEC  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  8395   001CEE  502C               	movf	___fldiv@a^0,w,c
  8396   001CF0  5E34               	subwf	___fldiv@rem^0,f,c
  8397   001CF2  502D               	movf	(___fldiv@a+1)^0,w,c
  8398   001CF4  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  8399   001CF6  502E               	movf	(___fldiv@a+2)^0,w,c
  8400   001CF8  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  8401   001CFA  502F               	movf	(___fldiv@a+3)^0,w,c
  8402   001CFC  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  8403   001CFE                     l3099:
  8404   001CFE  2A40               	incf	___fldiv@aexp^0,f,c
  8405   001D00                     l805:
  8406   001D00  0E19               	movlw	25
  8407   001D02  6440               	cpfsgt	___fldiv@aexp^0,c
  8408   001D04  EF86  F00E         	goto	u3111
  8409   001D08  EF88  F00E         	goto	u3110
  8410   001D0C                     u3111:
  8411   001D0C  EF48  F00E         	goto	l3085
  8412   001D10                     u3110:
  8413   001D10  5034               	movf	___fldiv@rem^0,w,c
  8414   001D12  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  8415   001D14  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  8416   001D16  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  8417   001D18  B4D8               	btfsc	status,2,c
  8418   001D1A  EF91  F00E         	goto	u3121
  8419   001D1E  EF93  F00E         	goto	u3120
  8420   001D22                     u3121:
  8421   001D22  EFAB  F00E         	goto	l3111
  8422   001D26                     u3120:
  8423   001D26  803B               	bsf	___fldiv@grs^0,0,c
  8424   001D28  EFAB  F00E         	goto	l3111
  8425   001D2C                     l3105:
  8426   001D2C  90D8               	bcf	status,0,c
  8427   001D2E  3628               	rlcf	___fldiv@b^0,f,c
  8428   001D30  3629               	rlcf	(___fldiv@b+1)^0,f,c
  8429   001D32  362A               	rlcf	(___fldiv@b+2)^0,f,c
  8430   001D34  362B               	rlcf	(___fldiv@b+3)^0,f,c
  8431   001D36  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  8432   001D38  EFA0  F00E         	goto	u3131
  8433   001D3C  EFA2  F00E         	goto	u3130
  8434   001D40                     u3131:
  8435   001D40  EFA3  F00E         	goto	l814
  8436   001D44                     u3130:
  8437   001D44  8028               	bsf	___fldiv@b^0,0,c
  8438   001D46                     l814:
  8439   001D46  90D8               	bcf	status,0,c
  8440   001D48  363B               	rlcf	___fldiv@grs^0,f,c
  8441   001D4A  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  8442   001D4C  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  8443   001D4E  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  8444   001D50  0639               	decf	___fldiv@new_exp^0,f,c
  8445   001D52  A0D8               	btfss	status,0,c
  8446   001D54  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  8447   001D56                     l3111:
  8448   001D56  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  8449   001D58  EFB0  F00E         	goto	u3141
  8450   001D5C  EFB2  F00E         	goto	u3140
  8451   001D60                     u3141:
  8452   001D60  EF96  F00E         	goto	l3105
  8453   001D64                     u3140:
  8454   001D64  0E00               	movlw	0
  8455   001D66  6E40               	movwf	___fldiv@aexp^0,c
  8456   001D68  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  8457   001D6A  EFB9  F00E         	goto	u3151
  8458   001D6E  EFBB  F00E         	goto	u3150
  8459   001D72                     u3151:
  8460   001D72  EFDF  F00E         	goto	l816
  8461   001D76                     u3150:
  8462   001D76  0EFF               	movlw	255
  8463   001D78  143B               	andwf	___fldiv@grs^0,w,c
  8464   001D7A  6E30               	movwf	??___fldiv^0,c
  8465   001D7C  0EFF               	movlw	255
  8466   001D7E  143C               	andwf	(___fldiv@grs+1)^0,w,c
  8467   001D80  6E31               	movwf	(??___fldiv+1)^0,c
  8468   001D82  0EFF               	movlw	255
  8469   001D84  143D               	andwf	(___fldiv@grs+2)^0,w,c
  8470   001D86  6E32               	movwf	(??___fldiv+2)^0,c
  8471   001D88  0E7F               	movlw	127
  8472   001D8A  143E               	andwf	(___fldiv@grs+3)^0,w,c
  8473   001D8C  6E33               	movwf	(??___fldiv+3)^0,c
  8474   001D8E  5030               	movf	??___fldiv^0,w,c
  8475   001D90  1031               	iorwf	(??___fldiv+1)^0,w,c
  8476   001D92  1032               	iorwf	(??___fldiv+2)^0,w,c
  8477   001D94  1033               	iorwf	(??___fldiv+3)^0,w,c
  8478   001D96  B4D8               	btfsc	status,2,c
  8479   001D98  EFD0  F00E         	goto	u3161
  8480   001D9C  EFD2  F00E         	goto	u3160
  8481   001DA0                     u3161:
  8482   001DA0  EFD6  F00E         	goto	l817
  8483   001DA4                     u3160:
  8484   001DA4                     l3119:
  8485   001DA4  0E01               	movlw	1
  8486   001DA6  6E40               	movwf	___fldiv@aexp^0,c
  8487   001DA8  EFDF  F00E         	goto	l816
  8488   001DAC                     l817:
  8489   001DAC  A028               	btfss	___fldiv@b^0,0,c
  8490   001DAE  EFDB  F00E         	goto	u3171
  8491   001DB2  EFDD  F00E         	goto	u3170
  8492   001DB6                     u3171:
  8493   001DB6  EFDF  F00E         	goto	l816
  8494   001DBA                     u3170:
  8495   001DBA  EFD2  F00E         	goto	l3119
  8496   001DBE                     l816:
  8497   001DBE  5040               	movf	___fldiv@aexp^0,w,c
  8498   001DC0  B4D8               	btfsc	status,2,c
  8499   001DC2  EFE5  F00E         	goto	u3181
  8500   001DC6  EFE7  F00E         	goto	u3180
  8501   001DCA                     u3181:
  8502   001DCA  EF0B  F00F         	goto	l3131
  8503   001DCE                     u3180:
  8504   001DCE  0E01               	movlw	1
  8505   001DD0  2628               	addwf	___fldiv@b^0,f,c
  8506   001DD2  0E00               	movlw	0
  8507   001DD4  2229               	addwfc	(___fldiv@b+1)^0,f,c
  8508   001DD6  222A               	addwfc	(___fldiv@b+2)^0,f,c
  8509   001DD8  222B               	addwfc	(___fldiv@b+3)^0,f,c
  8510   001DDA  A02B               	btfss	(___fldiv@b+3)^0,0,c
  8511   001DDC  EFF2  F00E         	goto	u3191
  8512   001DE0  EFF4  F00E         	goto	u3190
  8513   001DE4                     u3191:
  8514   001DE4  EF0B  F00F         	goto	l3131
  8515   001DE8                     u3190:
  8516   001DE8  C028  F030         	movff	___fldiv@b,??___fldiv
  8517   001DEC  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  8518   001DF0  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  8519   001DF4  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  8520   001DF8  3433               	rlcf	(??___fldiv+3)^0,w,c
  8521   001DFA  3233               	rrcf	(??___fldiv+3)^0,f,c
  8522   001DFC  3232               	rrcf	(??___fldiv+2)^0,f,c
  8523   001DFE  3231               	rrcf	(??___fldiv+1)^0,f,c
  8524   001E00  3230               	rrcf	??___fldiv^0,f,c
  8525   001E02  C030  F028         	movff	??___fldiv,___fldiv@b
  8526   001E06  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  8527   001E0A  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  8528   001E0E  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  8529   001E12  4A39               	infsnz	___fldiv@new_exp^0,f,c
  8530   001E14  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  8531   001E16                     l3131:
  8532   001E16  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8533   001E18  EF16  F00F         	goto	u3201
  8534   001E1C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  8535   001E1E  E108               	bnz	u3200
  8536   001E20  2839               	incf	___fldiv@new_exp^0,w,c
  8537   001E22  A0D8               	btfss	status,0,c
  8538   001E24  EF16  F00F         	goto	u3201
  8539   001E28  EF18  F00F         	goto	u3200
  8540   001E2C                     u3201:
  8541   001E2C  EF23  F00F         	goto	l3135
  8542   001E30                     u3200:
  8543   001E30  0E00               	movlw	0
  8544   001E32  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  8545   001E34  6839               	setf	___fldiv@new_exp^0,c
  8546   001E36  0E00               	movlw	0
  8547   001E38  6E28               	movwf	___fldiv@b^0,c
  8548   001E3A  0E00               	movlw	0
  8549   001E3C  6E29               	movwf	(___fldiv@b+1)^0,c
  8550   001E3E  0E00               	movlw	0
  8551   001E40  6E2A               	movwf	(___fldiv@b+2)^0,c
  8552   001E42  0E00               	movlw	0
  8553   001E44  6E2B               	movwf	(___fldiv@b+3)^0,c
  8554   001E46                     l3135:
  8555   001E46  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8556   001E48  EF30  F00F         	goto	u3210
  8557   001E4C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  8558   001E4E  E106               	bnz	u3211
  8559   001E50  0439               	decf	___fldiv@new_exp^0,w,c
  8560   001E52  B0D8               	btfsc	status,0,c
  8561   001E54  EF2E  F00F         	goto	u3211
  8562   001E58  EF30  F00F         	goto	u3210
  8563   001E5C                     u3211:
  8564   001E5C  EF3E  F00F         	goto	l3139
  8565   001E60                     u3210:
  8566   001E60  0E00               	movlw	0
  8567   001E62  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  8568   001E64  0E00               	movlw	0
  8569   001E66  6E39               	movwf	___fldiv@new_exp^0,c
  8570   001E68  0E00               	movlw	0
  8571   001E6A  6E28               	movwf	___fldiv@b^0,c
  8572   001E6C  0E00               	movlw	0
  8573   001E6E  6E29               	movwf	(___fldiv@b+1)^0,c
  8574   001E70  0E00               	movlw	0
  8575   001E72  6E2A               	movwf	(___fldiv@b+2)^0,c
  8576   001E74  0E00               	movlw	0
  8577   001E76  6E2B               	movwf	(___fldiv@b+3)^0,c
  8578   001E78  0E00               	movlw	0
  8579   001E7A  6E38               	movwf	___fldiv@sign^0,c
  8580   001E7C                     l3139:
  8581   001E7C  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  8582   001E80  A03F               	btfss	___fldiv@bexp^0,0,c
  8583   001E82  EF45  F00F         	goto	u3221
  8584   001E86  EF47  F00F         	goto	u3220
  8585   001E8A                     u3221:
  8586   001E8A  EF4A  F00F         	goto	l3145
  8587   001E8E                     u3220:
  8588   001E8E  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  8589   001E90  EF4B  F00F         	goto	l3147
  8590   001E94                     l3145:
  8591   001E94  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  8592   001E96                     l3147:
  8593   001E96  90D8               	bcf	status,0,c
  8594   001E98  303F               	rrcf	___fldiv@bexp^0,w,c
  8595   001E9A  6E2B               	movwf	(___fldiv@b+3)^0,c
  8596   001E9C  EF01  F00E         	goto	l3061
  8597   001EA0                     l803:
  8598   001EA0  0012               	return		;funcret
  8599   001EA2                     __end_of___fldiv:
  8600                           	callstack 0
  8601                           
  8602 ;; *************** function _UART_printf *****************
  8603 ;; Defined at:
  8604 ;;		line 81 in file "./UART.h"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  8607 ;;		 -> STR_5(2), IMPRIMIR@imprimir3(30), 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;		None
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  1    wreg      void 
  8612 ;; Registers used:
  8613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8619 ;;      Params:         2       0       0       0       0       0       0       0       0
  8620 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8622 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8623 ;;Total ram usage:        2 bytes
  8624 ;; Hardware stack levels used: 1
  8625 ;; Hardware stack levels required when called: 1
  8626 ;; This function calls:
  8627 ;;		_UART_write
  8628 ;; This function is called by:
  8629 ;;		_IMPRIMIR
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           	psect	text40
  8634   003572                     __ptext40:
  8635                           	callstack 0
  8636   003572                     _UART_printf:
  8637                           	callstack 28
  8638   003572                     
  8639                           ;./UART.h: 81: void UART_printf(char *cadena);./UART.h: 82: {;./UART.h: 83:     while(*c
      +                          adena !=0x00){
  8640   003572  EFCF  F01A         	goto	l4057
  8641   003576                     l4053:
  8642                           
  8643                           ;./UART.h: 84:         UART_write(*cadena);
  8644   003576  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  8645   00357A  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8646   00357E  6AF8               	clrf	tblptru,c
  8647   003580  0E07               	movlw	(high __ramtop+-1)
  8648   003582  64F7               	cpfsgt	tblptrh,c
  8649   003584  D003               	bra	u4677
  8650   003586  0008               	tblrd		*
  8651   003588  50F5               	movf	tablat,w,c
  8652   00358A  D005               	bra	u4670
  8653   00358C                     u4677:
  8654   00358C  CFF6 FFE9          	movff	tblptrl,fsr0l
  8655   003590  CFF7 FFEA          	movff	tblptrh,fsr0h
  8656   003594  50EF               	movf	indf0,w,c
  8657   003596                     u4670:
  8658   003596  ECEA  F01C         	call	_UART_write
  8659   00359A                     
  8660                           ;./UART.h: 85:         cadena++;
  8661   00359A  4A02               	infsnz	UART_printf@cadena^0,f,c
  8662   00359C  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  8663   00359E                     l4057:
  8664                           
  8665                           ;./UART.h: 83:     while(*cadena !=0x00){
  8666   00359E  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  8667   0035A2  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8668   0035A6  6AF8               	clrf	tblptru,c
  8669   0035A8  0E07               	movlw	(high __ramtop+-1)
  8670   0035AA  64F7               	cpfsgt	tblptrh,c
  8671   0035AC  D003               	bra	u4687
  8672   0035AE  0008               	tblrd		*
  8673   0035B0  50F5               	movf	tablat,w,c
  8674   0035B2  D005               	bra	u4680
  8675   0035B4                     u4687:
  8676   0035B4  CFF6 FFE9          	movff	tblptrl,fsr0l
  8677   0035B8  CFF7 FFEA          	movff	tblptrh,fsr0h
  8678   0035BC  50EF               	movf	indf0,w,c
  8679   0035BE                     u4680:
  8680   0035BE  0900               	iorlw	0
  8681   0035C0  A4D8               	btfss	status,2,c
  8682   0035C2  EFE5  F01A         	goto	u4691
  8683   0035C6  EFE7  F01A         	goto	u4690
  8684   0035CA                     u4691:
  8685   0035CA  EFBB  F01A         	goto	l4053
  8686   0035CE                     u4690:
  8687   0035CE  0012               	return		;funcret
  8688   0035D0                     __end_of_UART_printf:
  8689                           	callstack 0
  8690                           
  8691 ;; *************** function _UART_write *****************
  8692 ;; Defined at:
  8693 ;;		line 75 in file "./UART.h"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;  dato            1    wreg     unsigned char 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;  dato            1    0[COMRAM] unsigned char 
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      void 
  8700 ;; Registers used:
  8701 ;;		wreg
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8707 ;;      Params:         0       0       0       0       0       0       0       0       0
  8708 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8710 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8711 ;;Total ram usage:        1 bytes
  8712 ;; Hardware stack levels used: 1
  8713 ;; This function calls:
  8714 ;;		Nothing
  8715 ;; This function is called by:
  8716 ;;		_UART_printf
  8717 ;;		_putch
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           	psect	text41
  8722   0039D4                     __ptext41:
  8723                           	callstack 0
  8724   0039D4                     _UART_write:
  8725                           	callstack 24
  8726                           
  8727                           ;incstack = 0
  8728                           ;UART_write@dato stored from wreg
  8729   0039D4  6E01               	movwf	UART_write@dato^0,c
  8730   0039D6                     
  8731                           ;./UART.h: 75: void UART_write(char dato);./UART.h: 76: {;./UART.h: 77:     TXREG = dato
      +                          ;
  8732   0039D6  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  8733   0039DA                     l60:
  8734   0039DA  A2AC               	btfss	172,1,c	;volatile
  8735   0039DC  EFF2  F01C         	goto	u2551
  8736   0039E0  EFF4  F01C         	goto	u2550
  8737   0039E4                     u2551:
  8738   0039E4  EFED  F01C         	goto	l60
  8739   0039E8                     u2550:
  8740   0039E8  0012               	return		;funcret
  8741   0039EA                     __end_of_UART_write:
  8742                           	callstack 0
  8743                           
  8744 ;; *************** function _ReadADC *****************
  8745 ;; Defined at:
  8746 ;;		line 26 in file "PARTE3_PARCIAL2.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;  channel         1    wreg     unsigned char 
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;  channel         1    4[COMRAM] unsigned char 
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  2    0[COMRAM] unsigned int 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2, status,0
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8760 ;;      Params:         2       0       0       0       0       0       0       0       0
  8761 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8762 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8763 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8764 ;;Total ram usage:        5 bytes
  8765 ;; Hardware stack levels used: 1
  8766 ;; This function calls:
  8767 ;;		Nothing
  8768 ;; This function is called by:
  8769 ;;		_IMPRIMIR
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773                           	psect	text42
  8774   00390E                     __ptext42:
  8775                           	callstack 0
  8776   00390E                     _ReadADC:
  8777                           	callstack 29
  8778                           
  8779                           ;incstack = 0
  8780                           ;ReadADC@channel stored from wreg
  8781   00390E  6E05               	movwf	ReadADC@channel^0,c
  8782   003910                     
  8783                           ;PARTE3_PARCIAL2.c: 28:     ADCON0 = (channel << 2) | 0x01;
  8784   003910  4405               	rlncf	ReadADC@channel^0,w,c
  8785   003912  46E8               	rlncf	wreg,f,c
  8786   003914  0BFC               	andlw	252
  8787   003916  0901               	iorlw	1
  8788   003918  6EC2               	movwf	194,c	;volatile
  8789   00391A                     
  8790                           ;PARTE3_PARCIAL2.c: 29:     GO_nDONE = 1;
  8791   00391A  82C2               	bsf	4034,1,c	;volatile
  8792   00391C                     l155:
  8793   00391C  B2C2               	btfsc	4034,1,c	;volatile
  8794   00391E  EF93  F01C         	goto	u4741
  8795   003922  EF95  F01C         	goto	u4740
  8796   003926                     u4741:
  8797   003926  EF8E  F01C         	goto	l155
  8798   00392A                     u4740:
  8799   00392A                     
  8800                           ;PARTE3_PARCIAL2.c: 31:     return ((ADRESH << 8) | ADRESL);
  8801   00392A  50C3               	movf	195,w,c	;volatile
  8802   00392C  CFC4 F003          	movff	4036,??_ReadADC	;volatile
  8803   003930  6A04               	clrf	(??_ReadADC+1)^0,c
  8804   003932  C003  F004         	movff	??_ReadADC,??_ReadADC+1
  8805   003936  6A03               	clrf	??_ReadADC^0,c
  8806   003938  1003               	iorwf	??_ReadADC^0,w,c
  8807   00393A  6E01               	movwf	?_ReadADC^0,c
  8808   00393C  5004               	movf	(??_ReadADC+1)^0,w,c
  8809   00393E  6E02               	movwf	(?_ReadADC+1)^0,c
  8810   003940  0012               	return		;funcret
  8811   003942                     __end_of_ReadADC:
  8812                           	callstack 0
  8813                           
  8814 ;; *************** function _LCD_Text *****************
  8815 ;; Defined at:
  8816 ;;		line 732 in file "./LCD_16x2.h"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  pt              2    2[COMRAM] PTR void 
  8819 ;;		 -> STR_4(10), IMPRIMIR@imprimir2(30), STR_2(8), IMPRIMIR@imprimir(10), 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  text            2    4[COMRAM] PTR unsigned char 
  8822 ;;		 -> STR_4(10), IMPRIMIR@imprimir2(30), STR_2(8), IMPRIMIR@imprimir(10), 
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  1    wreg      void 
  8825 ;; Registers used:
  8826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8832 ;;      Params:         2       0       0       0       0       0       0       0       0
  8833 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8835 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8836 ;;Total ram usage:        4 bytes
  8837 ;; Hardware stack levels used: 1
  8838 ;; Hardware stack levels required when called: 1
  8839 ;; This function calls:
  8840 ;;		_LCD_Busy
  8841 ;;		_LCD_Write
  8842 ;; This function is called by:
  8843 ;;		_IMPRIMIR
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           	psect	text43
  8848   003350                     __ptext43:
  8849                           	callstack 0
  8850   003350                     _LCD_Text:
  8851                           	callstack 28
  8852   003350                     
  8853                           ;./LCD_16x2.h: 733:     unsigned char *text = pt;
  8854   003350  C003  F005         	movff	LCD_Text@pt,LCD_Text@text
  8855   003354  C004  F006         	movff	LCD_Text@pt+1,LCD_Text@text+1
  8856                           
  8857                           ;./LCD_16x2.h: 734:     while (*text) {
  8858   003358  EFCF  F019         	goto	l4067
  8859   00335C                     l4061:
  8860   00335C  ECE8  F01A         	call	_LCD_Busy	;wreg free
  8861   003360  0900               	iorlw	0
  8862   003362  A4D8               	btfss	status,2,c
  8863   003364  EFB6  F019         	goto	u4701
  8864   003368  EFB8  F019         	goto	u4700
  8865   00336C                     u4701:
  8866   00336C  EFAE  F019         	goto	l4061
  8867   003370                     u4700:
  8868   003370  8689               	bsf	137,3,c	;volatile
  8869   003372  0E01               	movlw	1
  8870   003374  6E01               	movwf	LCD_Write@mode^0,c
  8871   003376  C005  FFF6         	movff	LCD_Text@text,tblptrl
  8872   00337A  C006  FFF7         	movff	LCD_Text@text+1,tblptrh
  8873   00337E  6AF8               	clrf	tblptru,c
  8874   003380  0E07               	movlw	(high __ramtop+-1)
  8875   003382  64F7               	cpfsgt	tblptrh,c
  8876   003384  D003               	bra	u4717
  8877   003386  0008               	tblrd		*
  8878   003388  50F5               	movf	tablat,w,c
  8879   00338A  D005               	bra	u4710
  8880   00338C                     u4717:
  8881   00338C  CFF6 FFE9          	movff	tblptrl,fsr0l
  8882   003390  CFF7 FFEA          	movff	tblptrh,fsr0h
  8883   003394  50EF               	movf	indf0,w,c
  8884   003396                     u4710:
  8885   003396  EC22  F019         	call	_LCD_Write
  8886   00339A                     
  8887                           ;./LCD_16x2.h: 736:         text++;
  8888   00339A  4A05               	infsnz	LCD_Text@text^0,f,c
  8889   00339C  2A06               	incf	(LCD_Text@text+1)^0,f,c
  8890   00339E                     l4067:
  8891                           
  8892                           ;./LCD_16x2.h: 734:     while (*text) {
  8893   00339E  C005  FFF6         	movff	LCD_Text@text,tblptrl
  8894   0033A2  C006  FFF7         	movff	LCD_Text@text+1,tblptrh
  8895   0033A6  6AF8               	clrf	tblptru,c
  8896   0033A8  0E07               	movlw	(high __ramtop+-1)
  8897   0033AA  64F7               	cpfsgt	tblptrh,c
  8898   0033AC  D003               	bra	u4727
  8899   0033AE  0008               	tblrd		*
  8900   0033B0  50F5               	movf	tablat,w,c
  8901   0033B2  D005               	bra	u4720
  8902   0033B4                     u4727:
  8903   0033B4  CFF6 FFE9          	movff	tblptrl,fsr0l
  8904   0033B8  CFF7 FFEA          	movff	tblptrh,fsr0h
  8905   0033BC  50EF               	movf	indf0,w,c
  8906   0033BE                     u4720:
  8907   0033BE  0900               	iorlw	0
  8908   0033C0  A4D8               	btfss	status,2,c
  8909   0033C2  EFE5  F019         	goto	u4731
  8910   0033C6  EFE7  F019         	goto	u4730
  8911   0033CA                     u4731:
  8912   0033CA  EFAE  F019         	goto	l4061
  8913   0033CE                     u4730:
  8914   0033CE  0012               	return		;funcret
  8915   0033D0                     __end_of_LCD_Text:
  8916                           	callstack 0
  8917                           
  8918 ;; *************** function _LCD_Write *****************
  8919 ;; Defined at:
  8920 ;;		line 707 in file "./LCD_16x2.h"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;  value           1    wreg     unsigned char 
  8923 ;;  mode            1    0[COMRAM] unsigned char 
  8924 ;; Auto vars:     Size  Location     Type
  8925 ;;  value           1    1[COMRAM] unsigned char 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  1    wreg      void 
  8928 ;; Registers used:
  8929 ;;		wreg, status,2
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8935 ;;      Params:         1       0       0       0       0       0       0       0       0
  8936 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8938 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8939 ;;Total ram usage:        2 bytes
  8940 ;; Hardware stack levels used: 1
  8941 ;; This function calls:
  8942 ;;		Nothing
  8943 ;; This function is called by:
  8944 ;;		_LCD_Init
  8945 ;;		_LCD_Text
  8946 ;;		_IMPRIMIR
  8947 ;;		_LCD_CustomChar
  8948 ;;		_LCD_print_number
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           	psect	text44
  8953   003244                     __ptext44:
  8954                           	callstack 0
  8955   003244                     _LCD_Write:
  8956                           	callstack 29
  8957                           
  8958                           ;incstack = 0
  8959                           ;LCD_Write@value stored from wreg
  8960   003244  6E02               	movwf	LCD_Write@value^0,c
  8961   003246                     
  8962                           ;./LCD_16x2.h: 708:     LCD_data.all = value;
  8963   003246  C002  F0E7         	movff	LCD_Write@value,_LCD_data
  8964   00324A                     
  8965                           ;./LCD_16x2.h: 710:     LATAbits.LATA1 = 0;
  8966   00324A  9289               	bcf	137,1,c	;volatile
  8967   00324C                     
  8968                           ;./LCD_16x2.h: 712:     LATAbits.LATA7 = LCD_data.bit7;
  8969   00324C  0100               	movlb	0	; () banked
  8970   00324E  AFE7               	btfss	_LCD_data& (0+255),7,b
  8971   003250  D002               	bra	u4435
  8972   003252  8E89               	bsf	137,7,c	;volatile
  8973   003254  D001               	bra	u4437
  8974   003256                     u4435:
  8975   003256  9E89               	bcf	137,7,c	;volatile
  8976   003258                     u4437:
  8977   003258                     
  8978                           ;./LCD_16x2.h: 713:     LATAbits.LATA6 = LCD_data.bit6;
  8979   003258  0100               	movlb	0	; () banked
  8980   00325A  ADE7               	btfss	_LCD_data& (0+255),6,b
  8981   00325C  D002               	bra	u4445
  8982   00325E  8C89               	bsf	137,6,c	;volatile
  8983   003260  D001               	bra	u4447
  8984   003262                     u4445:
  8985   003262  9C89               	bcf	137,6,c	;volatile
  8986   003264                     u4447:
  8987   003264                     
  8988                           ;./LCD_16x2.h: 714:     LATAbits.LATA5 = LCD_data.bit5;
  8989   003264  0100               	movlb	0	; () banked
  8990   003266  ABE7               	btfss	_LCD_data& (0+255),5,b
  8991   003268  D002               	bra	u4455
  8992   00326A  8A89               	bsf	137,5,c	;volatile
  8993   00326C  D001               	bra	u4457
  8994   00326E                     u4455:
  8995   00326E  9A89               	bcf	137,5,c	;volatile
  8996   003270                     u4457:
  8997   003270                     
  8998                           ;./LCD_16x2.h: 715:     LATAbits.LATA4 = LCD_data.bit4;
  8999   003270  0100               	movlb	0	; () banked
  9000   003272  A9E7               	btfss	_LCD_data& (0+255),4,b
  9001   003274  D002               	bra	u4465
  9002   003276  8889               	bsf	137,4,c	;volatile
  9003   003278  D001               	bra	u4467
  9004   00327A                     u4465:
  9005   00327A  9889               	bcf	137,4,c	;volatile
  9006   00327C                     u4467:
  9007   00327C                     
  9008                           ;./LCD_16x2.h: 717:     LATAbits.LATA2 = 1; _delay((unsigned long)((1)*(16000000/4000000
      +                          .0))); LATAbits.LATA2 = 0;;
  9009   00327C  8489               	bsf	137,2,c	;volatile
  9010   00327E  D000               	nop2		;2 cycle nop
  9011   003280  D000               	nop2		;2 cycle nop
  9012   003282  9489               	bcf	137,2,c	;volatile
  9013   003284                     
  9014                           ;./LCD_16x2.h: 718:     if (mode) {
  9015   003284  5001               	movf	LCD_Write@mode^0,w,c
  9016   003286  B4D8               	btfsc	status,2,c
  9017   003288  EF48  F019         	goto	u4471
  9018   00328C  EF4A  F019         	goto	u4470
  9019   003290                     u4471:
  9020   003290  EF66  F019         	goto	l105
  9021   003294                     u4470:
  9022   003294                     
  9023                           ;./LCD_16x2.h: 720:         LATAbits.LATA7 = LCD_data.bit3;
  9024   003294  0100               	movlb	0	; () banked
  9025   003296  A7E7               	btfss	_LCD_data& (0+255),3,b
  9026   003298  D002               	bra	u4485
  9027   00329A  8E89               	bsf	137,7,c	;volatile
  9028   00329C  D001               	bra	u4487
  9029   00329E                     u4485:
  9030   00329E  9E89               	bcf	137,7,c	;volatile
  9031   0032A0                     u4487:
  9032                           
  9033                           ;./LCD_16x2.h: 721:         LATAbits.LATA6 = LCD_data.bit2;
  9034   0032A0  0100               	movlb	0	; () banked
  9035   0032A2  A5E7               	btfss	_LCD_data& (0+255),2,b
  9036   0032A4  D002               	bra	u4495
  9037   0032A6  8C89               	bsf	137,6,c	;volatile
  9038   0032A8  D001               	bra	u4497
  9039   0032AA                     u4495:
  9040   0032AA  9C89               	bcf	137,6,c	;volatile
  9041   0032AC                     u4497:
  9042                           
  9043                           ;./LCD_16x2.h: 722:         LATAbits.LATA5 = LCD_data.bit1;
  9044   0032AC  0100               	movlb	0	; () banked
  9045   0032AE  A3E7               	btfss	_LCD_data& (0+255),1,b
  9046   0032B0  D002               	bra	u4505
  9047   0032B2  8A89               	bsf	137,5,c	;volatile
  9048   0032B4  D001               	bra	u4507
  9049   0032B6                     u4505:
  9050   0032B6  9A89               	bcf	137,5,c	;volatile
  9051   0032B8                     u4507:
  9052                           
  9053                           ;./LCD_16x2.h: 723:         LATAbits.LATA4 = LCD_data.bit0;
  9054   0032B8  0100               	movlb	0	; () banked
  9055   0032BA  A1E7               	btfss	_LCD_data& (0+255),0,b
  9056   0032BC  D002               	bra	u4515
  9057   0032BE  8889               	bsf	137,4,c	;volatile
  9058   0032C0  D001               	bra	u4517
  9059   0032C2                     u4515:
  9060   0032C2  9889               	bcf	137,4,c	;volatile
  9061   0032C4                     u4517:
  9062                           
  9063                           ;./LCD_16x2.h: 724:         LATAbits.LATA2 = 1; _delay((unsigned long)((1)*(16000000/400
      +                          0000.0))); LATAbits.LATA2 = 0;;
  9064   0032C4  8489               	bsf	137,2,c	;volatile
  9065   0032C6  D000               	nop2		;2 cycle nop
  9066   0032C8  D000               	nop2		;2 cycle nop
  9067   0032CA  9489               	bcf	137,2,c	;volatile
  9068   0032CC                     l105:
  9069   0032CC  0012               	return		;funcret
  9070   0032CE                     __end_of_LCD_Write:
  9071                           	callstack 0
  9072                           
  9073 ;; *************** function _LCD_Busy *****************
  9074 ;; Defined at:
  9075 ;;		line 775 in file "./LCD_16x2.h"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;		None
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;		None
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      unsigned char 
  9082 ;; Registers used:
  9083 ;;		wreg, status,2, status,0
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9089 ;;      Params:         0       0       0       0       0       0       0       0       0
  9090 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9092 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9093 ;;Total ram usage:        0 bytes
  9094 ;; Hardware stack levels used: 1
  9095 ;; This function calls:
  9096 ;;		Nothing
  9097 ;; This function is called by:
  9098 ;;		_LCD_Init
  9099 ;;		_LCD_Text
  9100 ;;		_IMPRIMIR
  9101 ;;		_LCD_CustomChar
  9102 ;;		_LCD_print_number
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           	psect	text45
  9107   0035D0                     __ptext45:
  9108                           	callstack 0
  9109   0035D0                     _LCD_Busy:
  9110                           	callstack 29
  9111   0035D0                     
  9112                           ;./LCD_16x2.h: 777:     if (LCD_busy_cnt >= 100) {
  9113   0035D0  0E63               	movlw	99
  9114   0035D2  0100               	movlb	0	; () banked
  9115   0035D4  65E6               	cpfsgt	_LCD_busy_cnt& (0+255),b
  9116   0035D6  EFEF  F01A         	goto	u4521
  9117   0035DA  EFF1  F01A         	goto	u4520
  9118   0035DE                     u4521:
  9119   0035DE  EFF6  F01A         	goto	l145
  9120   0035E2                     u4520:
  9121   0035E2                     l3945:
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;./LCD_16x2.h: 778:         LCD_busy_cnt = 1;
  9125   0035E2  0E01               	movlw	1
  9126   0035E4  6FE6               	movwf	_LCD_busy_cnt& (0+255),b
  9127   0035E6                     
  9128                           ; BSR set to: 0
  9129                           ;./LCD_16x2.h: 779:         return 0;
  9130   0035E6  0E00               	movlw	0
  9131   0035E8  EF16  F01B         	goto	l146
  9132   0035EC                     l145:
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;./LCD_16x2.h: 782:     LATAbits.LATA1 = 1;
  9136   0035EC  8289               	bsf	137,1,c	;volatile
  9137                           
  9138                           ;./LCD_16x2.h: 783:     LATAbits.LATA3 = 0;
  9139   0035EE  9689               	bcf	137,3,c	;volatile
  9140   0035F0                     
  9141                           ; BSR set to: 0
  9142                           ;./LCD_16x2.h: 784:     TRISA |= 0xF0;
  9143   0035F0  0EF0               	movlw	240
  9144   0035F2  1292               	iorwf	146,f,c	;volatile
  9145   0035F4                     
  9146                           ; BSR set to: 0
  9147                           ;./LCD_16x2.h: 785:     LATAbits.LATA2 = 1;;
  9148   0035F4  8489               	bsf	137,2,c	;volatile
  9149   0035F6                     
  9150                           ; BSR set to: 0
  9151                           ;./LCD_16x2.h: 786:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  9152   0035F6  D000               	nop2		;2 cycle nop
  9153   0035F8  D000               	nop2		;2 cycle nop
  9154   0035FA                     
  9155                           ;./LCD_16x2.h: 787:     LCD_data.bit7 = PORTAbits.RA7;
  9156   0035FA  AE80               	btfss	128,7,c	;volatile
  9157   0035FC  D003               	bra	u4535
  9158   0035FE  0100               	movlb	0	; () banked
  9159   003600  8FE7               	bsf	_LCD_data& (0+255),7,b
  9160   003602  D002               	bra	u4537
  9161   003604                     u4535:
  9162   003604  0100               	movlb	0	; () banked
  9163   003606  9FE7               	bcf	_LCD_data& (0+255),7,b
  9164   003608                     u4537:
  9165   003608                     
  9166                           ; BSR set to: 0
  9167                           ;./LCD_16x2.h: 788:     LATAbits.LATA2 = 0;;
  9168   003608  9489               	bcf	137,2,c	;volatile
  9169   00360A                     
  9170                           ; BSR set to: 0
  9171                           ;./LCD_16x2.h: 789:     LATAbits.LATA2 = 1;;
  9172   00360A  8489               	bsf	137,2,c	;volatile
  9173   00360C                     
  9174                           ; BSR set to: 0
  9175                           ;./LCD_16x2.h: 790:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  9176   00360C  D000               	nop2		;2 cycle nop
  9177   00360E  D000               	nop2		;2 cycle nop
  9178   003610                     
  9179                           ;./LCD_16x2.h: 791:     LATAbits.LATA2 = 0;;
  9180   003610  9489               	bcf	137,2,c	;volatile
  9181                           
  9182                           ;./LCD_16x2.h: 793:     TRISA &= 0x0F;
  9183   003612  0E0F               	movlw	15
  9184   003614  1692               	andwf	146,f,c	;volatile
  9185   003616                     
  9186                           ;./LCD_16x2.h: 794:     LATAbits.LATA1 = 0;
  9187   003616  9289               	bcf	137,1,c	;volatile
  9188   003618                     
  9189                           ;./LCD_16x2.h: 797:     if (LCD_data.bit7 == 1) {
  9190   003618  0100               	movlb	0	; () banked
  9191   00361A  AFE7               	btfss	_LCD_data& (0+255),7,b
  9192   00361C  EF12  F01B         	goto	u4541
  9193   003620  EF14  F01B         	goto	u4540
  9194   003624                     u4541:
  9195   003624  EFF1  F01A         	goto	l3945
  9196   003628                     u4540:
  9197   003628                     
  9198                           ; BSR set to: 0
  9199                           ;./LCD_16x2.h: 798:         LCD_busy_cnt++;
  9200   003628  2BE6               	incf	_LCD_busy_cnt& (0+255),f,b
  9201   00362A                     
  9202                           ; BSR set to: 0
  9203                           ;./LCD_16x2.h: 799:         return 1;
  9204   00362A  0E01               	movlw	1
  9205   00362C                     l146:
  9206                           
  9207                           ; BSR set to: 0
  9208   00362C  0012               	return		;funcret
  9209   00362E                     __end_of_LCD_Busy:
  9210                           	callstack 0
  9211                           
  9212                           	psect	rparam
  9213   000000                     
  9214                           	psect	idloc
  9215                           
  9216                           ;Config register IDLOC0 @ 0x200000
  9217                           ;	unspecified, using default values
  9218   200000                     	org	2097152
  9219   200000  FF                 	db	255
  9220                           
  9221                           ;Config register IDLOC1 @ 0x200001
  9222                           ;	unspecified, using default values
  9223   200001                     	org	2097153
  9224   200001  FF                 	db	255
  9225                           
  9226                           ;Config register IDLOC2 @ 0x200002
  9227                           ;	unspecified, using default values
  9228   200002                     	org	2097154
  9229   200002  FF                 	db	255
  9230                           
  9231                           ;Config register IDLOC3 @ 0x200003
  9232                           ;	unspecified, using default values
  9233   200003                     	org	2097155
  9234   200003  FF                 	db	255
  9235                           
  9236                           ;Config register IDLOC4 @ 0x200004
  9237                           ;	unspecified, using default values
  9238   200004                     	org	2097156
  9239   200004  FF                 	db	255
  9240                           
  9241                           ;Config register IDLOC5 @ 0x200005
  9242                           ;	unspecified, using default values
  9243   200005                     	org	2097157
  9244   200005  FF                 	db	255
  9245                           
  9246                           ;Config register IDLOC6 @ 0x200006
  9247                           ;	unspecified, using default values
  9248   200006                     	org	2097158
  9249   200006  FF                 	db	255
  9250                           
  9251                           ;Config register IDLOC7 @ 0x200007
  9252                           ;	unspecified, using default values
  9253   200007                     	org	2097159
  9254   200007  FF                 	db	255
  9255                           
  9256                           	psect	config
  9257                           
  9258                           ;Config register CONFIG1L @ 0x300000
  9259                           ;	PLL Selection
  9260                           ;	PLLSEL = PLL4X, 4x clock multiplier
  9261                           ;	PLL Enable Configuration bit
  9262                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  9263                           ;	CPU System Clock Postscaler
  9264                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  9265                           ;	Low Speed USB mode with 48 MHz system clock
  9266                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  9267   300000                     	org	3145728
  9268   300000  00                 	db	0
  9269                           
  9270                           ;Config register CONFIG1H @ 0x300001
  9271                           ;	Oscillator Selection
  9272                           ;	FOSC = INTOSCIO, Internal oscillator
  9273                           ;	Primary Oscillator Shutdown
  9274                           ;	PCLKEN = ON, Primary oscillator enabled
  9275                           ;	Fail-Safe Clock Monitor
  9276                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9277                           ;	Internal/External Oscillator Switchover
  9278                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9279   300001                     	org	3145729
  9280   300001  28                 	db	40
  9281                           
  9282                           ;Config register CONFIG2L @ 0x300002
  9283                           ;	Power-up Timer Enable
  9284                           ;	nPWRTEN = OFF, Power up timer disabled
  9285                           ;	Brown-out Reset Enable
  9286                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  9287                           ;	Brown-out Reset Voltage
  9288                           ;	BORV = 190, BOR set to 1.9V nominal
  9289                           ;	Low-Power Brown-out Reset
  9290                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  9291   300002                     	org	3145730
  9292   300002  5F                 	db	95
  9293                           
  9294                           ;Config register CONFIG2H @ 0x300003
  9295                           ;	Watchdog Timer Enable bits
  9296                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  9297                           ;	Watchdog Timer Postscaler
  9298                           ;	WDTPS = 32768, 1:32768
  9299   300003                     	org	3145731
  9300   300003  3C                 	db	60
  9301                           
  9302                           ; Padding undefined space
  9303   300004                     	org	3145732
  9304   300004  FF                 	db	255
  9305                           
  9306                           ;Config register CONFIG3H @ 0x300005
  9307                           ;	CCP2 MUX bit
  9308                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  9309                           ;	PORTB A/D Enable bit
  9310                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  9311                           ;	Timer3 Clock Input MUX bit
  9312                           ;	T3CMX = RC0, T3CKI function is on RC0
  9313                           ;	SDO Output MUX bit
  9314                           ;	SDOMX = RB3, SDO function is on RB3
  9315                           ;	Master Clear Reset Pin Enable
  9316                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  9317   300005                     	org	3145733
  9318   300005  D1                 	db	209
  9319                           
  9320                           ;Config register CONFIG4L @ 0x300006
  9321                           ;	Stack Full/Underflow Reset
  9322                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9323                           ;	Single-Supply ICSP Enable bit
  9324                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  9325                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  9326                           ;	ICPRT = OFF, ICPORT disabled
  9327                           ;	Extended Instruction Set Enable bit
  9328                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  9329                           ;	Background Debugger Enable bit
  9330                           ;	DEBUG = 0x1, unprogrammed default
  9331   300006                     	org	3145734
  9332   300006  85                 	db	133
  9333                           
  9334                           ; Padding undefined space
  9335   300007                     	org	3145735
  9336   300007  FF                 	db	255
  9337                           
  9338                           ;Config register CONFIG5L @ 0x300008
  9339                           ;	Block 0 Code Protect
  9340                           ;	CP0 = OFF, Block 0 is not code-protected
  9341                           ;	Block 1 Code Protect
  9342                           ;	CP1 = OFF, Block 1 is not code-protected
  9343                           ;	Block 2 Code Protect
  9344                           ;	CP2 = OFF, Block 2 is not code-protected
  9345                           ;	Block 3 Code Protect
  9346                           ;	CP3 = OFF, Block 3 is not code-protected
  9347   300008                     	org	3145736
  9348   300008  0F                 	db	15
  9349                           
  9350                           ;Config register CONFIG5H @ 0x300009
  9351                           ;	Boot Block Code Protect
  9352                           ;	CPB = OFF, Boot block is not code-protected
  9353                           ;	Data EEPROM Code Protect
  9354                           ;	CPD = OFF, Data EEPROM is not code-protected
  9355   300009                     	org	3145737
  9356   300009  C0                 	db	192
  9357                           
  9358                           ;Config register CONFIG6L @ 0x30000A
  9359                           ;	Block 0 Write Protect
  9360                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  9361                           ;	Block 1 Write Protect
  9362                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  9363                           ;	Block 2 Write Protect
  9364                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  9365                           ;	Block 3 Write Protect
  9366                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  9367   30000A                     	org	3145738
  9368   30000A  0F                 	db	15
  9369                           
  9370                           ;Config register CONFIG6H @ 0x30000B
  9371                           ;	Configuration Registers Write Protect
  9372                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9373                           ;	Boot Block Write Protect
  9374                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  9375                           ;	Data EEPROM Write Protect
  9376                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9377   30000B                     	org	3145739
  9378   30000B  E0                 	db	224
  9379                           
  9380                           ;Config register CONFIG7L @ 0x30000C
  9381                           ;	Block 0 Table Read Protect
  9382                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  9383                           ;	Block 1 Table Read Protect
  9384                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  9385                           ;	Block 2 Table Read Protect
  9386                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  9387                           ;	Block 3 Table Read Protect
  9388                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  9389   30000C                     	org	3145740
  9390   30000C  0F                 	db	15
  9391                           
  9392                           ;Config register CONFIG7H @ 0x30000D
  9393                           ;	Boot Block Table Read Protect
  9394                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  9395   30000D                     	org	3145741
  9396   30000D  40                 	db	64
  9397                           tosu	equ	0xFFF
  9398                           tosh	equ	0xFFE
  9399                           tosl	equ	0xFFD
  9400                           stkptr	equ	0xFFC
  9401                           pclatu	equ	0xFFB
  9402                           pclath	equ	0xFFA
  9403                           pcl	equ	0xFF9
  9404                           tblptru	equ	0xFF8
  9405                           tblptrh	equ	0xFF7
  9406                           tblptrl	equ	0xFF6
  9407                           tablat	equ	0xFF5
  9408                           prodh	equ	0xFF4
  9409                           prodl	equ	0xFF3
  9410                           indf0	equ	0xFEF
  9411                           postinc0	equ	0xFEE
  9412                           postdec0	equ	0xFED
  9413                           preinc0	equ	0xFEC
  9414                           plusw0	equ	0xFEB
  9415                           fsr0h	equ	0xFEA
  9416                           fsr0l	equ	0xFE9
  9417                           wreg	equ	0xFE8
  9418                           indf1	equ	0xFE7
  9419                           postinc1	equ	0xFE6
  9420                           postdec1	equ	0xFE5
  9421                           preinc1	equ	0xFE4
  9422                           plusw1	equ	0xFE3
  9423                           fsr1h	equ	0xFE2
  9424                           fsr1l	equ	0xFE1
  9425                           bsr	equ	0xFE0
  9426                           indf2	equ	0xFDF
  9427                           postinc2	equ	0xFDE
  9428                           postdec2	equ	0xFDD
  9429                           preinc2	equ	0xFDC
  9430                           plusw2	equ	0xFDB
  9431                           fsr2h	equ	0xFDA
  9432                           fsr2l	equ	0xFD9
  9433                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        120
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     89     136
    BANK1           256    160     244
    BANK2           256      0      90
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 30
		 -> IMPRIMIR@imprimir3(BANK1[30]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 30
		 -> IMPRIMIR@imprimir3(BANK1[30]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), IMPRIMIR@imprimir3(BANK1[30]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), IMPRIMIR@imprimir3(BANK1[30]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_9(CODE[4]), STR_6(CODE[4]), IMPRIMIR@imprimir2(BANK1[30]), IMPRIMIR@imprimir(BANK1[10]), 
		 -> IMPRIMIR@imprimir6(BANK1[30]), IMPRIMIR@imprimir5(BANK1[30]), IMPRIMIR@imprimir4(BANK1[30]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_9(CODE[4]), STR_6(CODE[4]), IMPRIMIR@imprimir2(BANK1[30]), IMPRIMIR@imprimir(BANK1[10]), 
		 -> IMPRIMIR@imprimir6(BANK1[30]), IMPRIMIR@imprimir5(BANK1[30]), IMPRIMIR@imprimir4(BANK1[30]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 30
		 -> IMPRIMIR@imprimir2(BANK1[30]), IMPRIMIR@imprimir(BANK1[10]), IMPRIMIR@imprimir6(BANK1[30]), IMPRIMIR@imprimir5(BANK1[30]), 
		 -> IMPRIMIR@imprimir4(BANK1[30]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 30
		 -> IMPRIMIR@imprimir3(BANK1[30]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_1(CODE[3]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1122$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), IMPRIMIR@imprimir3(BANK1[30]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> IMPRIMIR@imprimir2(BANK1[30]), IMPRIMIR@imprimir(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1032$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1032$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 30
		 -> IMPRIMIR@imprimir3(BANK1[30]), 

    LCD_Text@pt	PTR void  size(2) Largest target is 30
		 -> STR_4(CODE[10]), IMPRIMIR@imprimir2(BANK1[30]), STR_2(CODE[8]), IMPRIMIR@imprimir(BANK1[10]), 

    LCD_Text@text	PTR unsigned char  size(2) Largest target is 30
		 -> STR_4(CODE[10]), IMPRIMIR@imprimir2(BANK1[30]), STR_2(CODE[8]), IMPRIMIR@imprimir(BANK1[10]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 30
		 -> STR_5(CODE[2]), IMPRIMIR@imprimir3(BANK1[30]), 


Critical Paths under _main in COMRAM

    _UART_init_baud->___aldiv
    _LCD_Init->_LCD_Write
    _strcat->_strcpy
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _strcpy->_strlen
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART_write
    _abs->___awmod
    _VOLTAJE->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _UART_printf->_UART_write
    _LCD_Text->_LCD_Write

Critical Paths under _main in BANK0

    _main->_IMPRIMIR
    _IMPRIMIR->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_IMPRIMIR

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   39976
                           _IMPRIMIR
                           _LCD_Init
                              _Setup
                     _UART_init_baud
 ---------------------------------------------------------------------------------
 (1) _UART_init_baud                                       9     5      4     748
                                             14 COMRAM     9     5      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
                     _SetupOscilador
                           _Setupint
                         _Setupports
 ---------------------------------------------------------------------------------
 (2) _Setupports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Setupint                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetupOscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    1488
                                              2 COMRAM     1     1      0
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _IMPRIMIR                                           162   162      0   37740
                                             87 BANK0      2     2      0
                                              0 BANK1    160   160      0
                           _LCD_Busy
                           _LCD_Text
                          _LCD_Write
                            _ReadADC
                        _UART_printf
                            _VOLTAJE
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    1550
                                             14 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8   26910
                                             65 BANK0     22    14      8
                            _VOLTAJE (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   26401
                                             57 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6   26039
                                             93 COMRAM     2     2      0
                                             44 BANK0     13     7      6
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     5      4     643
                                              6 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   19353
                                             84 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                              10     6      4     552
                                              4 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4398
                                             29 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2771
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     975
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     726
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _VOLTAJE                                              8     4      4    5335
                                             64 COMRAM     8     4      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2656
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2     219
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (7) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Text                                             4     2      2    1860
                                              2 COMRAM     4     2      2
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            2     1      1    1488
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IMPRIMIR
     _LCD_Busy
     _LCD_Text
       _LCD_Busy
       _LCD_Write
     _LCD_Write
     _ReadADC
     _UART_printf
       _UART_write
     _VOLTAJE
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___xxtofl
     _sprintf
       _VOLTAJE (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
                   _UART_write
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
               _strlen (ARG)
           _fputc
           _read_prec_or_width
             ___wmul
     _strcat
       _strcpy
       _strlen
   _LCD_Init
     _LCD_Busy
     _LCD_Write
   _Setup
     _SetupOscilador
     _Setupint
     _Setupports
   _UART_init_baud
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      5A       9       35.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A0      F4       7       95.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      88       5       85.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllll       2D      0       0      27        0.0%
BITBIGSFRhhhhhh     2C      0       0      20        0.0%
BITBIGSFRhhhl       10      0       0      22        0.0%
BITBIGSFRhhhhhl      E      0       0      21        0.0%
BITBIGSFRhlh         C      0       0      23        0.0%
BITBIGSFRhll         9      0       0      24        0.0%
BITBIGSFRlllh        8      0       0      26        0.0%
BITBIGSFRllh         8      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     235      28        0.0%
DATA                 0      0     235       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Dec 05 23:20:17 2023

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        l51 3570                          l60 39DA                          l63 39E8  
                        l72 3A10                          l91 2A0E                          l69 35CE  
                        l94 2A34                          l88 29E8                          l97 2A54  
              ___awdiv@sign 0006         ___wmul@multiplicand 0003                         l100 2A74  
                       l101 2A80                         l112 3370                         l105 32CC  
                       l114 33CE                         l212 39F8                         l300 2B8C  
                       l221 39B4                         l215 3A18                         l145 35EC  
                       l161 334E                         l209 3A16                         l146 362C  
                       l218 3A06                         l155 391C                         l180 228C  
                       l158 3940                         l166 21C4                         l183 22EA  
                       _ADC 01A2                         l177 2260                         l186 2316  
                       l452 30E8                         l188 23DC                         l518 2C92  
                       l480 3242                         l465 3198                         l803 1EA0  
                       l491 2D96                         l805 1D00                         l814 1D46  
                       l486 2D50                         l750 13FA                         l495 38D6  
                       l751 13C0                         l816 1DBE                         l808 1CC4  
                       l817 1DAC                         l842 1998                         l835 17A2  
                       l931 33F2                         l852 1AC8                         l844 1A10  
                       l940 27EC                         l845 19FE                         l749 140C  
                       l942 27F4                         l766 1526                         l758 16DC  
                       l839 1B06                         l935 3448                         l943 283A  
                       l775 15F6                         l791 381A                         l776 15E4  
                       l890 273A                         l954 2938                         l970 09FE  
                       l883 26DE                         l876 2646                         l965 121C  
                       l879 27A2                         l968 0BB8                         l899 3784  
                       l998 1000                         _abs 3860                         _aux 01A0  
                       _pad 33D0                ___awmod@sign 0006                         wreg 0FE8  
              ___flmul@aexp 0020                ___flmul@bexp 0021                ___flmul@sign 001B  
              ___flmul@temp 0026                ___flmul@prod 0022                ___fltol@exp1 000A  
                      l1010 301C                        l1100 2F5E                        l1014 3024  
                      l1022 21AE                        l1121 3688                        l1115 398E  
                      ?_abs 0007                        l1108 385E                        l1044 3734  
                      l1062 389E                        l1054 2E94                        l1071 2532  
                      l1127 390C                        l1082 34AE                        l1059 3896  
                      l3003 381C                        l3011 3990                        l1068 25EE  
                      l3101 1D10                        l3021 1B22                        l3005 3828  
                      l3013 39AC                        l3103 1D26                        l3111 1D56  
                      l3031 1B56                        l3023 1B24                        l3007 383A  
                      l1079 349E                        l1088 37D4                        l3113 1D64  
                      l3105 1D2C                        l3041 1B88                        l3025 1B34  
                      l3033 1B5E                        l3017 1B08                        l3201 1802  
                      l4001 2694                        l3009 383E                        l3123 1DCE  
                      l3131 1E16                        l3115 1D68                        l3107 1D36  
                      l3051 1BBC                        l3043 1B8A                        l3035 1B6E  
                      l3027 1B44                        l3019 1B14                        l3211 184C  
                      l3203 180E                        l4011 271C                        l4003 26C6  
                      l3141 1E80                        l3133 1E30                        l3125 1DDA  
                      l3117 1D76                        l3109 1D44                        l3061 1C02  
                      l3045 1B9A                        l3053 1BC4                        l3037 1B74  
                      l3029 1B54                        l3221 189E                        l3213 1858  
                      l3205 1826                        l4021 2772                        l4013 272A  
                      l4005 26C8                        l3301 3052                        l4101 2A82  
                      l3143 1E8E                        l3135 1E46                        l3127 1DE8  
                      l3119 1DA4                        l3071 1C2A                        l3063 1C06  
                      l3055 1BD4                        l3047 1BAA                        l3039 1B7A  
                      l3231 191C                        l3223 18AE                        l3215 1868  
                      l3207 1832                        l4023 2782                        l4015 2748  
                      l4007 26D4                        l3311 3080                        l3303 305A  
                      l4031 36E4                        l4111 2AB6                        l4103 2A86  
                      l3145 1E94                        l3137 1E60                        l3129 1E12  
                      l3081 1C78                        l3057 1BEA                        l3049 1BBA  
                      l3241 1996                        l3233 1952                        l3225 18CA  
                      l3217 1874                        l3209 183E                        l3161 16FA  
                      l4025 2790                        l4017 274A                        l4009 2710  
                      l3321 30BA                        l3313 3088                        l3305 305E  
                      l3401 2D3E                        l4033 36F0                        l4041 38D8  
                      l4201 29D4                        l2441 3A12                        l4121 2AF8  
                      l4113 2AC6                        l4105 2A94                        l4051 3572  
                      l3147 1E96                        l3139 1E7C                        l3091 1CC2  
                      l3083 1C88                        l3075 1C3E                        l3059 1BFA  
                      l3067 1C1A                        l3251 19F6                        l3243 19A8  
                      l3235 1960                        l3227 18D6                        l3219 1884  
                      l3171 1740                        l3163 170A                        l3155 16DE  
                      l4027 2792                        l4019 274E                        l3331 30E0  
                      l3323 30BC                        l3315 3096                        l3307 3066  
                      l3403 2D8E                        l3411 38B6                        l4035 370E  
                      l4043 38E4                        l4211 2A1A                        l4203 29EA  
                      l2451 3A18                        l4131 2B4A                        l4123 2B04  
                      l4115 2ACA                        l4107 2AA4                        l4061 335C  
                      l4053 3576                        l3093 1CCE                        l3085 1C90  
                      l3077 1C58                        l3069 1C2A                        l3261 1A64  
                      l3245 19B6                        l3237 197E                        l3229 18F2  
                      l3181 176C                        l3173 1746                        l3165 171A  
                      l3157 16EA                        l3325 30C2                        l3317 309C  
                      l3309 3078                        l3341 3104                        l3405 2D94  
                      l3413 38C6                        l3501 362E                        l4037 372A  
                      l4045 38E8                        l4221 2A60                        l4213 2A20  
                      l4205 29F4                        l2445 39EA                        l4141 2B7C  
                      l4133 2B4C                        l4125 2B12                        l4117 2ADA  
                      l4109 2AA8                        l4063 3372                        l4071 391A  
                      l4055 359A                        l3095 1CEC                        l3087 1CA0  
                      l3079 1C68                        l3271 1ACC                        l3255 1A20  
                      l3263 1A68                        l3247 19BA                        l3239 1988  
                      l3191 17C2                        l3183 177C                        l3175 174C  
                      l3167 172A                        l3159 16F8                        l3319 30B2  
                      l3327 30C8                        l3351 3138                        l3343 3108  
                      l3335 30EA                        l3431 2BF8                        l3423 2BB8  
                      l3511 23FE                        l3503 363E                        l4047 3900  
                      l4231 21D0                        l4223 2A76                        l4215 2A36  
                      l4207 29FA                        l2447 39F6                        l4135 2B56  
                      l4127 2B1C                        l4119 2AF0                        l4065 339A  
                      l4073 392A                        l4057 359E                        l3097 1CEE  
                      l3089 1CB4                        l3281 1AF6                        l3273 1ADC  
                      l3265 1A82                        l3257 1A2C                        l3249 19C8  
                      l3185 178C                        l3177 175A                        l3169 1730  
                      l4081 333E                        l3329 30D8                        l3361 3172  
                      l3353 3140                        l3345 3116                        l3337 30EE  
                      l3409 38A0                        l2801 121E                        l3441 2C28  
                      l3433 2C06                        l3425 2BE2                        l3417 2B8E  
                      l3521 24E6                        l3513 2454                        l3505 344A  
                      l3601 082C                        l4241 2220                        l4233 21E2  
                      l4225 21B0                        l4217 2A40                        l4209 2A10  
                      l2633 39FA                        l4129 2B3A                        l4137 2B5C  
                      l4161 3566                        l4153 355E                        l4145 3512  
                      l4067 339E                        l4059 3350                        l3099 1CFE  
                      l3275 1AEA                        l3267 1A96                        l3259 1A3A  
                      l3195 17D6                        l3187 1792                        l3179 175C  
                      l3291 3026                        l3355 314E                        l3363 3178  
                      l3347 311E                        l3339 30FC                        l3371 319A  
                      l2811 125A                        l2803 122A                        l3451 2C52  
                      l3443 2C32                        l3427 2BE4                        l3419 2BA4  
                      l3531 25CE                        l3523 2522                        l3515 2468  
                      l3507 3468                        l3611 087C                        l3603 083C  
                      l4091 3758                        l4251 2278                        l4243 222E  
                      l4235 21F4                        l4227 21B0                        l4219 2A56  
                      l4171 2946                        l2635 3A02                        l4139 2B6C  
                      l4163 356A                        l4155 3560                        l4147 355C  
                      l4069 3910                        l3277 1AEC                        l3269 1AB0  
                      l3197 17E2                        l3189 17B2                        l4077 32CE  
                      l3293 302A                        l3365 3188                        l3357 3164  
                      l3349 3130                        l3461 33D0                        l3381 323A  
                      l3373 31C8                        l2901 141A                        l2821 128A  
                      l2813 126A                        l2805 1238                        l3285 37D6  
                      l3453 2C62                        l3429 2BF4                        l3533 25DE  
                      l3517 2476                        l3525 2556                        l3509 23DE  
                      l3541 37A6                        l3701 0C10                        l3621 08B8  
                      l3613 0884                        l3605 084A                        l4093 3774  
                      l4085 3736                        l4261 22EC                        l4253 228E  
                      l4245 224C                        l4237 2206                        l4229 21C6  
                      l4181 296C                        l4173 294A                        l4165 356C  
                      l4157 3562                        l4341 395E                        l3279 1AF2  
                      l3199 17EC                        l4079 32CE                        l3295 3038  
                      l3367 3190                        l3359 316C                        l3471 3416  
                      l3463 33DE                        l3551 27B8                        l3383 3240  
                      l3375 31D8                        l3391 2CD2                        l2911 145C  
                      l2903 142A                        l2831 12B4                        l2823 129C  
                      l2815 126C                        l2807 123A                        l3287 37E6  
                      l3455 2C72                        l3439 2C1E                        l3527 2592  
                      l3543 37AA                        l3711 0C5A                        l3703 0C28  
                      l3631 08FE                        l3615 0894                        l3623 08BC  
                      l3607 084E                        l4087 3748                        l4271 232E  
                      l4263 22F6                        l4255 2298                        l4247 2262  
                      l4239 2218                        l4191 299A                        l4183 297C  
                      l4175 2950                        l4167 356E                        l4159 3564  
                      l4335 3942                        l3297 3040                        l3473 3434  
                      l3465 33EA                        l3561 280C                        l3553 27C8  
                      l3377 3206                        l3393 2D00                        l2921 148A  
                      l2913 146A                        l2833 12C4                        l2841 12EE  
                      l2825 129E                        l2809 124A                        l2817 1274  
                      l3457 2C82                        l3449 2C46                        l3481 2DB8  
                      l3529 25A6                        l3545 37B6                        l3537 3786  
                      l3801 1162                        l3713 0C6E                        l3721 0D64  
                      l3705 0C3A                        l3633 0906                        l3625 08E2  
                      l3641 0948                        l3617 08A4                        l3609 0872  
                      l4433 202A                        l4089 3750                        l4097 396A  
                      l4273 2348                        l4265 2302                        l4257 22A4  
                      l4249 226C                        l4193 29A4                        l4185 297E  
                      l4177 2960                        l4169 293A                        l4337 3946  
                      l3299 3044                        l3475 3860                        l3467 33FE  
                      l3571 2842                        l3563 2812                        l3555 27D0  
                      l3379 3216                        l3395 2D10                        l3387 2C94  
                      l2931 14F6                        l2923 1494                        l2915 1476  
                      l2907 143E                        l2851 1326                        l2843 12FE  
                      l2835 12D4                        l2827 12A4                        l2819 1284  
                      l3483 2DF6                        l3491 2E36                        l3539 379A  
                      l3547 37BA                        l3811 11CE                        l3803 116A  
                      l3731 0E30                        l3723 0D82                        l3715 0CD2  
                      l3707 0C42                        l3651 0992                        l3643 096E  
                      l3635 091E                        l3627 08F4                        l3619 08B0  
                      l4435 20E4                        l4275 23AC                        l4267 2318  
                      l4259 22D6                        l4195 29B4                        l4187 2988  
                      l4179 2962                        l4339 395A                        l3477 387A  
                      l3469 3412                        l3581 2890                        l3573 284C  
                      l3565 2822                        l3557 27E0                        l3549 27A4  
                      l3397 2D1E                        l3389 2CC2                        l2933 1506  
                      l2917 147A                        l2909 144E                        l2925 149A  
                      l2861 133A                        l2853 132A                        l2845 1310  
                      l2837 12E4                        l2829 12B2                        l3493 2E48  
                      l3485 2E1E                        l3813 11DE                        l3805 1178  
                      l3741 0EE0                        l3733 0E40                        l3725 0DB6  
                      l3717 0D2A                        l3709 0C4A                        l3661 09C8  
                      l3645 0980                        l3637 0928                        l3629 08F8  
                      l3821 2F60                        l4437 2166                        l4277 23B8  
                      l4269 2322                        l4197 29B6                        l4189 2998  
                      ?_pad 0013                        l2783 39D6                        l2791 2EBA  
                      l3591 2902                        l3575 2852                        l3583 28AC  
                      l3567 282E                        l3559 27FC                        l3399 2D30  
                      l2951 1588                        l2943 1560                        l2927 14C0  
                      l2935 1516                        l2919 1488                        l2871 134E  
                      l2863 133E                        l2855 132E                        l2847 131E  
                      l2839 12E6                        l3487 2E2A                        l3479 2D98  
                      l3815 11F4                        l3807 11A8                        l3751 0F44  
                      l3743 0F14                        l3735 0E50                        l3727 0DE8  
                      l3719 0D5E                        l3671 0A86                        l3647 0984  
                      l3831 2FF4                        l3823 2F68                        l4279 23C4  
                      l4199 29C0                        l3921 3246                        l2785 3A0A  
                      l2793 2EC4                        l3593 2908                        l3585 28C6  
                      l3577 2884                        l3569 2836                        l2953 1590  
                      l2945 156A                        l2937 153C                        l2929 14F4  
                      l2961 15B4                        l2881 1362                        l2873 1352  
                      l2865 1342                        l2857 1332                        l2849 1322  
                      l3497 2E8C                        l3817 11FC                        l3809 11B6  
                      l3761 0FF6                        l3753 0F4A                        l3745 0F28  
                      l3737 0E84                        l3729 0DFE                        l3681 0B46  
                      l3673 0AB8                        l3665 0A0E                        l3649 098A  
                      l3825 2F8C                        l3841 1EE6                        l3833 1EA2  
                      l3931 3270                        l3923 324A                        l2795 2EE2  
                      l2787 2E96                        l3595 2918                        l3587 28D8  
                      l3579 288A                        l2971 1606                        l2963 15B8  
                      l2955 1594                        l2947 1578                        l2939 154C  
                      l2891 13DA                        l2883 138C                        l2875 1356  
                      l2867 1346                        l2859 1336                        l3771 103A  
                      l3763 1012                        l3755 0F52                        l3739 0EDA  
                      l3747 0F2C                        l3691 0BDC                        l3675 0AF6  
                      l3667 0A14                        l3659 09AE                        l3827 2FC6  
                      l3851 1F60                        l3843 1F0A                        l3835 1EC6  
                      l3941 3294                        l3933 327C                        l3925 324C  
                      l2797 2F18                        l2789 2EA8                        l3589 28F2  
                      l2981 166C                        l2973 1612                        l2965 15C6  
                      l2957 15A4                        l2949 157A                        l2893 13DE  
                      l2885 13A8                        l2877 135A                        l2869 134A  
                      l3773 1042                        l3765 1020                        l3781 1062  
                      l3757 0F5E                        l3749 0F3C                        l3693 0BE4  
                      l3677 0B0A                        l3685 0B86                        l3669 0A48  
                      l3829 2FE6                        l3861 1FEA                        l3853 1F7C  
                      l3845 1F18                        l3837 1ED4                        l3951 35F0  
                      l3943 35D0                        l3935 327E                        l3927 3258  
                      l2991 16B4                        l2983 167C                        l2975 1620  
                      l2967 15DC                        l2959 15A6                        l2895 13EC  
                      l2887 13B8                        l2879 135E                        l3791 10E8  
                      l3783 1074                        l3775 1052                        l3767 1030  
                      l3759 0FD6                        l3695 0BEC                        l3687 0BC0  
                      l3679 0B3E                        l3599 0826                        l3863 1FFC  
                      l3871 2014                        l3855 1FC2                        l3847 1F34  
                      l3839 1EE2                        l3961 360A                        l3953 35F4  
                      l3945 35E2                        l3937 3282                        l3929 3264  
                      l2993 16B6                        l2985 169C                        l2977 165A  
                      l2897 13EE                        l2889 13CE                        l3793 111C  
                      l3785 1086                        l3777 1056                        l3769 1034  
                      l3697 0BF0                        l3689 0BD0                        l3881 20D0  
                      l3865 2004                        l3873 2048                        l3849 1F44  
                      l3971 3628                        l3963 360C                        l3955 35F6  
                      l3947 35E6                        l3939 3284                        l2995 16BC  
                      l2987 16A0                        l2979 165C                        l2899 13F8  
                      l3795 1124                        l3787 108A                        l3779 105C  
                      l3699 0C02                        l3891 2148                        l3883 20FA  
                      l3875 2068                        l3867 200C                        l3859 1FDA  
                      l3973 362A                        l3965 3610                        l3957 35FA  
                      l2997 16CA                        l2989 16AE                        l3789 1090  
                      l3797 1128                        l3885 211A                        l3877 209C  
                      l3893 2174                        l3967 3616                        l3959 3608  
                      l3991 2656                        l2999 16CC                        l3799 1146  
                      l3969 3618                        l3993 266C                        l3985 25F2  
                      l3897 2186                        l3987 2602                        l3997 2680  
                      l3989 2610                        l3999 2688                        STR_1 0820  
                      STR_2 080B                        STR_3 0813                        STR_4 0801  
                      STR_5 0823                        STR_6 0818                        STR_9 081C  
                      u3000 1B22                        u3001 1B1E                        u3010 1B34  
                      u3011 1B30                        u3100 1CEC                        u3020 1B44  
                      u3101 1CE8                        u3021 1B40                        u3110 1D10  
                      u3030 1B88                        u3111 1D0C                        u3031 1B84  
                      u3200 1E30                        u3120 1D26                        u3040 1B9A  
                      u4000 28C6                        u3201 1E2C                        u3121 1D22  
                      u3041 1B96                        u4001 28C2                        u3210 1E60  
                      u3130 1D44                        u3050 1BAA                        u4010 28D8  
                      u3211 1E5C                        u3131 1D40                        u3051 1BA6  
                      u4011 28D4                        u3220 1E8E                        u3140 1D64  
                      u3060 1BEA                        u3300 17C2                        u4020 28F2  
                      u4100 0980                        u3221 1E8A                        u3141 1D60  
                      u3061 1BE6                        u3301 17BE                        u4021 28EE  
                      u4101 097C                        u3150 1D76                        u3070 1C2A  
                      u3310 193C                        u3230 16F8                        u4030 2902  
                      u4110 09FA                        u3151 1D72                        u3071 1C26  
                      u3231 16F4                        u4031 28FE                        u4111 09F6  
                      u3160 1DA4                        u3080 1CA0                        u3400 1AB0  
                      u3320 1996                        u3240 170A                        u2600 1238  
                      u4200 0C3A                        u4120 0A86                        u4040 084A  
                      u3161 1DA0                        u3081 1C9C                        u3401 1AAC  
                      u3321 1992                        u3241 1706                        u2601 1234  
                      u4201 0C36                        u4121 0A82                        u4041 0846  
                      u3170 1DBA                        u3090 1CC2                        u3410 1AEA  
                      u3330 19B6                        u3250 171A                        u2610 124A  
                      u4210 0D82                        u4130 0AB8                        u4050 0894  
                      u3171 1DB6                        u3091 1CBE                        u3411 1AE6  
                      u3331 19B2                        u3315 1932                        u3251 1716  
                      u2611 1246                        u4211 0D7E                        u4131 0AB4  
                      u4051 0890                        u3180 1DCE                        u3340 19C8  
                      u3260 175A                        u3420 3038                        u3500 3130  
                      u2700 13A4                        u2620 125A                        u4300 1074  
                      u4220 0DE8                        u4140 0AF6                        u4060 08A4  
                      u3181 1DCA                        u3341 19C4                        u3261 1756  
                      u3421 3034                        u3501 312C                        u2701 139E  
                      u2621 1256                        u4301 1070                        u4221 0DE4  
                      u4141 0AF2                        u4061 08A0                        u2550 39E8  
                      u3190 1DE8                        u3350 19F6                        u3270 176C  
                      u3430 3052                        u3510 314E                        u2710 13A6  
                      u2630 129C                        u4310 1146                        u4230 0E30  
                      u4150 0B82                        u4070 08E2                        u2551 39E4  
                      u3191 1DE4                        u3351 19F2                        u3271 1768  
                      u3431 304E                        u3511 314A                        u2631 1298  
                      u4311 1142                        u4231 0E2C                        u4151 0B7E  
                      u4071 08DE                        u3360 1A0C                        u3280 177C  
                      u3440 3078                        u3520 3164                        u2560 2EA8  
                      u3600 2D3E                        u2800 14C0                        u2720 13CE  
                      u2640 12B2                        u4320 1162                        u4240 0E40  
                      u4160 0BB8                        u4080 08F4                        u4400 1F60  
                      u3361 1A08                        u3281 1778                        u3441 3074  
                      u3521 3160                        u2561 2EA4                        u3601 2D3A  
                      u2801 14BC                        u2721 13CA                        u2641 12AE  
                      u4321 115E                        u4241 0E3C                        u4161 0BB4  
                      u4081 08F0                        u4401 1F5C                        u3370 1A20  
                      u3290 17B2                        u3450 3096                        u3530 3188  
                      u2570 2EBA                        u3610 2D8E                        u2810 1506  
                      u2730 13EC                        u2650 12C4                        u4330 11C8  
                      u4250 0EDA                        u4170 0BD0                        u4090 096E  
                      u4410 1F7C                        u3371 1A1C                        u3291 17AE  
                      u3451 3092                        u3531 3184                        u2571 2EB6  
                      u3611 2D8A                        u2811 1502                        u2731 13E8  
                      u2651 12C0                        u4331 11C2                        u4251 0ED6  
                      u4171 0BCC                        u4091 096A                        u4411 1F78  
                      u5107 29AA                        u3380 1A3A                        u3460 30B2  
                      u2580 2EE2                        u3700 33DE                        u3540 31C8  
                      u3620 38B6                        u2900 15F2                        u2820 153C  
                      u2740 140C                        u2660 12D4                        u4340 11CA  
                      u4260 0F28                        u4180 0C02                        u4420 2064  
                      u3381 1A36                        u3461 30AE                        u2581 2EDE  
                      u3701 33DA                        u3541 31C4                        u3621 38B2  
                      u2901 15EE                        u2821 1538                        u2741 1408  
                      u2661 12D0                        u4261 0F24                        u4181 0BFE  
                      u4421 2060                        u5117 23D0                        u3390 1A82  
                      u3470 30D8                        u2590 2F18                        u3710 3434  
                      u3550 3206                        u2910 1606                        u2830 154C  
                      u2750 141A                        u2670 1310                        u3630 2BA4  
                      u4350 11DE                        u4270 0FD6                        u4190 0C10  
                      u3391 1A7E                        u3471 30D4                        u2591 2F14  
                      u3711 3430                        u3551 3202                        u2911 1602  
                      u2831 1548                        u2751 1416                        u2671 130C  
                      u3631 2BA0                        u4351 11DA                        u4271 0FD2  
                      u4191 0C0C                        u4520 35E2                        u4600 272A  
                      u3480 30FC                        u3720 387A                        u3560 323A  
                      u2920 1620                        u2840 1578                        u2760 142A  
                      u2680 131E                        u3640 2BD8                        u3800 3676  
                      u4280 1012                        u4360 2F8C                        u4521 35DE  
                      u4505 32B6                        u4601 2726                        u3481 30F8  
                      u3721 3876                        u3561 3236                        u2921 161C  
                      u2841 1574                        u2761 1426                        u2681 131A  
                      u4281 100E                        u4361 2F88                        u4610 273A  
                      u3490 3116                        u3570 2CC2                        u2930 165A  
                      u2850 1588                        u2770 145C                        u2690 138C  
                      u3650 2C06                        u3730 2DD8                        u3810 3688  
                      u4290 1020                        u4370 301C                        u4515 32C2  
                      u4507 32B8                        u4435 3256                        u4611 2736  
                      u3491 3112                        u3571 2CBE                        u2931 1656  
                      u2851 1584                        u2771 1458                        u2691 1388  
                      u3651 2C02                        u3811 3684                        u4291 101C  
                      u4371 3018                        u4540 3628                        u4700 3370  
                      u4620 2748                        u3580 2D00                        u2940 166C  
                      u2860 15A4                        u2780 146A                        u3660 2C1A  
                      u3740 2DF6                        u3900 2576                        u3820 3468  
                      u4380 1EC6                        u4541 3624                        u4517 32C4  
                      u4445 3262                        u4437 3258                        u4701 336C  
                      u4621 2744                        u3581 2CFC                        u2941 1668  
                      u2861 15A0                        u2781 1466                        u3661 2C16  
                      u3645 2BCE                        u3741 2DF2                        u3821 3464  
                      u4381 1EC2                        u5077 2956                        u4470 3294  
                      u4710 3396                        u4630 2782                        u4550 2602  
                      u3590 2D1E                        u2950 167C                        u2870 15B4  
                      u2790 1488                        u3670 2C42                        u3750 2E1E  
                      u3910 2592                        u3830 2426                        u4390 1F0A  
                      u4535 3604                        u4471 3290                        u4455 326E  
                      u4447 3264                        u4631 277E                        u4551 25FE  
                      u3591 2D1A                        u2951 1678                        u2871 15B0  
                      u2791 1484                        u3671 2C3E                        u3751 2E1A  
                      u3735 2DCE                        u3911 258E                        u3807 366C  
                      u4391 1F06                        u5087 2972                        u4720 33BE  
                      u4640 2790                        u4560 2610                        u2960 169C  
                      u2880 15C6                        u3680 2C62                        u3760 2E48  
                      u3920 25CE                        u3840 2454                        u4800 2B6C  
                      u4537 3608                        u4465 327A                        u4457 3270  
                      u4641 278C                        u4561 260C                        u2961 1698  
                      u2881 15C2                        u3681 2C5E                        u3761 2E44  
                      u3921 25CA                        u3905 256C                        u3841 2450  
                      u5097 298E                        u4801 2B68                        u4730 33CE  
                      u4570 266C                        u2970 16AE                        u2890 15DC  
                      u3690 2C72                        u3850 2476                        u3930 37D4  
                      u4650 372A                        u4467 327C                        u4731 33CA  
                      u4571 2668                        u2971 16AA                        u2891 15D8  
                      u3691 2C6E                        u3851 2472                        u3835 241C  
                      u3931 37D0                        u4651 3726                        u4740 392A  
                      u4580 26C2                        u3940 27B4                        u2980 16CA  
                      u3780 2E82                        u4660 3900                        u4820 29D4  
                      u4485 329E                        u4717 338C                        u4741 3926  
                      u4581 26BE                        u3941 27AE                        u2981 16C6  
                      u3781 2E7C                        u4661 38FC                        u4901 21EC  
                      u4821 29D0                        u4670 3596                        u4590 270C  
                      u2990 385E                        u3950 27B6                        u3790 2E84  
                      u3870 24E2                        u4830 29E8                        u4750 2A94  
                      u4495 32AA                        u4487 32A0                        u4727 33B4  
                      u4591 2708                        u2991 385A                        u3775 2E5A  
                      u3871 24DE                        u4911 21FE                        u4831 29E4  
                      u4751 2A90                        u4815 3534                        u4680 35BE  
                      u3960 27C8                        u3880 2506                        u4840 2A0E  
                      u4760 2AB6                        u4497 32AC                        u3961 27C4  
                      u3865 248A                        u4921 2210                        u4841 2A0A  
                      u4761 2AB2                        u4690 35CE                        u3970 27E0  
                      u3890 2522                        u3866 2494                        u4930 2260  
                      u4850 2A34                        u4770 2AF0                        u4691 35CA  
                      u3971 27DC                        u3891 251E                        u3867 24A4  
                      u4931 225C                        u4851 2A30                        u4771 2AEC  
                      u3980 280C                        u4940 228C                        u4860 2A54  
                      u4780 2B12                        u4677 358C                        u3981 2808  
                      u3885 24FC                        u4941 2288                        u4861 2A50  
                      u4781 2B0E                        u3990 2822                        u4950 22EA  
                      u4870 2A74                        u4790 2B3A                        u4687 35B4  
                      u3991 281E                        u4951 22E6                        u4871 2A70  
                      u4791 2B36                        u4960 2316                        u4880 21C4  
                      u4961 2312                        u4881 21C0                        u4970 2348  
                      u4971 2344                        u4891 21DA                        abs@a 0007  
                      _dbuf 01A4                        _labs 344A                        _main 3942  
                      _dtoa 27A4                        _prec 00E1                        pad@i 001A  
           __end_of_VOLTAJE 3350                        pad@p 0017                        fsr0h 0FEA  
                      fsr1h 0FE2                        indf0 0FEF                        fsr2h 0FDA  
                      fsr0l 0FE9                        indf2 0FDF                        fsr1l 0FE1  
                      pad@w 001C                        fsr2l 0FD9               ___fpclassifyf 2D98  
                      prodh 0FF4                        prodl 0FF3                        start 0000  
           ___fldiv@new_exp 0039                ___param_bank 0000             __end_of_ReadADC 3942  
                     ??_abs 0009                       ??_pad 0019            __end_of_LCD_Busy 362E  
          __end_of_LCD_Init 2A82            __end_of_LCD_Text 33D0            __end_of_IMPRIMIR 23DE  
             ___fltol@sign1 0009             __end_of___aldiv 2B8E                       ?_labs 0001  
           __end_of___fladd 16DE                       ?_main 0001                       ?_dtoa 001E  
           __end_of___fldiv 1EA2             __end_of___awdiv 30EA             __end_of___flneg 38D8  
           __end_of___awmod 319A             __end_of___flmul 1B08             __end_of___flsub 381C  
           __end_of___fltol 2C94             ___awdiv@divisor 0003             ___awdiv@counter 0005  
                     _RCREG 0FAE                vfpfcnvrt@fmt 008E                       _SPBRG 0FAF  
                     _TRISA 0F92                       _TXREG 0FAD                       _Setup 39FA  
                     _flags 00E3         read_prec_or_width@c 000D         read_prec_or_width@n 000E  
                     _fputc 2E96                       _fputs 381C                       labs@a 0001  
               ?_UART_write 0001                       pad@fp 0013                       _width 00DF  
                     _putch 3A08                       dtoa@d 0020                       dtoa@i 0028  
                     dtoa@p 0024                       dtoa@s 002A                       dtoa@w 0026  
                     tablat 0FF5                       plusw1 0FE3                       plusw2 0FDB  
                     status 0FD8             __end_of_sprintf 3786              ?___fpclassifyf 0001  
           __initialization 34B0                __end_of_labs 34B0                __end_of_main 396A  
              __end_of_dtoa 293A              ReadADC@channel 0005                      ??_labs 0005  
                    ??_main 0060                      ??_dtoa 0022               __activetblptr 0002  
         __end_of_LCD_Write 32CE         UART_init_baud@valor 0017  __end_of_read_prec_or_width 3026  
          __end_of_Setupint 3A1A                      ?_Setup 0001                      _ADCON0 0FC2  
                    _ADCON1 0FC1                      _ADCON2 0FC0                LCD_Text@text 0005  
                    ?_fputc 0003                      ?_fputs 000C                      _ADRESH 0FC4  
                    _ADRESL 0FC3                   ??_VOLTAJE 0045            ___awdiv@dividend 0001  
                    ?_putch 0001                __displaymode 00E4                      _OSCCON 0FD3  
                    _TRISB1 7C99            __end_of___xxtofl 27A4                   ??_ReadADC 0003  
              vfprintf@cfmt 009F                      ___flge 2C94                      ___fleq 319A  
                 ??___aldiv 0009                   ??___fladd 0009                      ___wmul 3990  
                 ??___fldiv 0030                   ??___awdiv 0005                   ??___flneg 0005  
                 ??___awmod 0005                   ??___flmul 0017                   ??___flsub 0030  
                 ??___fltol 0005                      _efgtoa 0826                      _floorf 23DE  
                    _memcpy 3786        read_prec_or_width@ap 0009                ?_UART_printf 0002  
                    clear_0 34F6                      clear_1 3502            ___awdiv@quotient 0007  
           ___awmod@divisor 0003                      isa$std 0001             ___awmod@counter 0005  
                    pad@buf 0015                      _strcat 396A                      dtoa@fp 001E  
                    _strcpy 362E                      _strlen 38D8                      fputc@c 0003  
                _Setupports 39EA                      fputs@c 0010                      fputs@i 0011  
                    fputs@s 000C             ___fpclassifyf@e 0009             ___fpclassifyf@u 000B  
           ___fpclassifyf@x 0001                __mediumconst 0000                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8            __end_of_vfprintf 3736  
                 ??_sprintf 0060                  ___flge@ff1 0028                  ___flge@ff2 002C  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 3508                   ?_LCD_Busy 0001  
                 ?_LCD_Init 0001                  ___flneg@f1 0001                   ?_LCD_Text 0003  
                 ?_IMPRIMIR 0001      UART_init_baud@baudRate 000F               ___rparam_used 0001  
                ___fltol@f1 0001              __pcstackCOMRAM 0001               __end_of_Setup 3A08  
              __pidataBANK0 39B6                __pidataBANK2 368A               __end_of_fputc 2F60  
             __end_of_fputs 3860               __end_of_putch 3A12                     ??_Setup 0001  
                   ??_fputc 0007                     ??_fputs 0010                     ??_putch 0002  
                __pbssBANK0 00D7                  __pbssBANK1 01A0                  ??_LCD_Busy 0001  
                ??_LCD_Init 0003                  ??_LCD_Text 0005                  ??_IMPRIMIR 00B7  
                   ?___flge 0028                     ?___fleq 0001                   ?_Setupint 0001  
                   ?___wmul 0001                     ?_efgtoa 0055                     ?_floorf 0041  
                   ?_memcpy 0001                     ?_strcat 000F                     ?_strcpy 0005  
                   ?_strlen 0001                 ?_Setupports 0001                   ?___xxtofl 0001  
              ??_UART_write 0001                     _VOLTAJE 32CE              VOLTAJE@voltaje 0045  
                   _ReadADC 390E                     __Hparam 0000                     __Lparam 0000  
             LCD_Write@mode 0001                     ___aldiv 2A82                  ??_Setupint 0001  
                   ___fladd 121E                     ___fldiv 1B08                     ___awdiv 3026  
                   ___flneg 38A0                     ___awmod 30EA                     ___flmul 16DE  
                   ___flsub 37D6                     ___fltol 2B8E                   ?_vfprintf 0099  
              __psmallconst 0800                     __pcinit 34B0                     __ramtop 0800  
        __end_of_UART_write 39EA                     __ptext0 3942                     __ptext1 3512  
                   __ptext2 2A82                     __ptext3 39FA                     __ptext4 39EA  
                   __ptext5 3A18                     __ptext6 3A12                     __ptext7 293A  
                   __ptext8 21B0                     __ptext9 396A       read_prec_or_width@fmt 0007  
                ??___xxtofl 0005            ___awmod@dividend 0001            ___aldiv@dividend 0001  
                   efgtoa@c 005B                     efgtoa@d 006B                     efgtoa@e 006F  
                   efgtoa@f 0057                     efgtoa@g 0084                     efgtoa@h 0079  
                   efgtoa@i 0077                     efgtoa@l 007D                     efgtoa@m 006D  
                   efgtoa@n 0082                     efgtoa@p 0062                     efgtoa@t 0064  
                   efgtoa@u 0088                     efgtoa@w 0071             __displaycontrol 00E5  
                   _sprintf 3736                   _LCD_Write 3244        end_of_initialization 3508  
                   floorf@e 004F                     floorf@m 004B                     floorf@u 0051  
                   floorf@x 0041               IMPRIMIR@F5133 00B9               IMPRIMIR@F5135 023C  
             IMPRIMIR@F5137 021E               IMPRIMIR@F5139 0200                     memcpy@d 0007  
                   memcpy@n 0005                     memcpy@s 0009                     fputc@fp 0005  
             __Lmediumconst 0000                     fputs@fp 000E          _read_prec_or_width 2F60  
            _SetupOscilador 3A12           __end_of_vfpfcnvrt 21B0                  efgtoa@mode 0069  
                efgtoa@sign 0081                   _RCSTAbits 0FAB            ___aldiv@quotient 000B  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 0007  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 0092                  ??_vfprintf 0060                     strcpy@d 000D  
                   strlen@a 0003                     strcpy@s 000B                     strlen@s 0001  
                 _PORTAbits 0F80                 ___fladd@grs 0010               ___xxtofl@sign 0009  
                 _TRISAbits 0F92                   _TRISCbits 0F94        ??_read_prec_or_width 000B  
               ___fldiv@grs 003B                 ___fldiv@rem 0034                  ?_LCD_Write 0001  
    __end_of_SetupOscilador 3A18                 ___flmul@grs 001C                   _TXSTAbits 0FAC  
                LCD_Text@pt 0003              __end_of___flge 2D98              __end_of___fleq 3244  
         IMPRIMIR@imprimir2 015A           IMPRIMIR@imprimir3 0178           IMPRIMIR@imprimir4 0100  
         IMPRIMIR@imprimir5 011E           IMPRIMIR@imprimir6 013C              _UART_init_baud 3512  
               vfpfcnvrt@ap 0090                 vfpfcnvrt@cp 0097                 vfpfcnvrt@fp 008C  
            __end_of___wmul 39B6              __end_of_efgtoa 121E              __end_of_floorf 25F0  
            __end_of_memcpy 37D6                  floorf@F526 00D7              __end_of_strcat 3990  
            __end_of_strcpy 368A              __end_of_strlen 390E         start_initialization 34B0  
              _LCD_busy_cnt 00E6                 __end_of_abs 38A0                 __end_of_pad 344A  
           ?_SetupOscilador 0001       __end_of___fpclassifyf 2E96                 vfprintf@fmt 009B  
                  ??___flge 0030                    ??___fleq 0009      __end_of_UART_init_baud 3572  
                  ??___wmul 0005                    ??_efgtoa 005C                 __pdataBANK0 00B9  
               __pdataBANK2 0200                    ??_floorf 0045                    ??_memcpy 0007  
                  ??_strcat 0013                    ??_strcpy 0009                    ??_strlen 0003  
                 ___fladd@a 0005                   ___fladd@b 0001                ??_Setupports 0001  
                 ___fldiv@a 002C                   ___fldiv@b 0028                   ___flmul@a 0013  
                 ___flmul@b 000F                   ___flsub@a 002C                   ___flsub@b 0028  
             __pcstackBANK0 0060               __pcstackBANK1 0100                    ?_VOLTAJE 0041  
               ??_LCD_Write 0002           UART_printf@cadena 0002                    ?_ReadADC 0001  
               _efgtoa$1175 0066                   _dtoa$1144 0022          __end_of_Setupports 39FA  
           ?_UART_init_baud 000F                    ?___aldiv 0001                    ?___fladd 0001  
                  ?___fldiv 0028                    ?___awdiv 0001                    ?___flneg 0001  
                  ?___awmod 0001                    ?___flmul 000F                    ?___flsub 0028  
                  ?___fltol 0001                 __smallconst 0800                    ?_sprintf 00A1  
           ___aldiv@divisor 0005             ___aldiv@counter 0009                    _LCD_Busy 35D0  
                  _LCD_Init 293A              ___wmul@product 0005                    _LCD_Text 3350  
                  _LATAbits 0F89                    _LCD_data 00E7                    _IMPRIMIR 21B0  
                  _PIR1bits 0F9E                    _GO_nDONE 7E11               ??_UART_printf 0004  
                 _vfpfcnvrt 1EA2           ___wmul@multiplier 0001              UART_write@dato 0001  
                VOLTAJE@ADC 0041            IMPRIMIR@imprimir 0196                  vfpfcnvrt@c 0096  
                 copy_data0 34C4                   copy_data1 34E4                    __Hrparam 0000  
                 memcpy@tmp 000B                  vfprintf@ap 009D                    __Lrparam 0000  
                vfprintf@fp 0099              LCD_Write@value 0002                    _Setupint 3A18  
                ?_vfpfcnvrt 008C          ___fpclassifyf@F465 00DB                  sprintf@fmt 00A3  
                  ___xxtofl 25F0                  strcat@dest 000F         __end_of_UART_printf 35D0  
          ??_SetupOscilador 0001                    __ptext10 38D8                    __ptext11 3736  
                  __ptext20 23DE                    __ptext12 36E4                    __ptext21 2D98  
                  __ptext13 1EA2                    __ptext30 381C                    __ptext22 2B8E  
                  __ptext14 2F60                    __ptext31 2E96                    __ptext23 37D6  
                  __ptext15 3990                    __ptext40 3572                    __ptext32 3A08  
                  __ptext24 121E                    __ptext16 0826                    __ptext41 39D4  
                  __ptext33 3860                    __ptext25 38A0                    __ptext17 362E  
                  __ptext42 390E                    __ptext34 30EA                    __ptext26 2C94  
                  __ptext18 3786                    __ptext43 3350                    __ptext35 3026  
                  __ptext27 319A                    __ptext19 344A                    __ptext44 3244  
                  __ptext36 32CE                    __ptext28 27A4                    __ptext45 35D0  
                  __ptext37 25F0                    __ptext29 33D0                    __ptext38 16DE  
                  __ptext39 1B08                  strcpy@dest 0005                    efgtoa@fp 0055  
                  efgtoa@ne 0060                    efgtoa@pp 0068                    efgtoa@ou 0073  
                  isa$xinst 0000                    _vfprintf 36E4                   putch@dato 0002  
                  memcpy@d1 0001                    memcpy@s1 0003                   sprintf@ap 00A9  
                 strcat@src 0011            ??_UART_init_baud 0013                   strcpy@src 0007  
               efgtoa@nmode 006A                 ??_vfpfcnvrt 005E                 _UART_printf 3572  
                  sprintf@f 00AB                    sprintf@s 00A1                ___aldiv@sign 000A  
             ___fladd@signs 000D                  _UART_write 39D4                ___fladd@aexp 000E  
              ___fladd@bexp 000F  
